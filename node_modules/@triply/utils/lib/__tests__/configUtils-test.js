import { expect } from "chai";
import { getEnvironmentVarsAsObject, getObjectAsEnvVars } from "../configUtils.js";
import { it } from "../mocha.js";
describe("Config utils", function () {
    it("Should create correct object", function () {
        const envVariables = {
            TRIPLY__SOMETHING: "1",
            TRIPLY__SOMETHING_ELSE: "true",
            TRIPLY__SOME_OBJECT__VAL1: "somestring",
            TRIPLY__SOME_ARRAY__0: "arrayValue",
            TRIPLY__SOME_OTHER_ARRAY__10: "arrayValue",
        };
        expect(getEnvironmentVarsAsObject({ envPrefix: "TRIPLY__", env: envVariables })).to.deep.equal({
            something: 1,
            somethingElse: true,
            someObject: {
                val1: "somestring",
            },
            someArray: ["arrayValue"],
            someOtherArray: [, , , , , , , , , , "arrayValue"],
        });
    });
    it("Should serialize back properly to env vars", function () {
        const envVariables = {
            TRIPLY__SOMETHING: "1",
            TRIPLY__SOMETHING_ELSE: "true",
            TRIPLY__SOME_OBJECT__VAL1: "somestring",
            TRIPLY__SOME_ARRAY__0: "arrayValue",
            TRIPLY__SOME_OTHER_ARRAY__10: "arrayValue",
        };
        expect(getObjectAsEnvVars({
            envPrefix: "TRIPLY__",
            obj: getEnvironmentVarsAsObject({ envPrefix: "TRIPLY__", env: envVariables }),
        })).to.deep.equal(envVariables);
    });
    it("Should preserve casing properly", function () {
        const envVariables = {
            TRIPLY__Something: "1",
            TRIPLY__SOMETHING_ELSE: "true",
            TRIPLY__SomeObject__VAL1: "somestring",
            TRIPLY__someARRAY__0: "arrayValue",
            TRIPLY__SOME_OTHER_ARRAY__10: "arrayValue",
        };
        expect(getEnvironmentVarsAsObject({ envPrefix: "TRIPLY__", env: envVariables, preserveVariableNameCasing: true })).to.deep.equal({
            Something: 1,
            SOMETHING_ELSE: true,
            SomeObject: {
                VAL1: "somestring",
            },
            someARRAY: ["arrayValue"],
            SOME_OTHER_ARRAY: [, , , , , , , , , , "arrayValue"],
        });
    });
});
//# sourceMappingURL=configUtils-test.js.map