import { extname } from "path";
import * as url from "url";
export const HDT_MIN_STATEMENTS = 1;
export const HDT_MAX_STATEMENTS = 10000;
export const SPARQL_SERVICE_TYPES = ["virtuoso", "jena", "blazegraph", "prolog"];
export const SERVICE_TYPES = [...SPARQL_SERVICE_TYPES, "elasticSearch"];
export const QUERY_TYPES = ["sparql", "search"];
export const MAX_EXAMPLE_RESOURCES = 30;
export const MAX_DATASET_NAME_LENGTH = 40;
export const MAX_ACCOUNT_NAME_LENGTH = 40;
export const MAX_SERVICE_NAME_LENGTH = 40;
export const MAX_QUERY_NAME_LENGTH = 40;
export const MAX_STORY_NAME_LENGTH = 40;
export const MAX_GRAPHS_ON_LANDING_PAGE = 10;
export const SERVICE_GRAPHS_PAGE_SIZE = 30;
export const FACETED_SEARCH_PAGE_SIZE = 50;
export const FACETED_SEARCH_NULL_ALIAS = "Unset";
export const BACKWARD_SUBJECTS_PAGE_SIZE = 40;
export const FORWARD_OBJECT_PAGE_SIZE = 10;
export const BACKWARD_PREDICATES_PAGE_SIZE = 10;
export const FORWARD_PREDICATES_PAGE_SIZE = 50;
export const RESERVED_SPARQL_VARNAMES = ["page", "pageSize", "pageMeta"];
export const VIRTUOSO_SPARQL_RESULT_SET_MAX_ROWS = 10000;
export const SPARQL_RESULT_DEFAULT_PAGE_SIZE = 100;
export const SPARQL_RETRY_CONSTRUCT_SHRINK_FACTOR = 0.8;
export const AVATAR_SIZE_LIMIT = "5mb";
export const GENERIC_FILE_UPLOAD_ERROR_MESSAGE = "An error occurred while uploading the file.";
export const DUPLICATE_ASSETNAME_ERROR_MESSAGE = "An asset with this name has already been uploaded.";
export const CANT_CREATE_ZERO_GRAPH_SERVICE_MESSAGE = "Cannot create a service for a dataset without graphs.";
export const NO_ACCOUNTS_LEFT_MESSAGE = "There are currently no more available accounts.";
export const SUBSCRIPTIONS_PAGE = "https://triply.cc/subscriptions";
export const SPARQL_VARNAME_CHARS = "[0-9a-zA-Z_\u00C0-\u00D6\u00D8-\u00F6\u0370-\u037d\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]";
export const SUPPORTED_EXTENSIONS = [
    "gz", "bz2", "xz", "tar", "zip", "tgz",
    "jsonld",
    "json",
    "rdf",
    "rdfs",
    'owx',
    'owl',
    "nt",
    "ttl",
    "nq",
    "trig",
    "n3",
    "csv",
    "tsv",
];
const imageExtensions = [".jpg", ".jpeg", ".png", ".gif", ".svg", ".bmp", ".tiff"];
export const RESOURCE_WIDGET_PATTERNS = {
    IMAGE_PATTERNS: [
        ["http://xmlns.com/foaf/0.1/depiction", null, "http://xmlns.com/foaf/0.1/thumbnail", null],
        ["https://schema.org/image", null, "https://schema.org/contentUrl"],
        ["https://schema.org/thumbnail", null, "https://schema.org/contentUrl"],
        ["http://www.w3.org/1999/02/22-rdf-syntax-ns#type", { value: "https://schema.org/ImageObject" }],
        ["http://xmlns.com/foaf/0.1/depiction", null],
        ["http://xmlns.com/foaf/0.1/thumbnail", null],
        ["https://schema.org/image"],
        [null, { datatype: "https://triply.cc/triply/def/imageURI" }],
        [
            null,
            {
                datatype: "http://www.w3.org/2001/XMLSchema#anyURI",
                validationFunction: (term) => {
                    try {
                        const parsedTerm = url.parse(term.value);
                        return (imageExtensions.indexOf(extname(parsedTerm.pathname || "").toLowerCase()) >= 0 ||
                            imageExtensions.indexOf(extname(parsedTerm.search || "").toLowerCase()) >= 0);
                    }
                    catch (e) {
                        return false;
                    }
                },
            },
        ],
    ],
    LABEL_PATTERNS: [
        ["http://www.w3.org/2000/01/rdf-schema#label", { language: "en" }],
        ["http://www.w3.org/2000/01/rdf-schema#label", undefined],
        ["http://xmlns.com/foaf/0.1/name", { language: "en" }],
        ["http://xmlns.com/foaf/0.1/name", undefined],
        ["https://schema.org/name", { language: "en" }],
        ["https://schema.org/name", undefined],
        ["http://www.w3.org/2004/02/skos/core#prefLabel", { language: "en" }],
        ["http://www.w3.org/2004/02/skos/core#prefLabel", undefined],
        ["http://purl.org/dc/terms/title", { language: "en" }],
        ["http://purl.org/dc/terms/title", undefined],
        ["http://purl.org/dc/elements/1.1/title", { language: "en" }],
        ["http://purl.org/dc/elements/1.1/title", undefined],
        ["http://www.w3.org/ns/shacl#name", { language: "en" }],
        ["http://www.w3.org/ns/shacl#name", undefined],
    ],
    GEO_PATTERNS: [
        ["http://www.opengis.net/ont/geosparql#asWKT", undefined],
        ["http://www.opengis.net/ont/geosparql#hasGeometry", undefined, "http://www.opengis.net/ont/geosparql#asWKT"],
    ],
    LAT_PATTERNS: [["http://www.w3.org/2003/01/geo/wgs84_pos#lat", undefined]],
    LONG_PATTERNS: [["http://www.w3.org/2003/01/geo/wgs84_pos#long", undefined]],
    AUDIO_PATTERNS: [
        ["https://schema.org/audio"],
        ["http://www.w3.org/1999/02/22-rdf-syntax-ns#type", { value: "https://schema.org/AudioObject" }],
    ],
    VIDEO_PATTERNS: [
        ["https://schema.org/video"],
        ["http://www.w3.org/1999/02/22-rdf-syntax-ns#type", { value: "https://schema.org/VideoObject" }],
    ],
    MEDIA_PATTERNS: [["https://schema.org/contentUrl"]],
    MEDIA_ENCODING_PATTERNS: [["https://schema.org/encodingFormat"]],
};
export const LICENSES = {
    "CC0 1.0": {
        url: "https://creativecommons.org/publicdomain/zero/1.0/",
        version: "v1.0",
        acronym: "CC0 1.0",
        gui_name: "CC0 1.0 Universal",
        deprecated: false,
    },
    "CC BY": {
        url: "https://creativecommons.org/licenses/by/4.0/",
        version: "v4.0",
        acronym: "CC BY",
        gui_name: "Attribution 4.0 International",
        deprecated: false,
    },
    "CC BY-ND": {
        url: "https://creativecommons.org/licenses/by-nd/4.0/",
        version: "v4.0",
        acronym: "CC BY-ND",
        gui_name: "Attribution-NoDerivatives 4.0 International",
        deprecated: false,
    },
    "CC BY-NC": {
        url: "https://creativecommons.org/licenses/by-nc/4.0/",
        version: "v4.0",
        acronym: "CC BY-NC",
        gui_name: "Attribution-NonCommercial 4.0 International",
        deprecated: false,
    },
    "CC BY-NC-ND": {
        url: "https://creativecommons.org/licenses/by-nc-nd/4.0/legalcode",
        version: "v4.0",
        acronym: "CC BY-NC-ND",
        gui_name: "Attribution-NonCommercial-NoDerivatives 4.0 International",
        deprecated: false,
    },
    "CC BY-NC-SA": {
        url: "https://creativecommons.org/licenses/by-nc-sa/4.0/",
        version: "v4.0",
        acronym: "CC BY-NC-SA",
        gui_name: "Attribution-NonCommercial-ShareAlike 4.0 International",
        deprecated: false,
    },
    "CC BY-SA v4.0": {
        url: "https://creativecommons.org/licenses/by-sa/4.0/",
        version: "v4.0",
        acronym: "CC BY-SA v4.0",
        gui_name: "Attribution-ShareAlike 4.0 International",
        deprecated: false,
    },
    "ODC-By": {
        url: "https://opendatacommons.org/licenses/by/1-0/",
        version: "v1.0",
        acronym: "ODC-By",
        gui_name: "Open Data Commons Attribution License 1.0",
        deprecated: false,
    },
    "ODC-ODbL": {
        url: "https://opendatacommons.org/licenses/odbl/1-0/",
        version: "v1.0",
        acronym: "ODC-ODbL",
        gui_name: "Open Data Commons Open Database License 1.0",
        deprecated: false,
    },
    PDDL: {
        url: "https://opendatacommons.org/licenses/pddl/1-0/",
        version: "v1.0",
        acronym: "PDDL",
        gui_name: "Open Data Commons Public Domain Dedication and License 1.0",
        deprecated: false,
    },
    "CC-BY-SA": {
        url: "https://creativecommons.org/licenses/by-sa/3.0/",
        version: "v3.0",
        acronym: "CC BY-SA",
        gui_name: "Attribution-ShareAlike 3.0 International",
        deprecated: true,
    },
    GFDL: {
        url: "https://www.gnu.org/licenses/fdl-1.3.html",
        version: "v1.3",
        acronym: "GFDL",
        gui_name: "GNU Free Documentation License",
        deprecated: true,
    },
};
export const LicenseNames = [...Object.keys(LICENSES), null];
export const INSIGHTS_IRI_FOR_CLASS_UNKNOWN = "UNKNOWN:unknown";
//# sourceMappingURL=Constants.js.map