import crypto from "crypto";
import fs from "fs-extra";
import { defaults } from "lodash-es";
var hashDefaults = {
    encoding: "hex",
    algorithm: "sha1",
};
export function hashFromFile(filename, hashConfig = {}) {
    return new Promise(function (resolve, reject) {
        defaults(hashConfig, hashDefaults);
        var fd = fs.createReadStream(filename);
        var hash = crypto.createHash(hashConfig.algorithm);
        fd.on("data", function (chunk) {
            hash.update(chunk);
        });
        fd.on("end", function () {
            resolve(hash.digest(hashConfig.encoding));
        });
        fd.on("error", function (err) {
            reject(err);
        });
    });
}
export function hashFromString(value, hashConfig = {}) {
    defaults(hashConfig, hashDefaults);
    return crypto.createHash(hashConfig.algorithm).update(value).digest(hashConfig.encoding);
}
//# sourceMappingURL=crypto.js.map