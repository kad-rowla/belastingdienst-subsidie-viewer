interface ParsedCalver {
    originalSegments?: [year: string, month: string, versionInMonth: string, patch?: string];
    yearShort: number;
    month: number;
    versionInMonth: number;
    patch?: number;
}
export declare function parse(calver: string): ParsedCalver;
export declare function validate(calverOrSemver: ParsedCalver, opts?: {
    currentDate?: Date;
}): ParsedCalver;
export declare function serializeCalver(calver: ParsedCalver): string;
export declare function increment(currentVersion: string, opts?: {
    patch?: boolean;
    currentDate?: Date;
}): string;
export declare function isSemver(version: string, opts?: {
    currentDate?: Date;
}): boolean;
export declare function isCalver(version: string): boolean;
export declare function gt(lhs: string, rhs: string, opts?: {
    currentDate?: Date;
}): boolean;
export declare function gte(lhs: string, rhs: string, opts?: {
    currentDate?: Date;
}): boolean;
export declare function lt(lhs: string, rhs: string, opts?: {
    currentDate?: Date;
}): boolean;
export declare function lte(lhs: string, rhs: string, opts?: {
    currentDate?: Date;
}): boolean;
export {};
//# sourceMappingURL=calver.d.ts.map