import AsyncIteratorHelper, { AsyncConfig } from "./AsyncIteratorHelper.js";
export interface AsyncConfigWithToFile<ResultType, OutputClass> extends AsyncConfig<ResultType, OutputClass> {
    isBindings?: boolean;
}
export default class AsyncIteratorHelperWithToFile<ResultType, OutputClass> extends AsyncIteratorHelper<ResultType, OutputClass> {
    private isBindings?;
    constructor(config: AsyncConfigWithToFile<ResultType, OutputClass>);
    private compress;
    private getFileHandle;
    private writeToFile;
    private closeFile;
    toFile(filePath: string, opts?: {
        compressed?: boolean;
    }): Promise<void>;
}
//# sourceMappingURL=AsyncIteratorHelperWithToFile.d.ts.map