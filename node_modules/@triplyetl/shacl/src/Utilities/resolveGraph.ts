import { type Store } from '@triplydb/data-factory'
import { type Term, type Quad } from '@triplydb/data-factory/Terms.js'

const getGraph = (source: Store, startNode: Term, target: Quad[] = [], seen: Set<string> = new Set()): Quad[] => {
  const objects: Term[] = []
  source.getQuads(startNode, null, null, null).forEach((quad) => {
    const stringified = JSON.stringify(quad)
    if (!seen.has(stringified)) {
      seen.add(stringified)
      target.push(quad)
      if (quad.object.termType === 'BlankNode' || quad.object.termType === 'NamedNode') {
        getGraph(source, quad.object, target, seen)
        objects.push(quad.object)
      }
    }
  })
  return target
}

export default getGraph
