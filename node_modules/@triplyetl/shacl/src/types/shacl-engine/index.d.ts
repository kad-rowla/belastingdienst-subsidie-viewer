declare module 'shacl-engine' {
  import { type DefaultFactory, type Store } from '@triplydb/data-factory'
  import { type Quad } from '@triplydb/data-factory/Terms.js'
  import type Report from 'shacl-engine/lib/Report.js'
  import type TermMap from '@rdfjs/term-map'

  interface DefaultFactoryWithDataset extends DefaultFactory {
    dataset: (quads?: Quad[]) => Store
  }
  interface Options {
    factory: DefaultFactoryWithDataset
    debug?: boolean
    details?: boolean
    trace?: boolean
    coverage?: boolean
  }

  declare class Validator {
    factory: DefaultFactoryWithDataset
    options: Partial<Options>
    constructor (dataset: Store, opts?: Partial<Options>)
    shapesPtr: any
    shapes: TermMap
    shape: (ptr: any) => any
    validate (data: { dataset: Store, terms?: Term[] }, shapes?: Array<{ terms: Term[] }>): Promise<Report>
  }
}
