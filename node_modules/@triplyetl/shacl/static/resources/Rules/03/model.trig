# External declarations.
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix sh:  <http://www.w3.org/ns/shacl#>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

# Project-specific declarations.
prefix def:   <http://example.org/model/def/>
prefix graph: <http://example.org/graph/>
prefix rule:  <http://example.org/model/rule/>
prefix shp:   <http://example.org/model/shp/>

graph:rectangle {

  def:
    sh:declare [
      sh:prefix "def" ;
      sh:namespace def: ;
    ] .

  shp:Rectangle
    a sh:NodeShape;
    sh:closed true;
    sh:ignoredProperties ( rdf:type );
    sh:property
      shp:Rectangle_height,
      shp:Rectangle_width;
    sh:rule
      rule:Rectangle_area,
      rule:Rectangle_square;
    sh:targetClass def:Rectangle.

  shp:Rectangle_height
    a sh:PropertyShape;
    sh:datatype xsd:integer;
    sh:maxCount 1;
    sh:minCount 1;
    sh:path def:height.

  shp:Rectangle_width
    a sh:PropertyShape;
    sh:datatype xsd:integer;
    sh:maxCount 1;
    sh:minCount 1;
    sh:path def:width.

  rule:Rectangle_area
    a sh:SPARQLRule;
    sh:prefixes def: ;
    sh:construct
'''
construct {
  $this def:area ?area.
} where {
  $this
    def:height ?height;
    def:width ?width.
  bind(?width * ?height as ?area)
}'''.

  rule:Rectangle_square
    a sh:SPARQLRule;
    sh:prefixes def: ;
    sh:construct
'''
construct {
  $this a def:Square.
} where {
  $this
    def:height ?height;
    def:width ?width.
  filter(?height = ?width)
}
'''.

}
