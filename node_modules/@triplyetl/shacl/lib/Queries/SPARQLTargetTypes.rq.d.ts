declare const _default: "\nprefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nprefix sh: <http://www.w3.org/ns/shacl#> \nprefix xsd: <http://www.w3.org/2001/XMLSchema#>\nselect ?shape ?varName ?value ?target (concat(if(bound(?declarations), concat(?declarations, \"\\n\"), ''), ?select) as ?query) where {\n  select ?shape ?varName ?value ?select ?target (group_concat(?declaration; separator=\"\\n\") as ?declarations) where {\n    ?shape sh:target ?target .\n    ?target a/a sh:SPARQLTargetType .\n    ?target a ?SPARQLTargetType .\n    ?SPARQLTargetType sh:parameter/sh:path ?variable .\n    ?SPARQLTargetType sh:select ?select .\n    ?target ?variable ?value .\n    bind(replace(str(?variable),'.*[/#]','') as ?varName)\n    optional {\n      ?SPARQLTargetType sh:prefixes/sh:declare ?declare .\n      ?declare sh:prefix ?prefix; sh:namespace ?namespace .\n      bind(concat('prefix ', ?prefix, ': ', '<', str(?namespace), '>') as ?declaration)\n    }\n    optional {\n      ?SPARQLTargetType sh:parameter/sh:class ?class .\n      ?value a/rdfs:subClassOf* ?class\n    }\n    optional {?SPARQLTargetType sh:parameter/sh:class ?classDefined .}\n    filter((bound(?classDefined) && bound(?class)) || bound(?classDefined) = false)\n  } group by ?shape ?varName ?value ?select ?target\n}\n";
export default _default;
//# sourceMappingURL=SPARQLTargetTypes.rq.d.ts.map