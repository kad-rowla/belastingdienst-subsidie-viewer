declare const _default: "\nprefix sh: <http://www.w3.org/ns/shacl#> \nprefix def: <https://triplydb.com/model/def/>\nprefix xsd: <http://www.w3.org/2001/XMLSchema#>\n\nselect \n  ?component\n  ?labelTemplate\n  ?path\n  ?nodeShape\n  ?validator\n  ?value\n  ?propertyPath\n  ?focusNode\n  ?focusNodeValue\n  (concat(group_concat(coalesce(?declaration, \"\"); separator=\"\\n\"), ?select) as ?query)\nwhere {\n  ?component a sh:ConstraintComponent .\n  optional { ?component sh:labelTemplate ?labelTemplate }\n  ?component sh:parameter/sh:path ?path .\n  ?nodeShape sh:property ?propertyShape .\n  optional { ?component sh:propertyValidator ?propertyValidator . }\n  optional { ?component sh:nodeValidator ?nodeValidator . }\n  bind(coalesce(?propertyValidator, ?nodeValidator) as ?validator)\n  ?validator a sh:SPARQLSelectValidator .\n  ?validator sh:select ?select .\n  optional { ?validator sh:message ?message }\n  ?propertyShape ?path ?value; sh:path ?propertyPath .\n  ?focusNode ?propertyPath ?focusNodeValue .\n  optional {\n    ?validator sh:prefixes/sh:declare ?declare .\n    ?declare sh:prefix ?prefix; sh:namespace ?namespace .\n    bind(concat('prefix ', ?prefix, ': ', '<', str(?namespace), '>') as ?declaration)\n  }\n} group by ?component ?labelTemplate ?path ?nodeShape ?validator ?value ?select ?propertyPath ?focusNode ?focusNodeValue\n";
export default _default;
//# sourceMappingURL=SPARQLSelectValidator.rq.d.ts.map