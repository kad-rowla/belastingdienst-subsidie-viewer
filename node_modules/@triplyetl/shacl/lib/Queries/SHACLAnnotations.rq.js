export default (shape, focusNode) => {
    const shapeString = shape.termType === 'BlankNode' ? `_:${shape.value}` : `<${shape.value}>`;
    const focusNodeString = focusNode.termType === 'BlankNode' ? `_:${focusNode.value}` : `<${focusNode.value}>`;
    return `
prefix sh: <http://www.w3.org/ns/shacl#>
select ?annotationProperty ?annotationVarName ?value  where {
  ${shapeString} sh:sparql/sh:resultAnnotation ?resultAnnotation .
  ?resultAnnotation sh:annotationProperty ?annotationProperty .
  optional { ?resultAnnotation sh:annotationVarName ?annotationVarName }
  optional { ?resultAnnotation sh:annotationValue ?defaultValue }
  optional { ${focusNodeString} ?annotationProperty ?annotationPropertyValue }
  bind(coalesce(?annotationPropertyValue, ?defaultValue) as ?value)
}`;
};
//# sourceMappingURL=SHACLAnnotations.rq.js.map