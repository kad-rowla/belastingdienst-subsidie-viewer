import type ValidationResult from './ValidationResult.js';
import { type SparqlEngine } from '@triplydb/engine/SparqlEngine.js';
import { type Options as WriterOptions } from '../Writer.js';
import { type NamedNode, type Literal } from '@triplydb/data-factory/Terms.js';
export default abstract class ConstraintComponent {
    protected readonly result: ValidationResult;
    protected readonly engine: SparqlEngine;
    protected readonly opts: WriterOptions;
    constructor(result: ValidationResult, engine: SparqlEngine, opts: WriterOptions);
    protected format(template: string, ...parameters: any): string;
    protected shrink(term: NamedNode): string;
    protected literalToString(term: Literal): string;
    protected resultMessagesToString(): string;
    protected valuesToString(suffix?: string): string;
    abstract toString(): Promise<string>;
}
//# sourceMappingURL=ConstraintComponent.d.ts.map