import { type DefaultFactory, type Store } from '@triplydb/data-factory';
import type Report from '../Report.js';
import { type SparqlEngine } from '@triplydb/engine/SparqlEngine.js';
/**
 * SHACL-SPARQL supports a constraint component that can be used to express restrictions based on a SPARQL SELECT query.
 *
 * This function modifies the validation report and adds new sh:result nodes when applicable
 *
 * @see https://www.w3.org/TR/shacl/#sparql-constraints
 * @param opts
 * @returns a boolean that indicates if non-conforming data is detected
 */
export default function SPARQLConstraints(opts: {
    report: Report;
    store: Store;
    engine?: SparqlEngine;
    factory?: DefaultFactory;
}): Promise<boolean>;
//# sourceMappingURL=SPARQLConstraint.d.ts.map