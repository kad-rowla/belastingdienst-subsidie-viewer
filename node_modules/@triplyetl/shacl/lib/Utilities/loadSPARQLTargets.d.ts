import { type DefaultFactory, Store } from '@triplydb/data-factory';
import { type SparqlEngine } from '@triplydb/engine/SparqlEngine.js';
export interface Options {
    shapes: Store;
    data?: Store;
    engine?: SparqlEngine;
    factory?: DefaultFactory;
}
export declare const getEngineFromOptions: (opts: Options) => SparqlEngine;
/**
 * Use this function to preload you model with SPARQL Targets
 *
 * @param opts.shapes a RdfJs dataset/store containing the shapes
 * @param opts.data an optional RdfJs dataset/store containing the data
 * @param opts.engines a Speedy engine, use this if you want to re-use the engine for other usage
 * @param opts.factory an optional DataFactory
 * @see https://www.w3.org/TR/shacl-af/#SPARQLTarget
 */
export default function loadSPARQLTargets(opts: Options): Promise<Store>;
/**
 * 3.1 SPARQL-based Targets
 *
 * @see https://www.w3.org/TR/shacl-af/#SPARQLTarget
 */
export declare function getSPARQLTargets(datasetOrEngine: Store, factory?: DefaultFactory): Promise<Store>;
export declare function getSPARQLTargets(datasetOrEngine: SparqlEngine, factory?: DefaultFactory): Promise<Store>;
//# sourceMappingURL=loadSPARQLTargets.d.ts.map