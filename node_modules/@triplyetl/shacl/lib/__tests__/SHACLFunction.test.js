// This test should not be here, just trying to see if we comply with the MWA from SHACL website
import { assert } from 'chai';
import getDatasetFromResource from '../Utilities/getDatasetFromResource.js';
import { newEngine } from '@triplydb/speedy-memory';
import { getFactory } from '@triplydb/data-factory';
import { xsd } from '@triplyetl/vocabularies';
describe('Test SHACL Function', () => {
    it('should work with SHACL-AF example', async () => {
        const dataset = getDatasetFromResource('static/resources/SHACLFunction.ttl');
        const engine = newEngine(dataset);
        await engine.initializeShaclSparqlFunctions();
        const query = `
prefix ex: <http://example.org/>
select ?area
where {
  ?subject ex:width ?width .
  ?subject ex:height ?height .
  bind (ex:multiply(?width, ?height) AS ?area) .
}
    `;
        await engine.query(query)
            .then(results => {
            assert.equal(results.type, 'bindings');
            return results;
        })
            .then(async (results) => await results.toArray())
            .then(bindings => {
            var _a;
            assert.equal(bindings.length, 1);
            assert.isTrue(bindings[0].area !== undefined);
            assert.isTrue((_a = bindings[0].area) === null || _a === void 0 ? void 0 : _a.equals(getFactory().literal('6', xsd.integer)));
        });
    });
});
//# sourceMappingURL=SHACLFunction.test.js.map