{
  "name": "@triplyetl/vocabularies",
  "version": "1.1.11",
  "description": "Common Linked Data vocabularies made available as Typescript objects.",
  "main": "lib/Vocabularies/index.js",
  "type": "module",
  "scripts": {
    "build": "tsc",
    "create": "echo TODO",
    "dev": "tsc --watch --preserveWatchOutput",
    "test": "mocha \"./lib/**/*.test.js\"",
    "format": "prettier 'src/**/*.ts' --write",
    "lint:check": "eslint . --ext .ts",
    "lint": "eslint . --fix --ext .ts",
    "preversion": "isCleanBranch",
    "postversion": "versionToBranch",
    "prepare": "husky install"
  },
  "repository": {
    "type": "git",
    "url": "https://git.triply.cc/triply/vocabularies"
  },
  "keywords": [
    "triplyETL",
    "ontology",
    "vocabulary"
  ],
  "author": "Triply <support@triply.cc>",
  "license": "UNLICENSED",
  "dependencies": {
    "@triplydb/data-factory": "^3.0.0",
    "language-tags": "^1.0.9"
  },
  "bin": {
    "vocabularies": "lib/main.js"
  },
  "devDependencies": {
    "@triply/triplydb": "^6.1.1",
    "@triply/utils": "^2.0.4",
    "@types/chai": "^4.3.9",
    "@types/language-tags": "^1.0.3",
    "@types/mocha": "^10.0.3",
    "@types/yargs": "^17.0.29",
    "@typescript-eslint/eslint-plugin": "^6.9.1",
    "chai": "^4.3.10",
    "chalk": "^5.3.0",
    "commander": "^11.1.0",
    "dotenv": "^16.3.1",
    "eslint": "^8.52.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-config-standard-with-typescript": "^39.1.1",
    "eslint-plugin-import": "^2.29.0",
    "eslint-plugin-n": "^16.2.0",
    "eslint-plugin-promise": "^6.1.1",
    "glob": "^10.3.10",
    "husky": "^8.0.3",
    "lint-staged": "^15.0.2",
    "mocha": "^10.2.0",
    "prettier": "^3.0.3",
    "typescript": "^5.2.2",
    "yargs": "^17.7.2"
  },
  "prettier": {
    "trailingComma": "none",
    "tabWidth": 2,
    "semi": false,
    "printWidth": 999,
    "singleQuote": true
  },
  "publishConfig": {
    "@triplyetl:registry": "https://git.triply.cc/api/v4/projects/463/packages/npm/"
  },
  "lint-staged": {
    "*.{js, jsx,ts,tsx}": [
      "eslint --quiet --fix"
    ],
    "*.{json,js,ts,jsx,tsx,html}": [
      "prettier --write --ignore-unknown"
    ]
  }
}
