/**
 * Resource Description Framework (RDF)
 * rdf.ts (2023-08-08T17:30:09.905Z)
 */
import VocabularyBase from '../../Classes/Vocabulary.js'

class Vocabulary extends VocabularyBase<'http://www.w3.org/1999/02/22-rdf-syntax-ns#'> {
  /**
   * **[rdf:Alt](http://www.w3.org/1999/02/22-rdf-syntax-ns#Alt)**
   *
   * The class of containers of alternatives.
   *
   * @type        class
   * @parent      http://www.w3.org/2000/01/rdf-schema#Container
   */
  public readonly Alt = this.toIri().concat('Alt')

  /**
   * **[rdf:Bag](http://www.w3.org/1999/02/22-rdf-syntax-ns#Bag)**
   *
   * The class of unordered containers.
   *
   * @type        class
   * @parent      http://www.w3.org/2000/01/rdf-schema#Container
   */
  public readonly Bag = this.toIri().concat('Bag')

  /**
   * **[rdf:CompoundLiteral](http://www.w3.org/1999/02/22-rdf-syntax-ns#CompoundLiteral)**
   *
   * A class representing a compound literal.
   *
   * @type        class
   * @parent      http://www.w3.org/2000/01/rdf-schema#Resource
   */
  public readonly CompoundLiteral = this.toIri().concat('CompoundLiteral')

  /**
   * **[rdf:HTML](http://www.w3.org/1999/02/22-rdf-syntax-ns#HTML)**
   *
   * The datatype of RDF literals storing fragments of HTML content
   *
   * @type        datatype
   * @parent      http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly HTML = this.toIri().concat('HTML')

  /**
   * **[rdf:JSON](http://www.w3.org/1999/02/22-rdf-syntax-ns#JSON)**
   *
   * The datatype of RDF literals storing JSON content.
   *
   * @type        datatype
   * @parent      http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly JSON = this.toIri().concat('JSON')

  /**
   * **[rdf:List](http://www.w3.org/1999/02/22-rdf-syntax-ns#List)**
   *
   * The class of RDF Lists.
   *
   * @type        class
   * @parent      http://www.w3.org/2000/01/rdf-schema#Resource
   */
  public readonly List = this.toIri().concat('List')

  /**
   * **[rdf:PlainLiteral](http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral)**
   *
   * The class of plain (i.e. untyped) literal values, as used in RIF and OWL 2
   *
   * @type        datatype
   * @parent      http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly PlainLiteral = this.toIri().concat('PlainLiteral')

  /**
   * **[rdf:Property](http://www.w3.org/1999/02/22-rdf-syntax-ns#Property)**
   *
   * The class of RDF properties.
   *
   * @type        class
   * @parent      http://www.w3.org/2000/01/rdf-schema#Resource
   */
  public readonly Property = this.toIri().concat('Property')

  /**
   * **[rdf:Seq](http://www.w3.org/1999/02/22-rdf-syntax-ns#Seq)**
   *
   * The class of ordered containers.
   *
   * @type        class
   * @parent      http://www.w3.org/2000/01/rdf-schema#Container
   */
  public readonly Seq = this.toIri().concat('Seq')

  /**
   * **[rdf:Statement](http://www.w3.org/1999/02/22-rdf-syntax-ns#Statement)**
   *
   * The class of RDF statements.
   *
   * @type        class
   * @parent      http://www.w3.org/2000/01/rdf-schema#Resource
   */
  public readonly Statement = this.toIri().concat('Statement')

  /**
   * **[rdf:XMLLiteral](http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral)**
   *
   * The datatype of XML literal values.
   *
   * @type        datatype
   * @parent      http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly XMLLiteral = this.toIri().concat('XMLLiteral')

  /**
   * **[rdf:direction](http://www.w3.org/1999/02/22-rdf-syntax-ns#direction)**
   *
   * The base direction component of a CompoundLiteral.
   *
   * @type        property
   * @domain      rdf:CompoundLiteral
   */
  public readonly direction = this.toIri().concat('direction')

  /**
   * **[rdf:first](http://www.w3.org/1999/02/22-rdf-syntax-ns#first)**
   *
   * The first item in the subject RDF list.
   *
   * @type        property
   * @domain      rdf:List
   * @range       http://www.w3.org/2000/01/rdf-schema#Resource
   */
  public readonly first = this.toIri().concat('first')

  /**
   * **[rdf:langString](http://www.w3.org/1999/02/22-rdf-syntax-ns#langString)**
   *
   * The datatype of language-tagged string values
   *
   * @type        datatype
   * @parent      http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly langString = this.toIri().concat('langString')

  /**
   * **[rdf:language](http://www.w3.org/1999/02/22-rdf-syntax-ns#language)**
   *
   * The language component of a CompoundLiteral.
   *
   * @type        property
   * @domain      rdf:CompoundLiteral
   */
  public readonly language = this.toIri().concat('language')

  /**
   * **[rdf:nil](http://www.w3.org/1999/02/22-rdf-syntax-ns#nil)**
   *
   * The empty list, with no items in it. If the rest of a list is nil then the list has no more items in it.
   *
   * @type        instance
   */
  public readonly nil = this.toIri().concat('nil')

  /**
   * **[rdf:object](http://www.w3.org/1999/02/22-rdf-syntax-ns#object)**
   *
   * The object of the subject RDF statement.
   *
   * @type        property
   * @domain      rdf:Statement
   * @range       http://www.w3.org/2000/01/rdf-schema#Resource
   */
  public readonly object = this.toIri().concat('object')

  /**
   * **[rdf:predicate](http://www.w3.org/1999/02/22-rdf-syntax-ns#predicate)**
   *
   * The predicate of the subject RDF statement.
   *
   * @type        property
   * @domain      rdf:Statement
   * @range       http://www.w3.org/2000/01/rdf-schema#Resource
   */
  public readonly predicate = this.toIri().concat('predicate')

  /**
   * **[rdf:rest](http://www.w3.org/1999/02/22-rdf-syntax-ns#rest)**
   *
   * The rest of the subject RDF list after the first item.
   *
   * @type        property
   * @domain      rdf:List
   * @range       rdf:List
   */
  public readonly rest = this.toIri().concat('rest')

  /**
   * **[rdf:subject](http://www.w3.org/1999/02/22-rdf-syntax-ns#subject)**
   *
   * The subject of the subject RDF statement.
   *
   * @type        property
   * @domain      rdf:Statement
   * @range       http://www.w3.org/2000/01/rdf-schema#Resource
   */
  public readonly subject = this.toIri().concat('subject')

  /**
   * **[rdf:type](http://www.w3.org/1999/02/22-rdf-syntax-ns#type)**
   *
   * The subject is an instance of a class.
   *
   * @type        property
   * @domain      http://www.w3.org/2000/01/rdf-schema#Resource
   * @range       http://www.w3.org/2000/01/rdf-schema#Class
   */
  public readonly type = this.toIri().concat('type')

  /**
   * **[rdf:value](http://www.w3.org/1999/02/22-rdf-syntax-ns#value)**
   *
   * Idiomatic property used for structured values.
   *
   * @type        property
   * @domain      http://www.w3.org/2000/01/rdf-schema#Resource
   * @range       http://www.w3.org/2000/01/rdf-schema#Resource
   */
  public readonly value = this.toIri().concat('value')
}

/**
 * prefix **rdf:** <<http://www.w3.org/1999/02/22-rdf-syntax-ns#>>
 *
 * Resource Description Framework (RDF)
 *
 * This is the RDF Schema for the RDF vocabulary terms in the RDF Namespace, defined in RDF Concepts.
 *
 * Version: 1.1.0
 */
const rdf = new Vocabulary('http://www.w3.org/1999/02/22-rdf-syntax-ns#')
export default rdf
