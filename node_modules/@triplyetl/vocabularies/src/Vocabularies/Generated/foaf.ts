/**
 * Friend of a Friend (FOAF)
 * foaf.ts (2023-08-08T17:30:09.179Z)
 */
import VocabularyBase from '../../Classes/Vocabulary.js'

class Vocabulary extends VocabularyBase<'http://xmlns.com/foaf/0.1/'> {
  /**
   * **[foaf:Agent](http://xmlns.com/foaf/0.1/Agent)**
   *
   * An agent (eg. person, group, software or physical artifact).
   *
   * @type        class
   */
  public readonly Agent = this.toIri().concat('Agent')

  /**
   * **[foaf:Document](http://xmlns.com/foaf/0.1/Document)**
   *
   * A document.
   *
   * @type        class
   */
  public readonly Document = this.toIri().concat('Document')

  /**
   * **[foaf:Group](http://xmlns.com/foaf/0.1/Group)**
   *
   * A class of Agents.
   *
   * @type        class
   * @parent      foaf:Agent
   */
  public readonly Group = this.toIri().concat('Group')

  /**
   * **[foaf:Image](http://xmlns.com/foaf/0.1/Image)**
   *
   * An image.
   *
   * @type        class
   * @parent      foaf:Document
   */
  public readonly Image = this.toIri().concat('Image')

  /**
   * **[foaf:Label Property](http://xmlns.com/foaf/0.1/LabelProperty)**
   *
   * A foaf:LabelProperty is any RDF property with texual values that serve as labels.
   *
   * @type        class
   */
  public readonly LabelProperty = this.toIri().concat('LabelProperty')

  /**
   * **[foaf:Online Account](http://xmlns.com/foaf/0.1/OnlineAccount)**
   *
   * An online account.
   *
   * @type        class
   * @parent      http://www.w3.org/2002/07/owl#Thing
   */
  public readonly OnlineAccount = this.toIri().concat('OnlineAccount')

  /**
   * **[foaf:Online Chat Account](http://xmlns.com/foaf/0.1/OnlineChatAccount)**
   *
   * An online chat account.
   *
   * @type        class
   * @parent      foaf:OnlineAccount
   */
  public readonly OnlineChatAccount = this.toIri().concat('OnlineChatAccount')

  /**
   * **[foaf:Online E-commerce Account](http://xmlns.com/foaf/0.1/OnlineEcommerceAccount)**
   *
   * An online e-commerce account.
   *
   * @type        class
   * @parent      foaf:OnlineAccount
   */
  public readonly OnlineEcommerceAccount = this.toIri().concat('OnlineEcommerceAccount')

  /**
   * **[foaf:Online Gaming Account](http://xmlns.com/foaf/0.1/OnlineGamingAccount)**
   *
   * An online gaming account.
   *
   * @type        class
   * @parent      foaf:OnlineAccount
   */
  public readonly OnlineGamingAccount = this.toIri().concat('OnlineGamingAccount')

  /**
   * **[foaf:Organization](http://xmlns.com/foaf/0.1/Organization)**
   *
   * An organization.
   *
   * @type        class
   * @parent      foaf:Agent
   */
  public readonly Organization = this.toIri().concat('Organization')

  /**
   * **[foaf:Person](http://xmlns.com/foaf/0.1/Person)**
   *
   * A person.
   *
   * @type        class
   * @parent      foaf:Agent
   */
  public readonly Person = this.toIri().concat('Person')

  /**
   * **[foaf:PersonalProfileDocument](http://xmlns.com/foaf/0.1/PersonalProfileDocument)**
   *
   * A personal profile RDF document.
   *
   * @type        class
   * @parent      foaf:Document
   */
  public readonly PersonalProfileDocument = this.toIri().concat('PersonalProfileDocument')

  /**
   * **[foaf:Project](http://xmlns.com/foaf/0.1/Project)**
   *
   * A project (a collective endeavour of some kind).
   *
   * @type        class
   */
  public readonly Project = this.toIri().concat('Project')

  /**
   * **[foaf:account](http://xmlns.com/foaf/0.1/account)**
   *
   * Indicates an account held by this agent.
   *
   * @type        property
   * @domain      foaf:Agent
   * @range       foaf:OnlineAccount
   */
  public readonly account = this.toIri().concat('account')

  /**
   * **[foaf:account name](http://xmlns.com/foaf/0.1/accountName)**
   *
   * Indicates the name (identifier) associated with this online account.
   *
   * @type        property
   * @domain      foaf:OnlineAccount
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly accountName = this.toIri().concat('accountName')

  /**
   * **[foaf:account service homepage](http://xmlns.com/foaf/0.1/accountServiceHomepage)**
   *
   * Indicates a homepage of the service provide for this online account.
   *
   * @type        property
   * @domain      foaf:OnlineAccount
   * @range       foaf:Document
   */
  public readonly accountServiceHomepage = this.toIri().concat('accountServiceHomepage')

  /**
   * **[foaf:age](http://xmlns.com/foaf/0.1/age)**
   *
   * The age in years of some agent.
   *
   * @type        property
   * @domain      foaf:Agent
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly age = this.toIri().concat('age')

  /**
   * **[foaf:AIM chat ID](http://xmlns.com/foaf/0.1/aimChatID)**
   *
   * An AIM chat ID
   *
   * @type        property
   * @parent      foaf:nick
   * @domain      foaf:Agent
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly aimChatID = this.toIri().concat('aimChatID')

  /**
   * **[foaf:based near](http://xmlns.com/foaf/0.1/based_near)**
   *
   * A location that something is based near, for some broadly human notion of near.
   *
   * @type        property
   * @domain      http://www.w3.org/2003/01/geo/wgs84_pos#SpatialThing
   * @range       http://www.w3.org/2003/01/geo/wgs84_pos#SpatialThing
   */
  public readonly based_near = this.toIri().concat('based_near')

  /**
   * **[foaf:birthday](http://xmlns.com/foaf/0.1/birthday)**
   *
   * The birthday of this Agent, represented in mm-dd string form, eg. '12-31'.
   *
   * @type        property
   * @domain      foaf:Agent
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly birthday = this.toIri().concat('birthday')

  /**
   * **[foaf:current project](http://xmlns.com/foaf/0.1/currentProject)**
   *
   * A current project this person works on.
   *
   * @type        property
   * @domain      foaf:Person
   * @range       http://www.w3.org/2002/07/owl#Thing
   */
  public readonly currentProject = this.toIri().concat('currentProject')

  /**
   * **[foaf:depiction](http://xmlns.com/foaf/0.1/depiction)**
   *
   * A depiction of some thing.
   *
   * @type        property
   * @domain      http://www.w3.org/2002/07/owl#Thing
   * @range       foaf:Image
   */
  public readonly depiction = this.toIri().concat('depiction')

  /**
   * **[foaf:depicts](http://xmlns.com/foaf/0.1/depicts)**
   *
   * A thing depicted in this representation.
   *
   * @type        property
   * @domain      foaf:Image
   * @range       http://www.w3.org/2002/07/owl#Thing
   */
  public readonly depicts = this.toIri().concat('depicts')

  /**
   * **[foaf:DNA checksum](http://xmlns.com/foaf/0.1/dnaChecksum)**
   *
   * A checksum for the DNA of some thing. Joke.
   *
   * @type        property
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly dnaChecksum = this.toIri().concat('dnaChecksum')

  /**
   * **[foaf:familyName](http://xmlns.com/foaf/0.1/familyName)**
   *
   * The family name of some person.
   *
   * @type        property
   * @domain      foaf:Person
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly familyName = this.toIri().concat('familyName')

  /**
   * **[foaf:family_name](http://xmlns.com/foaf/0.1/family_name)**
   *
   * The family name of some person.
   *
   * @type        property
   * @domain      foaf:Person
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly family_name = this.toIri().concat('family_name')

  /**
   * **[foaf:firstName](http://xmlns.com/foaf/0.1/firstName)**
   *
   * The first name of a person.
   *
   * @type        property
   * @domain      foaf:Person
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly firstName = this.toIri().concat('firstName')

  /**
   * **[foaf:focus](http://xmlns.com/foaf/0.1/focus)**
   *
   * The underlying or 'focal' entity associated with some SKOS-described concept.
   *
   * @type        property
   * @domain      http://www.w3.org/2004/02/skos/core#Concept
   * @range       http://www.w3.org/2002/07/owl#Thing
   */
  public readonly focus = this.toIri().concat('focus')

  /**
   * **[foaf:funded by](http://xmlns.com/foaf/0.1/fundedBy)**
   *
   * An organization funding a project or person.
   *
   * @type        property
   * @domain      http://www.w3.org/2002/07/owl#Thing
   * @range       http://www.w3.org/2002/07/owl#Thing
   */
  public readonly fundedBy = this.toIri().concat('fundedBy')

  /**
   * **[foaf:geekcode](http://xmlns.com/foaf/0.1/geekcode)**
   *
   * A textual geekcode for this person, see http://www.geekcode.com/geek.html
   *
   * @type        property
   * @domain      foaf:Person
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly geekcode = this.toIri().concat('geekcode')

  /**
   * **[foaf:gender](http://xmlns.com/foaf/0.1/gender)**
   *
   * The gender of this Agent (typically but not necessarily 'male' or 'female').
   *
   * @type        property
   * @domain      foaf:Agent
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly gender = this.toIri().concat('gender')

  /**
   * **[foaf:Given name](http://xmlns.com/foaf/0.1/givenName)**
   *
   * The given name of some person.
   *
   * @type        property
   */
  public readonly givenName = this.toIri().concat('givenName')

  /**
   * **[foaf:Given name](http://xmlns.com/foaf/0.1/givenname)**
   *
   * The given name of some person.
   *
   * @type        property
   */
  public readonly givenname = this.toIri().concat('givenname')

  /**
   * **[foaf:account](http://xmlns.com/foaf/0.1/holdsAccount)**
   *
   * Indicates an account held by this agent.
   *
   * @type        property
   * @domain      foaf:Agent
   * @range       foaf:OnlineAccount
   */
  public readonly holdsAccount = this.toIri().concat('holdsAccount')

  /**
   * **[foaf:homepage](http://xmlns.com/foaf/0.1/homepage)**
   *
   * A homepage for some thing.
   *
   * @type        property
   * @parent      foaf:isPrimaryTopicOf
   * @domain      http://www.w3.org/2002/07/owl#Thing
   * @range       foaf:Document
   */
  public readonly homepage = this.toIri().concat('homepage')

  /**
   * **[foaf:ICQ chat ID](http://xmlns.com/foaf/0.1/icqChatID)**
   *
   * An ICQ chat ID
   *
   * @type        property
   * @parent      foaf:nick
   * @domain      foaf:Agent
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly icqChatID = this.toIri().concat('icqChatID')

  /**
   * **[foaf:image](http://xmlns.com/foaf/0.1/img)**
   *
   * An image that can be used to represent some thing (ie. those depictions which are particularly representative of something, eg. one's photo on a homepage).
   *
   * @type        property
   * @parent      foaf:depiction
   * @domain      foaf:Person
   * @range       foaf:Image
   */
  public readonly img = this.toIri().concat('img')

  /**
   * **[foaf:interest](http://xmlns.com/foaf/0.1/interest)**
   *
   * A page about a topic of interest to this person.
   *
   * @type        property
   * @domain      foaf:Agent
   * @range       foaf:Document
   */
  public readonly interest = this.toIri().concat('interest')

  /**
   * **[foaf:is primary topic of](http://xmlns.com/foaf/0.1/isPrimaryTopicOf)**
   *
   * A document that this thing is the primary topic of.
   *
   * @type        property
   * @parent      foaf:page
   * @domain      http://www.w3.org/2002/07/owl#Thing
   * @range       foaf:Document
   */
  public readonly isPrimaryTopicOf = this.toIri().concat('isPrimaryTopicOf')

  /**
   * **[foaf:jabber ID](http://xmlns.com/foaf/0.1/jabberID)**
   *
   * A jabber ID for something.
   *
   * @type        property
   * @domain      foaf:Agent
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly jabberID = this.toIri().concat('jabberID')

  /**
   * **[foaf:knows](http://xmlns.com/foaf/0.1/knows)**
   *
   * A person known by this person (indicating some level of reciprocated interaction between the parties).
   *
   * @type        property
   * @domain      foaf:Person
   * @range       foaf:Person
   */
  public readonly knows = this.toIri().concat('knows')

  /**
   * **[foaf:lastName](http://xmlns.com/foaf/0.1/lastName)**
   *
   * The last name of a person.
   *
   * @type        property
   * @domain      foaf:Person
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly lastName = this.toIri().concat('lastName')

  /**
   * **[foaf:logo](http://xmlns.com/foaf/0.1/logo)**
   *
   * A logo representing some thing.
   *
   * @type        property
   * @domain      http://www.w3.org/2002/07/owl#Thing
   * @range       http://www.w3.org/2002/07/owl#Thing
   */
  public readonly logo = this.toIri().concat('logo')

  /**
   * **[foaf:made](http://xmlns.com/foaf/0.1/made)**
   *
   * Something that was made by this agent.
   *
   * @type        property
   * @domain      foaf:Agent
   * @range       http://www.w3.org/2002/07/owl#Thing
   */
  public readonly made = this.toIri().concat('made')

  /**
   * **[foaf:maker](http://xmlns.com/foaf/0.1/maker)**
   *
   * An agent that made this thing.
   *
   * @type        property
   * @domain      http://www.w3.org/2002/07/owl#Thing
   * @range       foaf:Agent
   */
  public readonly maker = this.toIri().concat('maker')

  /**
   * **[foaf:personal mailbox](http://xmlns.com/foaf/0.1/mbox)**
   *
   * A personal mailbox, ie. an Internet mailbox associated with exactly one owner, the first owner of this mailbox. This is a 'static inverse functional property', in that  there is (across time and change) at most one individual that ever has any particular value for foaf:mbox.
   *
   * @type        property
   * @domain      foaf:Agent
   * @range       http://www.w3.org/2002/07/owl#Thing
   */
  public readonly mbox = this.toIri().concat('mbox')

  /**
   * **[foaf:sha1sum of a personal mailbox URI name](http://xmlns.com/foaf/0.1/mbox_sha1sum)**
   *
   * The sha1sum of the URI of an Internet mailbox associated with exactly one owner, the  first owner of the mailbox.
   *
   * @type        property
   * @domain      foaf:Agent
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly mbox_sha1sum = this.toIri().concat('mbox_sha1sum')

  /**
   * **[foaf:member](http://xmlns.com/foaf/0.1/member)**
   *
   * Indicates a member of a Group
   *
   * @type        property
   * @domain      foaf:Group
   * @range       foaf:Agent
   */
  public readonly member = this.toIri().concat('member')

  /**
   * **[foaf:membershipClass](http://xmlns.com/foaf/0.1/membershipClass)**
   *
   * Indicates the class of individuals that are a member of a Group
   *
   * @type        property
   */
  public readonly membershipClass = this.toIri().concat('membershipClass')

  /**
   * **[foaf:MSN chat ID](http://xmlns.com/foaf/0.1/msnChatID)**
   *
   * An MSN chat ID
   *
   * @type        property
   * @parent      foaf:nick
   * @domain      foaf:Agent
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly msnChatID = this.toIri().concat('msnChatID')

  /**
   * **[foaf:myersBriggs](http://xmlns.com/foaf/0.1/myersBriggs)**
   *
   * A Myers Briggs (MBTI) personality classification.
   *
   * @type        property
   * @domain      foaf:Person
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly myersBriggs = this.toIri().concat('myersBriggs')

  /**
   * **[foaf:name](http://xmlns.com/foaf/0.1/name)**
   *
   * A name for some thing.
   *
   * @type        property
   * @parent      http://www.w3.org/2000/01/rdf-schema#label
   * @domain      http://www.w3.org/2002/07/owl#Thing
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly name = this.toIri().concat('name')

  /**
   * **[foaf:nickname](http://xmlns.com/foaf/0.1/nick)**
   *
   * A short informal nickname characterising an agent (includes login identifiers, IRC and other chat nicknames).
   *
   * @type        property
   */
  public readonly nick = this.toIri().concat('nick')

  /**
   * **[foaf:openid](http://xmlns.com/foaf/0.1/openid)**
   *
   * An OpenID for an Agent.
   *
   * @type        property
   * @parent      foaf:isPrimaryTopicOf
   * @domain      foaf:Agent
   * @range       foaf:Document
   */
  public readonly openid = this.toIri().concat('openid')

  /**
   * **[foaf:page](http://xmlns.com/foaf/0.1/page)**
   *
   * A page or document about this thing.
   *
   * @type        property
   * @domain      http://www.w3.org/2002/07/owl#Thing
   * @range       foaf:Document
   */
  public readonly page = this.toIri().concat('page')

  /**
   * **[foaf:past project](http://xmlns.com/foaf/0.1/pastProject)**
   *
   * A project this person has previously worked on.
   *
   * @type        property
   * @domain      foaf:Person
   * @range       http://www.w3.org/2002/07/owl#Thing
   */
  public readonly pastProject = this.toIri().concat('pastProject')

  /**
   * **[foaf:phone](http://xmlns.com/foaf/0.1/phone)**
   *
   * A phone,  specified using fully qualified tel: URI scheme (refs: http://www.w3.org/Addressing/schemes.html#tel).
   *
   * @type        property
   */
  public readonly phone = this.toIri().concat('phone')

  /**
   * **[foaf:plan](http://xmlns.com/foaf/0.1/plan)**
   *
   * A .plan comment, in the tradition of finger and '.plan' files.
   *
   * @type        property
   * @domain      foaf:Person
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly plan = this.toIri().concat('plan')

  /**
   * **[foaf:primary topic](http://xmlns.com/foaf/0.1/primaryTopic)**
   *
   * The primary topic of some page or document.
   *
   * @type        property
   * @domain      foaf:Document
   * @range       http://www.w3.org/2002/07/owl#Thing
   */
  public readonly primaryTopic = this.toIri().concat('primaryTopic')

  /**
   * **[foaf:publications](http://xmlns.com/foaf/0.1/publications)**
   *
   * A link to the publications of this person.
   *
   * @type        property
   * @domain      foaf:Person
   * @range       foaf:Document
   */
  public readonly publications = this.toIri().concat('publications')

  /**
   * **[foaf:schoolHomepage](http://xmlns.com/foaf/0.1/schoolHomepage)**
   *
   * A homepage of a school attended by the person.
   *
   * @type        property
   * @domain      foaf:Person
   * @range       foaf:Document
   */
  public readonly schoolHomepage = this.toIri().concat('schoolHomepage')

  /**
   * **[foaf:sha1sum (hex)](http://xmlns.com/foaf/0.1/sha1)**
   *
   * A sha1sum hash, in hex.
   *
   * @type        property
   * @domain      foaf:Document
   */
  public readonly sha1 = this.toIri().concat('sha1')

  /**
   * **[foaf:Skype ID](http://xmlns.com/foaf/0.1/skypeID)**
   *
   * A Skype ID
   *
   * @type        property
   * @parent      foaf:nick
   * @domain      foaf:Agent
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly skypeID = this.toIri().concat('skypeID')

  /**
   * **[foaf:status](http://xmlns.com/foaf/0.1/status)**
   *
   * A string expressing what the user is happy for the general public (normally) to know about their current activity.
   *
   * @type        property
   * @domain      foaf:Agent
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly status = this.toIri().concat('status')

  /**
   * **[foaf:Surname](http://xmlns.com/foaf/0.1/surname)**
   *
   * The surname of some person.
   *
   * @type        property
   * @domain      foaf:Person
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly surname = this.toIri().concat('surname')

  /**
   * **[foaf:theme](http://xmlns.com/foaf/0.1/theme)**
   *
   * A theme.
   *
   * @type        property
   * @domain      http://www.w3.org/2002/07/owl#Thing
   * @range       http://www.w3.org/2002/07/owl#Thing
   */
  public readonly theme = this.toIri().concat('theme')

  /**
   * **[foaf:thumbnail](http://xmlns.com/foaf/0.1/thumbnail)**
   *
   * A derived thumbnail image.
   *
   * @type        property
   * @domain      foaf:Image
   * @range       foaf:Image
   */
  public readonly thumbnail = this.toIri().concat('thumbnail')

  /**
   * **[foaf:tipjar](http://xmlns.com/foaf/0.1/tipjar)**
   *
   * A tipjar document for this agent, describing means for payment and reward.
   *
   * @type        property
   * @parent      foaf:page
   * @domain      foaf:Agent
   * @range       foaf:Document
   */
  public readonly tipjar = this.toIri().concat('tipjar')

  /**
   * **[foaf:title](http://xmlns.com/foaf/0.1/title)**
   *
   * Title (Mr, Mrs, Ms, Dr. etc)
   *
   * @type        property
   */
  public readonly title = this.toIri().concat('title')

  /**
   * **[foaf:topic](http://xmlns.com/foaf/0.1/topic)**
   *
   * A topic of some page or document.
   *
   * @type        property
   * @domain      foaf:Document
   * @range       http://www.w3.org/2002/07/owl#Thing
   */
  public readonly topic = this.toIri().concat('topic')

  /**
   * **[foaf:topic_interest](http://xmlns.com/foaf/0.1/topic_interest)**
   *
   * A thing of interest to this person.
   *
   * @type        property
   * @domain      foaf:Agent
   * @range       http://www.w3.org/2002/07/owl#Thing
   */
  public readonly topic_interest = this.toIri().concat('topic_interest')

  /**
   * **[foaf:weblog](http://xmlns.com/foaf/0.1/weblog)**
   *
   * A weblog of some thing (whether person, group, company etc.).
   *
   * @type        property
   * @parent      foaf:page
   * @domain      foaf:Agent
   * @range       foaf:Document
   */
  public readonly weblog = this.toIri().concat('weblog')

  /**
   * **[foaf:work info homepage](http://xmlns.com/foaf/0.1/workInfoHomepage)**
   *
   * A work info homepage of some person; a page about their work for some organization.
   *
   * @type        property
   * @domain      foaf:Person
   * @range       foaf:Document
   */
  public readonly workInfoHomepage = this.toIri().concat('workInfoHomepage')

  /**
   * **[foaf:workplace homepage](http://xmlns.com/foaf/0.1/workplaceHomepage)**
   *
   * A workplace homepage of some person; the homepage of an organization they work for.
   *
   * @type        property
   * @domain      foaf:Person
   * @range       foaf:Document
   */
  public readonly workplaceHomepage = this.toIri().concat('workplaceHomepage')

  /**
   * **[foaf:Yahoo chat ID](http://xmlns.com/foaf/0.1/yahooChatID)**
   *
   * A Yahoo chat ID
   *
   * @type        property
   * @parent      foaf:nick
   * @domain      foaf:Agent
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly yahooChatID = this.toIri().concat('yahooChatID')
}

/**
 * prefix **foaf:** <<http://xmlns.com/foaf/0.1/>>
 *
 * Friend of a Friend (FOAF)
 *
 * FOAF is a project devoted to linking people and information using the Web.  Regardless of whether information is in people's heads, in physical or digital documents, or in the form of factual data, it can be linked.  FOAF integrates three kinds of network: social networks of human collaboration, friendship and association; representational networks that describe a simplified view of a cartoon universe in factual terms, and information networks that use Web-based linking to share independently published descriptions of this inter-connected world.  FOAF does not compete with socially-oriented Web sites; rather it provides an approach in which different sites can tell different parts of the larger story, and by which users can retain some control over their information in a non-proprietary format.
 *
 * Version: 0.1.0
 */
const foaf = new Vocabulary('http://xmlns.com/foaf/0.1/')
export default foaf
