/**
 * Vocabulary of Interlinked Datasets (VoID)
 * void.ts (2023-08-08T17:30:10.554Z)
 */
import VocabularyBase from '../../Classes/Vocabulary.js'

class Vocabulary extends VocabularyBase<'http://rdfs.org/ns/void#'> {
  /**
   * **[void:dataset](http://rdfs.org/ns/void#Dataset)**
   *
   * A set of RDF triples that are published, maintained or aggregated by a single provider.
   *
   * @type        class
   */
  public readonly Dataset = this.toIri().concat('Dataset')

  /**
   * **[void:dataset description](http://rdfs.org/ns/void#DatasetDescription)**
   *
   * A web resource whose foaf:primaryTopic or foaf:topics include void:Datasets.
   *
   * @type        class
   * @parent      http://xmlns.com/foaf/0.1/Document
   */
  public readonly DatasetDescription = this.toIri().concat('DatasetDescription')

  /**
   * **[void:linkset](http://rdfs.org/ns/void#Linkset)**
   *
   * A collection of RDF links between two void:Datasets.
   *
   * @type        class
   * @parent      void:Dataset
   */
  public readonly Linkset = this.toIri().concat('Linkset')

  /**
   * **[void:technical feature](http://rdfs.org/ns/void#TechnicalFeature)**
   *
   * A technical feature of a void:Dataset, such as a supported RDF serialization format.
   *
   * @type        class
   */
  public readonly TechnicalFeature = this.toIri().concat('TechnicalFeature')

  /**
   * **[void:class](http://rdfs.org/ns/void#class)**
   *
   * The rdfs:Class that is the rdf:type of all entities in a class-based partition.
   *
   * @type        property
   * @domain      void:Dataset
   * @range       http://www.w3.org/2000/01/rdf-schema#Class
   */
  public readonly class = this.toIri().concat('class')

  /**
   * **[void:class partition](http://rdfs.org/ns/void#classPartition)**
   *
   * A subset of a void:Dataset that contains only the entities of a certain rdfs:Class.
   *
   * @type        property
   * @parent      void:subset
   * @domain      void:Dataset
   * @range       void:Dataset
   */
  public readonly classPartition = this.toIri().concat('classPartition')

  /**
   * **[void:classes](http://rdfs.org/ns/void#classes)**
   *
   * The total number of distinct classes in a void:Dataset. In other words, the number of distinct resources occuring as objects of rdf:type triples in the dataset.
   *
   * @type        property
   * @domain      void:Dataset
   * @range       http://www.w3.org/2001/XMLSchema#integer
   */
  public readonly classes = this.toIri().concat('classes')

  /**
   * **[void:Data Dump](http://rdfs.org/ns/void#dataDump)**
   *
   * An RDF dump, partial or complete, of a void:Dataset.
   *
   * @type        property
   * @domain      void:Dataset
   * @range       http://www.w3.org/2000/01/rdf-schema#Resource
   */
  public readonly dataDump = this.toIri().concat('dataDump')

  /**
   * **[void:distinct objects](http://rdfs.org/ns/void#distinctObjects)**
   *
   * The total number of distinct objects in a void:Dataset. In other words, the number of distinct resources that occur in the object position of triples in the dataset. Literals are included in this count.
   *
   * @type        property
   * @domain      void:Dataset
   * @range       http://www.w3.org/2001/XMLSchema#integer
   */
  public readonly distinctObjects = this.toIri().concat('distinctObjects')

  /**
   * **[void:distinct subjects](http://rdfs.org/ns/void#distinctSubjects)**
   *
   * The total number of distinct subjects in a void:Dataset. In other words, the number of distinct resources that occur in the subject position of triples in the dataset.
   *
   * @type        property
   * @domain      void:Dataset
   * @range       http://www.w3.org/2001/XMLSchema#integer
   */
  public readonly distinctSubjects = this.toIri().concat('distinctSubjects')

  /**
   * **[void:number of documents](http://rdfs.org/ns/void#documents)**
   *
   * The total number of documents, for datasets that are published as a set of individual documents, such as RDF/XML documents or RDFa-annotated web pages. Non-RDF documents, such as web pages in HTML or images, are usually not included in this count. This property is intended for datasets where the total number of triples or entities is hard to determine. void:triples or void:entities should be preferred where practical.
   *
   * @type        property
   * @domain      void:Dataset
   * @range       http://www.w3.org/2001/XMLSchema#integer
   */
  public readonly documents = this.toIri().concat('documents')

  /**
   * **[void:number of entities](http://rdfs.org/ns/void#entities)**
   *
   * The total number of entities that are described in a void:Dataset.
   *
   * @type        property
   * @domain      void:Dataset
   * @range       http://www.w3.org/2001/XMLSchema#integer
   */
  public readonly entities = this.toIri().concat('entities')

  /**
   * **[void:example resource of dataset](http://rdfs.org/ns/void#exampleResource)**
   *
   * @type        property
   * @domain      void:Dataset
   * @range       http://www.w3.org/2000/01/rdf-schema#Resource
   */
  public readonly exampleResource = this.toIri().concat('exampleResource')

  /**
   * **[void:feature](http://rdfs.org/ns/void#feature)**
   *
   * @type        property
   * @domain      void:Dataset
   * @range       void:TechnicalFeature
   */
  public readonly feature = this.toIri().concat('feature')

  /**
   * **[void:in dataset](http://rdfs.org/ns/void#inDataset)**
   *
   * Points to the void:Dataset that a document is a part of.
   *
   * @type        property
   * @domain      http://xmlns.com/foaf/0.1/Document
   * @range       void:Dataset
   */
  public readonly inDataset = this.toIri().concat('inDataset')

  /**
   * **[void:a link predicate](http://rdfs.org/ns/void#linkPredicate)**
   *
   * @type        property
   * @domain      void:Linkset
   * @range       http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
   */
  public readonly linkPredicate = this.toIri().concat('linkPredicate')

  /**
   * **[void:Objects Target](http://rdfs.org/ns/void#objectsTarget)**
   *
   * The dataset describing the objects of the triples contained in the Linkset.
   *
   * @type        property
   * @parent      void:target
   * @domain      void:Linkset
   * @range       void:Dataset
   */
  public readonly objectsTarget = this.toIri().concat('objectsTarget')

  /**
   * **[void:open search description](http://rdfs.org/ns/void#openSearchDescription)**
   *
   * An OpenSearch description document for a free-text search service over a void:Dataset.
   *
   * @type        property
   * @domain      void:Dataset
   * @range       http://xmlns.com/foaf/0.1/Document
   */
  public readonly openSearchDescription = this.toIri().concat('openSearchDescription')

  /**
   * **[void:number of properties](http://rdfs.org/ns/void#properties)**
   *
   * The total number of distinct properties in a void:Dataset. In other words, the number of distinct resources that occur in the predicate position of triples in the dataset.
   *
   * @type        property
   * @domain      void:Dataset
   * @range       http://www.w3.org/2001/XMLSchema#integer
   */
  public readonly properties = this.toIri().concat('properties')

  /**
   * **[void:property](http://rdfs.org/ns/void#property)**
   *
   * The rdf:Property that is the predicate of all triples in a property-based partition.
   *
   * @type        property
   * @domain      void:Dataset
   * @range       http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
   */
  public readonly property = this.toIri().concat('property')

  /**
   * **[void:property partition](http://rdfs.org/ns/void#propertyPartition)**
   *
   * A subset of a void:Dataset that contains only the triples of a certain rdf:Property.
   *
   * @type        property
   * @parent      void:subset
   * @domain      void:Dataset
   * @range       void:Dataset
   */
  public readonly propertyPartition = this.toIri().concat('propertyPartition')

  /**
   * **[void:root resource](http://rdfs.org/ns/void#rootResource)**
   *
   * A top concept or entry point for a void:Dataset that is structured in a tree-like fashion. All resources in a dataset can be reached by following links from its root resources in a small number of steps.
   *
   * @type        property
   * @domain      void:Dataset
   */
  public readonly rootResource = this.toIri().concat('rootResource')

  /**
   * **[void:has a SPARQL endpoint at](http://rdfs.org/ns/void#sparqlEndpoint)**
   *
   * @type        property
   * @domain      void:Dataset
   */
  public readonly sparqlEndpoint = this.toIri().concat('sparqlEndpoint')

  /**
   * **[void:Subjects Target](http://rdfs.org/ns/void#subjectsTarget)**
   *
   * The dataset describing the subjects of triples contained in the Linkset.
   *
   * @type        property
   * @parent      void:target
   * @domain      void:Linkset
   * @range       void:Dataset
   */
  public readonly subjectsTarget = this.toIri().concat('subjectsTarget')

  /**
   * **[void:has subset](http://rdfs.org/ns/void#subset)**
   *
   * @type        property
   * @domain      void:Dataset
   * @range       void:Dataset
   */
  public readonly subset = this.toIri().concat('subset')

  /**
   * **[void:Target](http://rdfs.org/ns/void#target)**
   *
   * One of the two datasets linked by the Linkset.
   *
   * @type        property
   * @domain      void:Linkset
   * @range       void:Dataset
   */
  public readonly target = this.toIri().concat('target')

  /**
   * **[void:number of triples](http://rdfs.org/ns/void#triples)**
   *
   * The total number of triples contained in a void:Dataset.
   *
   * @type        property
   * @domain      void:Dataset
   * @range       http://www.w3.org/2001/XMLSchema#integer
   */
  public readonly triples = this.toIri().concat('triples')

  /**
   * **[void:has an URI look-up endpoint at](http://rdfs.org/ns/void#uriLookupEndpoint)**
   *
   * Defines a simple URI look-up protocol for accessing a dataset.
   *
   * @type        property
   * @domain      void:Dataset
   */
  public readonly uriLookupEndpoint = this.toIri().concat('uriLookupEndpoint')

  /**
   * **[void:has URI regular expression pattern](http://rdfs.org/ns/void#uriRegexPattern)**
   *
   * Defines a regular expression pattern matching URIs in the dataset.
   *
   * @type        property
   * @domain      void:Dataset
   */
  public readonly uriRegexPattern = this.toIri().concat('uriRegexPattern')

  /**
   * **[void:URI space](http://rdfs.org/ns/void#uriSpace)**
   *
   * A URI that is a common string prefix of all the entity URIs in a void:Dataset.
   *
   * @type        property
   * @domain      void:Dataset
   * @range       http://www.w3.org/2000/01/rdf-schema#Literal
   */
  public readonly uriSpace = this.toIri().concat('uriSpace')

  /**
   * **[void:vocabulary](http://rdfs.org/ns/void#vocabulary)**
   *
   * A vocabulary that is used in the dataset.
   *
   * @type        property
   * @domain      void:Dataset
   */
  public readonly vocabulary = this.toIri().concat('vocabulary')
}

/**
 * prefix **void:** <<http://rdfs.org/ns/void#>>
 *
 * Vocabulary of Interlinked Datasets (VoID)
 *
 * VoID is an RDF Schema vocabulary for expressing metadata about RDF datasets.  It is intended as a bridge between the publishers and users of RDF data, with applications ranging from data discovery to cataloging and archiving of datasets.  This document is a detailed guide to the VoID vocabulary.  It describes how VoID can be used to express general metadata based on Dublin Core, access metadata, structural metadata, and links between datasets.  It also provides deployment advice and discusses the discovery of VoID descriptions.
 *
 * Version: 1.0.0
 */
const VoID = new Vocabulary('http://rdfs.org/ns/void#')
export default VoID
