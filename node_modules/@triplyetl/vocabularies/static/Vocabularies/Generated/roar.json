{
  "displayName": "Reconstructions and Observations in Archival Resources (ROAR)",
  "description": "Ontology to describe person, location etc. observations in archival resources. One or multiple observations can be bundled into a reconstruction that combines complementary (or sometimes conflicting) information from the observation(s) so that a single entity is reconstructed out of several entity observations from one or multiple sources.\n\nFor more information, see https://leonvanwissen.nl/vocab/roar/docs/",
  "prefix": "roar",
  "iri": "https://w3id.org/roar#",
  "generated": "2023-07-17T09:08:58.847Z",
  "items": {
    "Document": {
      "category": "class",
      "label": "Document",
      "description": "The source (e.g. document, act, legislation, text, picture, painting, recording, obelisk) in which some entity (e.g. Person or Location) can be observed.If the source that you are describing is not digitised or is not available as URI, you can define your own resource of class `roar:Document` and use for instance the properties defined by `schema:CreativeWork` to describe it. The `roar:onScan` property can then be used on an Observation to specify the location of the Entity in the source."
    },
    "Entity": {
      "category": "class",
      "label": "Entity",
      "parent": "https://triplydb.com/.well-known/genid/565875cc8a19884f47123aed4e3146fe",
      "description": "Basic class to hold classes that can be combined with an Observation or Reconstruction class. Pre-modelled are Person and Location, but you are free to specify more types, such as Event or Organisation."
    },
    "Location": {
      "category": "class",
      "label": "Location",
      "parent": "roar:Entity",
      "description": "A Location can be any type of place where another entity can be located."
    },
    "LocationObservation": {
      "category": "class",
      "label": "LocationObservation",
      "parent": "roar:Observation",
      "description": "A LocationObservation is a location that can be observed in a `roar:Document`."
    },
    "LocationReconstruction": {
      "category": "class",
      "label": "LocationReconstruction",
      "parent": "roar:Location",
      "description": "A LocationReconstruction is the result of modelling one or multiple LocationObservation(s) into a single resource."
    },
    "Observation": {
      "category": "class",
      "label": "Observation",
      "parent": "http://www.w3.org/ns/prov#Entity",
      "description": "Something of a type 'Observation' is something that is mentioned or described in a 'Document' (described by roar:inDocument). Two common subclasses are PersonObservation and LocationObservation, but one can also think about EventObservation and other entities."
    },
    "Person": {
      "category": "class",
      "label": "Person",
      "parent": "https://triplydb.com/.well-known/genid/b730b5b3a19f9a2c9a9952aa59bad5ea",
      "description": "A Person is a human being that is mentioned in a Document. This can be a direct mention (e.g. 'Aaltie Jans') or indirect (e.g. 'husband of Aaltie Jans'), in which a name might not be known."
    },
    "PersonObservation": {
      "category": "class",
      "label": "PersonObservation",
      "parent": "roar:Observation",
      "description": "A PersonObservation is a person that can be observed in a `roar:Document`."
    },
    "PersonReconstruction": {
      "category": "class",
      "label": "PersonReconstruction",
      "parent": "roar:Person",
      "description": "A PersonReconstruction is the result of modelling one or multiple PersonObservation(s) into a single resource."
    },
    "Reconstruction": {
      "category": "class",
      "label": "Reconstruction",
      "parent": "http://www.w3.org/ns/prov#Entity",
      "description": "A 'Reconstruction' is a specific modelling of one or several entities of type 'Observation' into a single resource. The prov:wasDerivedFrom property is used to indicate on which Observations a Reconstruction was based. It is also possible to derrive a Reconstruction from other Reconstructions."
    },
    "documentedIn": {
      "category": "property",
      "label": "documentedIn",
      "domain": "http://www.w3.org/ns/prov#Entity",
      "range": "roar:Document",
      "description": "Refers to the Document (source, act, legislation etc.) in which the Observation is made. It is recommended to point to a resource (URI) provided by some institute/archive that hold key information on this source. You are, however, free to fill `roar:Document` with additional information."
    },
    "hasLocation": {
      "category": "property",
      "label": "hasLocation",
      "domain": "roar:Entity",
      "range": "roar:Location",
      "description": "Use to indicate that an Entity has a relation to a Location. Use a structured value to indicate a specific role of this Entity (e.g. Person) to the Location or to specify a temporal validity in which this Entity-Location relation is valid (use `sem` timestamp properties for this). Example:```ttl:person1 a roar:PersonObservation ;         roar:hasLocation [ rdf:value :location1 ;                            roar:role \"resident\" ;                            sem:hasBeginTimeStamp \"1782-11-20\" ;                            sem:hasEarliestEndTimesStamp \"1782-11-20\" ] .```"
    },
    "hasPerson": {
      "category": "property",
      "label": "hasPerson",
      "domain": "roar:Entity",
      "range": "roar:Person",
      "description": "Use to indicate that an Entity has a relation to a Person. Use a structured value to indicate a specific role of this Entity (e.g. Location) to the Person or to specify a temporal validity in which this Entity-Person relation is valid (use `sem` timestamp properties for this). Use `roar:hasRelation` for Person to Person relations. Example:```ttl:location1 a roar:LocationObservation ;           roar:hasPerson [ rdf:value :person1 ;                              roar:role \"residence\" ;                              sem:hasBeginTimeStamp \"1782-11-20\" ;                              sem:hasEarliestEndTimesStamp \"1782-11-20\" ] .```"
    },
    "hasRelation": {
      "category": "property",
      "label": "hasRelation",
      "domain": "roar:Entity",
      "range": "roar:Entity",
      "description": "Relation to another person or organisation, defined by a structured value to indicate the kind of relation. *Example*:```ttl:person1 a roar:Person ;    schema:gender schema:Female ;    roar:hasRelation [ rdf:value :person2 ;                       roar:relationType \"mother\" ] .:person2 a roar:Person ;    schema:gender schema:Male ;    roar:hasRelation [ rdf:value :person1 ;                       roar:relationType \"firstborn son\" ] .```"
    },
    "locationInDocument": {
      "category": "property",
      "label": "locationInDocument",
      "parent": "http://www.w3.org/2002/07/owl#topDataProperty",
      "domain": "roar:Observation",
      "description": "The locationInDocument property can hold any location reference relative to the Document an Observation is in. This can be used to indicate a location in the source, even when the source has not yet been digitized (then a roar:onScan can be used)."
    },
    "onScan": {
      "category": "property",
      "label": "onScan",
      "parent": "http://www.w3.org/2002/07/owl#topDataProperty",
      "domain": "roar:Observation",
      "description": "This property can be used to indicate the location of the EntityObservation in the source, for instance if the roar:Document is too general (e.g. it refers to multiple pages). This should refer to a URI or filename and assumes the source is digitized."
    },
    "relationType": {
      "category": "property",
      "label": "relationType",
      "parent": "http://www.w3.org/2002/07/owl#topDataProperty",
      "description": "Used to specify the kind of relation (e.g. \"patron\") in a person to person relation as specified by `roar:hasRelation`."
    },
    "role": {
      "category": "property",
      "label": "role",
      "parent": "http://www.w3.org/2002/07/owl#topDataProperty",
      "description": "Can be used to indicate the role of an entity in a `roar:hasLocation` or `roar:hasPerson` relation. In case of a Person to Location relation (through `roar:hasLocation`), the `roar:role` can for instance be 'inhabitant' or 'visitor'. Similarly, the role of a Location to Person (through `roar:hasPerson`) is for example 'country cottage' or 'residence'."
    }
  }
}
