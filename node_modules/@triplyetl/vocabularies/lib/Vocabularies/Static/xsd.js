import VocabularyBase from '../../Classes/Vocabulary.js';
class Vocabulary extends VocabularyBase {
    ENTITY = this.concat('ENTITY');
    ID = this.concat('ID');
    IDREF = this.concat('IDREF');
    IDREFS = this.concat('IDREFS');
    NCName = this.concat('NCName');
    NMTOKEN = this.concat('NMTOKEN');
    NMTOKENS = this.concat('NMTOKENS');
    NOTATION = this.concat('NOTATION');
    Name = this.concat('Name');
    QName = this.concat('QName');
    anyType = this.concat('anyType');
    anyURI = this.concat('anyURI');
    base64Binary = this.concat('base64Binary');
    boolean = this.concat('boolean');
    byte = this.concat('byte');
    date = this.concat('date');
    dayTimeDuration = this.concat('dayTimeDuration');
    dateTime = this.concat('dateTime');
    dateTimeStamp = this.concat('dateTimeStamp');
    decimal = this.concat('decimal');
    double = this.concat('double');
    duration = this.concat('duration');
    float = this.concat('float');
    gDay = this.concat('gDay');
    gMonth = this.concat('gMonth');
    gMonthDay = this.concat('gMonthDay');
    gYear = this.concat('gYear');
    gYearMonth = this.concat('gYearMonth');
    hexBinary = this.concat('hexBinary');
    int = this.concat('int');
    integer = this.concat('integer');
    language = this.concat('language');
    long = this.concat('long');
    negativeInteger = this.concat('negativeInteger');
    nonNegativeInteger = this.concat('nonNegativeInteger');
    nonPositiveInteger = this.concat('nonPositiveInteger');
    normalizedString = this.concat('normalizedString');
    positiveInteger = this.concat('positiveInteger');
    short = this.concat('short');
    string = this.concat('string');
    time = this.concat('time');
    token = this.concat('token');
    unsignedByte = this.concat('unsignedByte');
    unsignedInt = this.concat('unsignedInt');
    unsignedLong = this.concat('unsignedLong');
    unsignedShort = this.concat('unsignedShort');
    yearMonthDuration = this.concat('yearMonthDuration');
}
/*
 **
 * prefix **xsd:** <<http://www.w3.org/2001/XMLSchema#>>
 *
 * XML Schema Datatypes (XSD)
 */
const xsd = new Vocabulary('http://www.w3.org/2001/XMLSchema#');
export default xsd;
//# sourceMappingURL=xsd.js.map