/**
 * RDF Schema
 * rdfs.ts (2023-08-08T17:30:09.909Z)
 */
import VocabularyBase from '../../Classes/Vocabulary.js';
class Vocabulary extends VocabularyBase {
    /**
     * **[rdfs:Class](http://www.w3.org/2000/01/rdf-schema#Class)**
     *
     * The class of classes.
     *
     * @type        class
     * @parent      rdfs:Resource
     */
    Class = this.toIri().concat('Class');
    /**
     * **[rdfs:Container](http://www.w3.org/2000/01/rdf-schema#Container)**
     *
     * The class of RDF containers.
     *
     * @type        class
     * @parent      rdfs:Resource
     */
    Container = this.toIri().concat('Container');
    /**
     * **[rdfs:ContainerMembershipProperty](http://www.w3.org/2000/01/rdf-schema#ContainerMembershipProperty)**
     *
     * The class of container membership properties, rdf:_1, rdf:_2, ...,                    all of which are sub-properties of 'member'.
     *
     * @type        class
     * @parent      http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
     */
    ContainerMembershipProperty = this.toIri().concat('ContainerMembershipProperty');
    /**
     * **[rdfs:Datatype](http://www.w3.org/2000/01/rdf-schema#Datatype)**
     *
     * The class of RDF datatypes.
     *
     * @type        class
     * @parent      rdfs:Class
     */
    Datatype = this.toIri().concat('Datatype');
    /**
     * **[rdfs:Literal](http://www.w3.org/2000/01/rdf-schema#Literal)**
     *
     * The class of literal values, eg. textual strings and integers.
     *
     * @type        class
     * @parent      rdfs:Resource
     */
    Literal = this.toIri().concat('Literal');
    /**
     * **[rdfs:Resource](http://www.w3.org/2000/01/rdf-schema#Resource)**
     *
     * The class resource, everything.
     *
     * @type        class
     */
    Resource = this.toIri().concat('Resource');
    /**
     * **[rdfs:comment](http://www.w3.org/2000/01/rdf-schema#comment)**
     *
     * A description of the subject resource.
     *
     * @type        property
     * @domain      rdfs:Resource
     * @range       rdfs:Literal
     */
    comment = this.toIri().concat('comment');
    /**
     * **[rdfs:domain](http://www.w3.org/2000/01/rdf-schema#domain)**
     *
     * A domain of the subject property.
     *
     * @type        property
     * @domain      http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
     * @range       rdfs:Class
     */
    domain = this.toIri().concat('domain');
    /**
     * **[rdfs:isDefinedBy](http://www.w3.org/2000/01/rdf-schema#isDefinedBy)**
     *
     * The defininition of the subject resource.
     *
     * @type        property
     * @parent      rdfs:seeAlso
     * @domain      rdfs:Resource
     * @range       rdfs:Resource
     */
    isDefinedBy = this.toIri().concat('isDefinedBy');
    /**
     * **[rdfs:label](http://www.w3.org/2000/01/rdf-schema#label)**
     *
     * A human-readable name for the subject.
     *
     * @type        property
     * @domain      rdfs:Resource
     * @range       rdfs:Literal
     */
    label = this.toIri().concat('label');
    /**
     * **[rdfs:member](http://www.w3.org/2000/01/rdf-schema#member)**
     *
     * A member of the subject resource.
     *
     * @type        property
     * @domain      rdfs:Resource
     * @range       rdfs:Resource
     */
    member = this.toIri().concat('member');
    /**
     * **[rdfs:range](http://www.w3.org/2000/01/rdf-schema#range)**
     *
     * A range of the subject property.
     *
     * @type        property
     * @domain      http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
     * @range       rdfs:Class
     */
    range = this.toIri().concat('range');
    /**
     * **[rdfs:seeAlso](http://www.w3.org/2000/01/rdf-schema#seeAlso)**
     *
     * Further information about the subject resource.
     *
     * @type        property
     * @domain      rdfs:Resource
     * @range       rdfs:Resource
     */
    seeAlso = this.toIri().concat('seeAlso');
    /**
     * **[rdfs:subClassOf](http://www.w3.org/2000/01/rdf-schema#subClassOf)**
     *
     * The subject is a subclass of a class.
     *
     * @type        property
     * @domain      rdfs:Class
     * @range       rdfs:Class
     */
    subClassOf = this.toIri().concat('subClassOf');
    /**
     * **[rdfs:subPropertyOf](http://www.w3.org/2000/01/rdf-schema#subPropertyOf)**
     *
     * The subject is a subproperty of a property.
     *
     * @type        property
     * @domain      http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
     * @range       http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
     */
    subPropertyOf = this.toIri().concat('subPropertyOf');
}
/**
 * prefix **rdfs:** <<http://www.w3.org/2000/01/rdf-schema#>>
 *
 * RDF Schema
 *
 * RDF Schema provides a data-modelling vocabulary for RDF data.  RDF Schema is an extension of the basic RDF vocabulary.
 *
 * Version: 1.1.0
 */
const rdfs = new Vocabulary('http://www.w3.org/2000/01/rdf-schema#');
export default rdfs;
//# sourceMappingURL=rdfs.js.map