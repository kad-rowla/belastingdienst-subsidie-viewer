/**
 * SPARQL Service Description
 * ssd.ts (2023-08-08T17:30:10.342Z)
 */
import VocabularyBase from '../../Classes/Vocabulary.js';
declare class Vocabulary extends VocabularyBase<'http://www.w3.org/ns/sparql-service-description#'> {
    /**
     * **[ssd:Aggregate](http://www.w3.org/ns/sparql-service-description#Aggregate)**
     *
     * An instance of sd:Aggregate represents an aggregate that may be used in a SPARQL aggregate query (for instance in a HAVING clause or SELECT expression) besides the standard list of supported aggregates COUNT, SUM, MIN, MAX, AVG, GROUP_CONCAT, and SAMPLE.
     *
     * @type        class
     * @parent      ssd:Feature
     */
    readonly Aggregate: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#Aggregate">;
    /**
     * **[ssd:Basic Federated Query](http://www.w3.org/ns/sparql-service-description#BasicFederatedQuery)**
     *
     * sd:BasicFederatedQuery, when used as the object of the sd:feature property, indicates that the SPARQL service supports basic federated query using the SERVICE keyword as defined by SPARQL 1.1 Federation Extensions.
     *
     * @type        instance
     */
    readonly BasicFederatedQuery: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#BasicFederatedQuery">;
    /**
     * **[ssd:Dataset](http://www.w3.org/ns/sparql-service-description#Dataset)**
     *
     * An instance of sd:Dataset represents a RDF Dataset comprised of a default graph and zero or more named graphs.
     *
     * @type        class
     * @parent      ssd:GraphCollection
     */
    readonly Dataset: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#Dataset">;
    /**
     * **[ssd:Dereferences URIs](http://www.w3.org/ns/sparql-service-description#DereferencesURIs)**
     *
     * sd:DereferencesURIs, when used as the object of the sd:feature property, indicates that a SPARQL service will dereference URIs used in FROM/FROM NAMED and USING/USING NAMED clauses and use the resulting RDF in the dataset during query evaluation.
     *
     * @type        instance
     */
    readonly DereferencesURIs: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#DereferencesURIs">;
    /**
     * **[ssd:Empty Graphs](http://www.w3.org/ns/sparql-service-description#EmptyGraphs)**
     *
     * sd:EmptyGraphs, when used as the object of the sd:feature property, indicates that the underlying graph store supports empty graphs. A graph store that supports empty graphs MUST NOT remove graphs that are left empty after triples are removed from them.
     *
     * @type        instance
     */
    readonly EmptyGraphs: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#EmptyGraphs">;
    /**
     * **[ssd:Entailment Profile](http://www.w3.org/ns/sparql-service-description#EntailmentProfile)**
     *
     * An instance of sd:EntailmentProfile represents a profile of an entailment regime. An entailment profile MAY impose restrictions on what constitutes valid RDF with respect to entailment.
     *
     * @type        class
     * @parent      ssd:Feature
     */
    readonly EntailmentProfile: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#EntailmentProfile">;
    /**
     * **[ssd:Entailment Regime](http://www.w3.org/ns/sparql-service-description#EntailmentRegime)**
     *
     * An instance of sd:EntailmentRegime represents an entailment regime used in basic graph pattern matching (as described by SPARQL 1.1 Query Language).
     *
     * @type        class
     * @parent      ssd:Feature
     */
    readonly EntailmentRegime: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#EntailmentRegime">;
    /**
     * **[ssd:Feature](http://www.w3.org/ns/sparql-service-description#Feature)**
     *
     * An instance of sd:Feature represents a feature of a SPARQL service. Specific types of features include functions, aggregates, languages, and entailment regimes and profiles. This document defines five instances of sd:Feature: sd:DereferencesURIs, sd:UnionDefaultGraph, sd:RequiresDataset, sd:EmptyGraphs, and sd:BasicFederatedQuery.
     *
     * @type        class
     */
    readonly Feature: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#Feature">;
    /**
     * **[ssd:Function](http://www.w3.org/ns/sparql-service-description#Function)**
     *
     * An instance of sd:Function represents a function that may be used in a SPARQL SELECT expression or a FILTER, HAVING, GROUP BY, ORDER BY, or BIND clause.
     *
     * @type        class
     * @parent      ssd:Feature
     */
    readonly Function: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#Function">;
    /**
     * **[ssd:Graph](http://www.w3.org/ns/sparql-service-description#Graph)**
     *
     * An instance of sd:Graph represents the description of an RDF graph.
     *
     * @type        class
     */
    readonly Graph: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#Graph">;
    /**
     * **[ssd:Graph Collection](http://www.w3.org/ns/sparql-service-description#GraphCollection)**
     *
     * An instance of sd:GraphCollection represents a collection of zero or more named graph descriptions. Each named graph description belonging to an sd:GraphCollection MUST be linked with the sd:namedGraph predicate.
     *
     * @type        class
     */
    readonly GraphCollection: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#GraphCollection">;
    /**
     * **[ssd:Language](http://www.w3.org/ns/sparql-service-description#Language)**
     *
     * An instance of sd:Language represents one of the SPARQL languages, including specific configurations providing particular features or extensions. This document defines three instances of sd:Language: sd:SPARQL10Query, sd:SPARQL11Query, and sd:SPARQL11Update.
     *
     * @type        class
     * @parent      ssd:Feature
     */
    readonly Language: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#Language">;
    /**
     * **[ssd:Named Graph](http://www.w3.org/ns/sparql-service-description#NamedGraph)**
     *
     * An instance of sd:NamedGraph represents a named graph having a name (via sd:name) and an optional graph description (via sd:graph).
     *
     * @type        class
     */
    readonly NamedGraph: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#NamedGraph">;
    /**
     * **[ssd:Requires Dataset](http://www.w3.org/ns/sparql-service-description#RequiresDataset)**
     *
     * sd:RequiresDataset, when used as the object of the sd:feature property, indicates that the SPARQL service requires an explicit dataset declaration (based on either FROM/FROM NAMED clauses in a query, USING/USING NAMED clauses in an update, or the appropriate SPARQL Protocol parameters).
     *
     * @type        instance
     */
    readonly RequiresDataset: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#RequiresDataset">;
    /**
     * **[ssd:SPARQL 1.0 Query](http://www.w3.org/ns/sparql-service-description#SPARQL10Query)**
     *
     * sd:SPARQL10Query is an sd:Language representing the SPARQL 1.0 Query language.
     *
     * @type        instance
     */
    readonly SPARQL10Query: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#SPARQL10Query">;
    /**
     * **[ssd:SPARQL 1.1 Query](http://www.w3.org/ns/sparql-service-description#SPARQL11Query)**
     *
     * sd:SPARQL11Query is an sd:Language representing the SPARQL 1.1 Query language.
     *
     * @type        instance
     */
    readonly SPARQL11Query: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#SPARQL11Query">;
    /**
     * **[ssd:SPARQL 1.1 Update](http://www.w3.org/ns/sparql-service-description#SPARQL11Update)**
     *
     * sd:SPARQLUpdate is an sd:Language representing the SPARQL 1.1 Update language.
     *
     * @type        instance
     */
    readonly SPARQL11Update: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#SPARQL11Update">;
    /**
     * **[ssd:Service](http://www.w3.org/ns/sparql-service-description#Service)**
     *
     * An instance of sd:Service represents a SPARQL service made available via the SPARQL Protocol.
     *
     * @type        class
     */
    readonly Service: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#Service">;
    /**
     * **[ssd:Union Default Graph](http://www.w3.org/ns/sparql-service-description#UnionDefaultGraph)**
     *
     * sd:UnionDefaultGraph, when used as the object of the sd:feature property, indicates that the default graph of the dataset used during query and update evaluation (when an explicit dataset is not specified) is comprised of the union of all the named graphs in that dataset.
     *
     * @type        instance
     */
    readonly UnionDefaultGraph: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#UnionDefaultGraph">;
    /**
     * **[ssd:available graph descriptions](http://www.w3.org/ns/sparql-service-description#availableGraphs)**
     *
     * Relates an instance of sd:Service to a description of the graphs which are allowed in the construction of a dataset either via the SPARQL Protocol, with FROM/FROM NAMED clauses in a query, or with USING/USING NAMED in an update request, if the service limits the scope of dataset construction.
     *
     * @type        property
     * @domain      ssd:Service
     * @range       ssd:GraphCollection
     */
    readonly availableGraphs: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#availableGraphs">;
    /**
     * **[ssd:default dataset description](http://www.w3.org/ns/sparql-service-description#defaultDataset)**
     *
     * Relates an instance of sd:Service to a description of the default dataset available when no explicit dataset is specified in the query, update request or via protocol parameters.
     *
     * @type        property
     * @domain      ssd:Service
     * @range       ssd:Dataset
     */
    readonly defaultDataset: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#defaultDataset">;
    /**
     * **[ssd:default entailment regime](http://www.w3.org/ns/sparql-service-description#defaultEntailmentRegime)**
     *
     * Relates an instance of sd:Service with a resource representing an entailment regime used for basic graph pattern matching. This property is intended for use when a single entailment regime by default applies to all graphs in the default dataset of the service. In situations where a different entailment regime applies to a specific graph in the dataset, the sd:entailmentRegime property should be used to indicate this fact in the description of that graph.
     *
     * @type        property
     * @parent      ssd:feature
     * @domain      ssd:Service
     * @range       ssd:EntailmentRegime
     */
    readonly defaultEntailmentRegime: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#defaultEntailmentRegime">;
    /**
     * **[ssd:default graph](http://www.w3.org/ns/sparql-service-description#defaultGraph)**
     *
     * Relates an instance of sd:Dataset to the description of its default graph.
     *
     * @type        property
     * @domain      ssd:Dataset
     * @range       ssd:Graph
     */
    readonly defaultGraph: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#defaultGraph">;
    /**
     * **[ssd:default supported entailment profile](http://www.w3.org/ns/sparql-service-description#defaultSupportedEntailmentProfile)**
     *
     * Relates an instance of sd:Service with a resource representing a supported profile of the default entailment regime (as declared by sd:defaultEntailmentRegime).
     *
     * @type        property
     * @parent      ssd:feature
     * @domain      ssd:Service
     * @range       ssd:EntailmentProfile
     */
    readonly defaultSupportedEntailmentProfile: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#defaultSupportedEntailmentProfile">;
    /**
     * **[ssd:endpoint](http://www.w3.org/ns/sparql-service-description#endpoint)**
     *
     * The SPARQL endpoint of an sd:Service that implements the SPARQL Protocol service. The object of the sd:endpoint property is an IRI.
     *
     * @type        property
     * @domain      ssd:Service
     */
    readonly endpoint: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#endpoint">;
    /**
     * **[ssd:entailment regime](http://www.w3.org/ns/sparql-service-description#entailmentRegime)**
     *
     * Relates a named graph description with a resource representing an entailment regime used for basic graph pattern matching over that graph.
     *
     * @type        property
     * @domain      ssd:NamedGraph
     * @range       ssd:EntailmentRegime
     */
    readonly entailmentRegime: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#entailmentRegime">;
    /**
     * **[ssd:extension aggregate](http://www.w3.org/ns/sparql-service-description#extensionAggregate)**
     *
     * Relates an instance of sd:Service to an aggregate that may be used in a SPARQL aggregate query (for instance in a HAVING clause or SELECT expression) besides the standard list of supported aggregates COUNT, SUM, MIN, MAX, AVG, GROUP_CONCAT, and SAMPLE
     *
     * @type        property
     * @parent      ssd:feature
     * @domain      ssd:Service
     * @range       ssd:Aggregate
     */
    readonly extensionAggregate: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#extensionAggregate">;
    /**
     * **[ssd:extension function](http://www.w3.org/ns/sparql-service-description#extensionFunction)**
     *
     * Relates an instance of sd:Service to a function that may be used in a SPARQL SELECT expression or a FILTER, HAVING, GROUP BY, ORDER BY, or BIND clause.
     *
     * @type        property
     * @parent      ssd:feature
     * @domain      ssd:Service
     * @range       ssd:Function
     */
    readonly extensionFunction: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#extensionFunction">;
    /**
     * **[ssd:feature](http://www.w3.org/ns/sparql-service-description#feature)**
     *
     * Relates an instance of sd:Service with a resource representing a supported feature.
     *
     * @type        property
     * @domain      ssd:Service
     * @range       ssd:Feature
     */
    readonly feature: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#feature">;
    /**
     * **[ssd:graph](http://www.w3.org/ns/sparql-service-description#graph)**
     *
     * Relates a named graph to its graph description.
     *
     * @type        property
     * @domain      ssd:NamedGraph
     * @range       ssd:Graph
     */
    readonly graph: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#graph">;
    /**
     * **[ssd:input format](http://www.w3.org/ns/sparql-service-description#inputFormat)**
     *
     * Relates an instance of sd:Service to a format that is supported for parsing RDF input; for example, via a SPARQL 1.1 Update LOAD statement, or when URIs are dereferenced in FROM/FROM NAMED/USING/USING NAMED clauses.
     *
     * @type        property
     * @domain      ssd:Service
     * @range       http://www.w3.org/ns/formats/Format
     */
    readonly inputFormat: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#inputFormat">;
    /**
     * **[ssd:language extension](http://www.w3.org/ns/sparql-service-description#languageExtension)**
     *
     * Relates an instance of sd:Service to a resource representing an implemented extension to the SPARQL Query or Update language.
     *
     * @type        property
     * @parent      ssd:feature
     * @domain      ssd:Service
     * @range       ssd:Feature
     */
    readonly languageExtension: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#languageExtension">;
    /**
     * **[ssd:name](http://www.w3.org/ns/sparql-service-description#name)**
     *
     * Relates a named graph to the name by which it may be referenced in a FROM/FROM NAMED clause. The object of the sd:name property is an IRI.
     *
     * @type        property
     * @domain      ssd:NamedGraph
     */
    readonly name: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#name">;
    /**
     * **[ssd:named graph](http://www.w3.org/ns/sparql-service-description#namedGraph)**
     *
     * Relates an instance of sd:GraphCollection (or its subclass sd:Dataset) to the description of one of its named graphs. The description of such a named graph MUST include the sd:name property and MAY include the sd:graph property.
     *
     * @type        property
     * @domain      ssd:GraphCollection
     * @range       ssd:NamedGraph
     */
    readonly namedGraph: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#namedGraph">;
    /**
     * **[ssd:property feature](http://www.w3.org/ns/sparql-service-description#propertyFeature)**
     *
     * Relates an instance of sd:Service to a resource representing an implemented feature that extends the SPARQL Query or Update language and that is accessed by using the named property.
     *
     * @type        property
     * @parent      ssd:feature
     * @domain      ssd:Service
     * @range       ssd:Feature
     */
    readonly propertyFeature: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#propertyFeature">;
    /**
     * **[ssd:result format](http://www.w3.org/ns/sparql-service-description#resultFormat)**
     *
     * Relates an instance of sd:Service to a format that is supported for serializing query results.
     *
     * @type        property
     * @domain      ssd:Service
     * @range       http://www.w3.org/ns/formats/Format
     */
    readonly resultFormat: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#resultFormat">;
    /**
     * **[ssd:supported entailment profile](http://www.w3.org/ns/sparql-service-description#supportedEntailmentProfile)**
     *
     * Relates a named graph description with a resource representing a supported profile of the entailment regime (as declared by sd:entailmentRegime) used for basic graph pattern matching over that graph.
     *
     * @type        property
     * @domain      ssd:NamedGraph
     * @range       ssd:EntailmentProfile
     */
    readonly supportedEntailmentProfile: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#supportedEntailmentProfile">;
    /**
     * **[ssd:supported language](http://www.w3.org/ns/sparql-service-description#supportedLanguage)**
     *
     * Relates an instance of sd:Service to a SPARQL language (e.g. Query and Update) that it implements.
     *
     * @type        property
     * @parent      ssd:feature
     * @domain      ssd:Service
     * @range       ssd:Language
     */
    readonly supportedLanguage: import("../index.js").Iri<"http://www.w3.org/ns/sparql-service-description#supportedLanguage">;
}
/**
 * prefix **ssd:** <<http://www.w3.org/ns/sparql-service-description#>>
 *
 * SPARQL Service Description
 *
 * SPARQL Service Description
 */
declare const ssd: Vocabulary;
export default ssd;
//# sourceMappingURL=ssd.d.ts.map