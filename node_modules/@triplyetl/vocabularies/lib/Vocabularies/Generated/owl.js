/**
 * Web Ontology Language (OWL)
 * owl.ts (2023-08-08T17:30:09.284Z)
 */
import VocabularyBase from '../../Classes/Vocabulary.js';
class Vocabulary extends VocabularyBase {
    /**
     * **[owl:AllDifferent](http://www.w3.org/2002/07/owl#AllDifferent)**
     *
     * The class of collections of pairwise different individuals.
     *
     * @type        class
     * @parent      http://www.w3.org/2000/01/rdf-schema#Resource
     */
    AllDifferent = this.toIri().concat('AllDifferent');
    /**
     * **[owl:AllDisjointClasses](http://www.w3.org/2002/07/owl#AllDisjointClasses)**
     *
     * The class of collections of pairwise disjoint classes.
     *
     * @type        class
     * @parent      http://www.w3.org/2000/01/rdf-schema#Resource
     */
    AllDisjointClasses = this.toIri().concat('AllDisjointClasses');
    /**
     * **[owl:AllDisjointProperties](http://www.w3.org/2002/07/owl#AllDisjointProperties)**
     *
     * The class of collections of pairwise disjoint properties.
     *
     * @type        class
     * @parent      http://www.w3.org/2000/01/rdf-schema#Resource
     */
    AllDisjointProperties = this.toIri().concat('AllDisjointProperties');
    /**
     * **[owl:Annotation](http://www.w3.org/2002/07/owl#Annotation)**
     *
     * The class of annotated annotations for which the RDF serialization consists of an annotated subject, predicate and object.
     *
     * @type        class
     * @parent      http://www.w3.org/2000/01/rdf-schema#Resource
     */
    Annotation = this.toIri().concat('Annotation');
    /**
     * **[owl:AnnotationProperty](http://www.w3.org/2002/07/owl#AnnotationProperty)**
     *
     * The class of annotation properties.
     *
     * @type        class
     * @parent      http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
     */
    AnnotationProperty = this.toIri().concat('AnnotationProperty');
    /**
     * **[owl:AsymmetricProperty](http://www.w3.org/2002/07/owl#AsymmetricProperty)**
     *
     * The class of asymmetric properties.
     *
     * @type        class
     * @parent      owl:ObjectProperty
     */
    AsymmetricProperty = this.toIri().concat('AsymmetricProperty');
    /**
     * **[owl:Axiom](http://www.w3.org/2002/07/owl#Axiom)**
     *
     * The class of annotated axioms for which the RDF serialization consists of an annotated subject, predicate and object.
     *
     * @type        class
     * @parent      http://www.w3.org/2000/01/rdf-schema#Resource
     */
    Axiom = this.toIri().concat('Axiom');
    /**
     * **[owl:Class](http://www.w3.org/2002/07/owl#Class)**
     *
     * The class of OWL classes.
     *
     * @type        class
     * @parent      http://www.w3.org/2000/01/rdf-schema#Class
     */
    Class = this.toIri().concat('Class');
    /**
     * **[owl:DataRange](http://www.w3.org/2002/07/owl#DataRange)**
     *
     * The class of OWL data ranges, which are special kinds of datatypes. Note: The use of the IRI owl:DataRange has been deprecated as of OWL 2. The IRI rdfs:Datatype SHOULD be used instead.
     *
     * @type        class
     * @parent      http://www.w3.org/2000/01/rdf-schema#Datatype
     */
    DataRange = this.toIri().concat('DataRange');
    /**
     * **[owl:DatatypeProperty](http://www.w3.org/2002/07/owl#DatatypeProperty)**
     *
     * The class of data properties.
     *
     * @type        class
     * @parent      http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
     */
    DatatypeProperty = this.toIri().concat('DatatypeProperty');
    /**
     * **[owl:DeprecatedClass](http://www.w3.org/2002/07/owl#DeprecatedClass)**
     *
     * The class of deprecated classes.
     *
     * @type        class
     * @parent      http://www.w3.org/2000/01/rdf-schema#Class
     */
    DeprecatedClass = this.toIri().concat('DeprecatedClass');
    /**
     * **[owl:DeprecatedProperty](http://www.w3.org/2002/07/owl#DeprecatedProperty)**
     *
     * The class of deprecated properties.
     *
     * @type        class
     * @parent      http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
     */
    DeprecatedProperty = this.toIri().concat('DeprecatedProperty');
    /**
     * **[owl:FunctionalProperty](http://www.w3.org/2002/07/owl#FunctionalProperty)**
     *
     * The class of functional properties.
     *
     * @type        class
     * @parent      http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
     */
    FunctionalProperty = this.toIri().concat('FunctionalProperty');
    /**
     * **[owl:InverseFunctionalProperty](http://www.w3.org/2002/07/owl#InverseFunctionalProperty)**
     *
     * The class of inverse-functional properties.
     *
     * @type        class
     * @parent      owl:ObjectProperty
     */
    InverseFunctionalProperty = this.toIri().concat('InverseFunctionalProperty');
    /**
     * **[owl:IrreflexiveProperty](http://www.w3.org/2002/07/owl#IrreflexiveProperty)**
     *
     * The class of irreflexive properties.
     *
     * @type        class
     * @parent      owl:ObjectProperty
     */
    IrreflexiveProperty = this.toIri().concat('IrreflexiveProperty');
    /**
     * **[owl:NamedIndividual](http://www.w3.org/2002/07/owl#NamedIndividual)**
     *
     * The class of named individuals.
     *
     * @type        class
     * @parent      owl:Thing
     */
    NamedIndividual = this.toIri().concat('NamedIndividual');
    /**
     * **[owl:NegativePropertyAssertion](http://www.w3.org/2002/07/owl#NegativePropertyAssertion)**
     *
     * The class of negative property assertions.
     *
     * @type        class
     * @parent      http://www.w3.org/2000/01/rdf-schema#Resource
     */
    NegativePropertyAssertion = this.toIri().concat('NegativePropertyAssertion');
    /**
     * **[owl:Nothing](http://www.w3.org/2002/07/owl#Nothing)**
     *
     * This is the empty class.
     *
     * @type        class
     * @parent      owl:Thing
     */
    Nothing = this.toIri().concat('Nothing');
    /**
     * **[owl:ObjectProperty](http://www.w3.org/2002/07/owl#ObjectProperty)**
     *
     * The class of object properties.
     *
     * @type        class
     * @parent      http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
     */
    ObjectProperty = this.toIri().concat('ObjectProperty');
    /**
     * **[owl:Ontology](http://www.w3.org/2002/07/owl#Ontology)**
     *
     * The class of ontologies.
     *
     * @type        class
     * @parent      http://www.w3.org/2000/01/rdf-schema#Resource
     */
    Ontology = this.toIri().concat('Ontology');
    /**
     * **[owl:OntologyProperty](http://www.w3.org/2002/07/owl#OntologyProperty)**
     *
     * The class of ontology properties.
     *
     * @type        class
     * @parent      http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
     */
    OntologyProperty = this.toIri().concat('OntologyProperty');
    /**
     * **[owl:ReflexiveProperty](http://www.w3.org/2002/07/owl#ReflexiveProperty)**
     *
     * The class of reflexive properties.
     *
     * @type        class
     * @parent      owl:ObjectProperty
     */
    ReflexiveProperty = this.toIri().concat('ReflexiveProperty');
    /**
     * **[owl:Restriction](http://www.w3.org/2002/07/owl#Restriction)**
     *
     * The class of property restrictions.
     *
     * @type        class
     * @parent      owl:Class
     */
    Restriction = this.toIri().concat('Restriction');
    /**
     * **[owl:SymmetricProperty](http://www.w3.org/2002/07/owl#SymmetricProperty)**
     *
     * The class of symmetric properties.
     *
     * @type        class
     * @parent      owl:ObjectProperty
     */
    SymmetricProperty = this.toIri().concat('SymmetricProperty');
    /**
     * **[owl:Thing](http://www.w3.org/2002/07/owl#Thing)**
     *
     * The class of OWL individuals.
     *
     * @type        class
     */
    Thing = this.toIri().concat('Thing');
    /**
     * **[owl:TransitiveProperty](http://www.w3.org/2002/07/owl#TransitiveProperty)**
     *
     * The class of transitive properties.
     *
     * @type        class
     * @parent      owl:ObjectProperty
     */
    TransitiveProperty = this.toIri().concat('TransitiveProperty');
    /**
     * **[owl:allValuesFrom](http://www.w3.org/2002/07/owl#allValuesFrom)**
     *
     * The property that determines the class that a universal property restriction refers to.
     *
     * @type        property
     * @domain      owl:Restriction
     * @range       http://www.w3.org/2000/01/rdf-schema#Class
     */
    allValuesFrom = this.toIri().concat('allValuesFrom');
    /**
     * **[owl:annotatedProperty](http://www.w3.org/2002/07/owl#annotatedProperty)**
     *
     * The property that determines the predicate of an annotated axiom or annotated annotation.
     *
     * @type        property
     * @domain      http://www.w3.org/2000/01/rdf-schema#Resource
     * @range       http://www.w3.org/2000/01/rdf-schema#Resource
     */
    annotatedProperty = this.toIri().concat('annotatedProperty');
    /**
     * **[owl:annotatedSource](http://www.w3.org/2002/07/owl#annotatedSource)**
     *
     * The property that determines the subject of an annotated axiom or annotated annotation.
     *
     * @type        property
     * @domain      http://www.w3.org/2000/01/rdf-schema#Resource
     * @range       http://www.w3.org/2000/01/rdf-schema#Resource
     */
    annotatedSource = this.toIri().concat('annotatedSource');
    /**
     * **[owl:annotatedTarget](http://www.w3.org/2002/07/owl#annotatedTarget)**
     *
     * The property that determines the object of an annotated axiom or annotated annotation.
     *
     * @type        property
     * @domain      http://www.w3.org/2000/01/rdf-schema#Resource
     * @range       http://www.w3.org/2000/01/rdf-schema#Resource
     */
    annotatedTarget = this.toIri().concat('annotatedTarget');
    /**
     * **[owl:assertionProperty](http://www.w3.org/2002/07/owl#assertionProperty)**
     *
     * The property that determines the predicate of a negative property assertion.
     *
     * @type        property
     * @domain      owl:NegativePropertyAssertion
     * @range       http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
     */
    assertionProperty = this.toIri().concat('assertionProperty');
    /**
     * **[owl:backwardCompatibleWith](http://www.w3.org/2002/07/owl#backwardCompatibleWith)**
     *
     * The annotation property that indicates that a given ontology is backward compatible with another ontology.
     *
     * @type        property
     * @domain      owl:Ontology
     * @range       owl:Ontology
     */
    backwardCompatibleWith = this.toIri().concat('backwardCompatibleWith');
    /**
     * **[owl:bottomDataProperty](http://www.w3.org/2002/07/owl#bottomDataProperty)**
     *
     * The data property that does not relate any individual to any data value.
     *
     * @type        property
     * @domain      owl:Thing
     * @range       http://www.w3.org/2000/01/rdf-schema#Literal
     */
    bottomDataProperty = this.toIri().concat('bottomDataProperty');
    /**
     * **[owl:bottomObjectProperty](http://www.w3.org/2002/07/owl#bottomObjectProperty)**
     *
     * The object property that does not relate any two individuals.
     *
     * @type        property
     * @domain      owl:Thing
     * @range       owl:Thing
     */
    bottomObjectProperty = this.toIri().concat('bottomObjectProperty');
    /**
     * **[owl:cardinality](http://www.w3.org/2002/07/owl#cardinality)**
     *
     * The property that determines the cardinality of an exact cardinality restriction.
     *
     * @type        property
     * @domain      owl:Restriction
     * @range       http://www.w3.org/2001/XMLSchema#nonNegativeInteger
     */
    cardinality = this.toIri().concat('cardinality');
    /**
     * **[owl:complementOf](http://www.w3.org/2002/07/owl#complementOf)**
     *
     * The property that determines that a given class is the complement of another class.
     *
     * @type        property
     * @domain      owl:Class
     * @range       owl:Class
     */
    complementOf = this.toIri().concat('complementOf');
    /**
     * **[owl:datatypeComplementOf](http://www.w3.org/2002/07/owl#datatypeComplementOf)**
     *
     * The property that determines that a given data range is the complement of another data range with respect to the data domain.
     *
     * @type        property
     * @domain      http://www.w3.org/2000/01/rdf-schema#Datatype
     * @range       http://www.w3.org/2000/01/rdf-schema#Datatype
     */
    datatypeComplementOf = this.toIri().concat('datatypeComplementOf');
    /**
     * **[owl:deprecated](http://www.w3.org/2002/07/owl#deprecated)**
     *
     * The annotation property that indicates that a given entity has been deprecated.
     *
     * @type        property
     * @domain      http://www.w3.org/2000/01/rdf-schema#Resource
     * @range       http://www.w3.org/2000/01/rdf-schema#Resource
     */
    deprecated = this.toIri().concat('deprecated');
    /**
     * **[owl:differentFrom](http://www.w3.org/2002/07/owl#differentFrom)**
     *
     * The property that determines that two given individuals are different.
     *
     * @type        property
     * @domain      owl:Thing
     * @range       owl:Thing
     */
    differentFrom = this.toIri().concat('differentFrom');
    /**
     * **[owl:disjointUnionOf](http://www.w3.org/2002/07/owl#disjointUnionOf)**
     *
     * The property that determines that a given class is equivalent to the disjoint union of a collection of other classes.
     *
     * @type        property
     * @domain      owl:Class
     * @range       http://www.w3.org/1999/02/22-rdf-syntax-ns#List
     */
    disjointUnionOf = this.toIri().concat('disjointUnionOf');
    /**
     * **[owl:disjointWith](http://www.w3.org/2002/07/owl#disjointWith)**
     *
     * The property that determines that two given classes are disjoint.
     *
     * @type        property
     * @domain      owl:Class
     * @range       owl:Class
     */
    disjointWith = this.toIri().concat('disjointWith');
    /**
     * **[owl:distinctMembers](http://www.w3.org/2002/07/owl#distinctMembers)**
     *
     * The property that determines the collection of pairwise different individuals in a owl:AllDifferent axiom.
     *
     * @type        property
     * @domain      owl:AllDifferent
     * @range       http://www.w3.org/1999/02/22-rdf-syntax-ns#List
     */
    distinctMembers = this.toIri().concat('distinctMembers');
    /**
     * **[owl:equivalentClass](http://www.w3.org/2002/07/owl#equivalentClass)**
     *
     * The property that determines that two given classes are equivalent, and that is used to specify datatype definitions.
     *
     * @type        property
     * @domain      http://www.w3.org/2000/01/rdf-schema#Class
     * @range       http://www.w3.org/2000/01/rdf-schema#Class
     */
    equivalentClass = this.toIri().concat('equivalentClass');
    /**
     * **[owl:equivalentProperty](http://www.w3.org/2002/07/owl#equivalentProperty)**
     *
     * The property that determines that two given properties are equivalent.
     *
     * @type        property
     * @domain      http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
     * @range       http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
     */
    equivalentProperty = this.toIri().concat('equivalentProperty');
    /**
     * **[owl:hasKey](http://www.w3.org/2002/07/owl#hasKey)**
     *
     * The property that determines the collection of properties that jointly build a key.
     *
     * @type        property
     * @domain      owl:Class
     * @range       http://www.w3.org/1999/02/22-rdf-syntax-ns#List
     */
    hasKey = this.toIri().concat('hasKey');
    /**
     * **[owl:hasSelf](http://www.w3.org/2002/07/owl#hasSelf)**
     *
     * The property that determines the property that a self restriction refers to.
     *
     * @type        property
     * @domain      owl:Restriction
     * @range       http://www.w3.org/2000/01/rdf-schema#Resource
     */
    hasSelf = this.toIri().concat('hasSelf');
    /**
     * **[owl:hasValue](http://www.w3.org/2002/07/owl#hasValue)**
     *
     * The property that determines the individual that a has-value restriction refers to.
     *
     * @type        property
     * @domain      owl:Restriction
     * @range       http://www.w3.org/2000/01/rdf-schema#Resource
     */
    hasValue = this.toIri().concat('hasValue');
    /**
     * **[owl:imports](http://www.w3.org/2002/07/owl#imports)**
     *
     * The property that is used for importing other ontologies into a given ontology.
     *
     * @type        property
     * @domain      owl:Ontology
     * @range       owl:Ontology
     */
    imports = this.toIri().concat('imports');
    /**
     * **[owl:incompatibleWith](http://www.w3.org/2002/07/owl#incompatibleWith)**
     *
     * The annotation property that indicates that a given ontology is incompatible with another ontology.
     *
     * @type        property
     * @domain      owl:Ontology
     * @range       owl:Ontology
     */
    incompatibleWith = this.toIri().concat('incompatibleWith');
    /**
     * **[owl:intersectionOf](http://www.w3.org/2002/07/owl#intersectionOf)**
     *
     * The property that determines the collection of classes or data ranges that build an intersection.
     *
     * @type        property
     * @domain      http://www.w3.org/2000/01/rdf-schema#Class
     * @range       http://www.w3.org/1999/02/22-rdf-syntax-ns#List
     */
    intersectionOf = this.toIri().concat('intersectionOf');
    /**
     * **[owl:inverseOf](http://www.w3.org/2002/07/owl#inverseOf)**
     *
     * The property that determines that two given properties are inverse.
     *
     * @type        property
     * @domain      owl:ObjectProperty
     * @range       owl:ObjectProperty
     */
    inverseOf = this.toIri().concat('inverseOf');
    /**
     * **[owl:maxCardinality](http://www.w3.org/2002/07/owl#maxCardinality)**
     *
     * The property that determines the cardinality of a maximum cardinality restriction.
     *
     * @type        property
     * @domain      owl:Restriction
     * @range       http://www.w3.org/2001/XMLSchema#nonNegativeInteger
     */
    maxCardinality = this.toIri().concat('maxCardinality');
    /**
     * **[owl:maxQualifiedCardinality](http://www.w3.org/2002/07/owl#maxQualifiedCardinality)**
     *
     * The property that determines the cardinality of a maximum qualified cardinality restriction.
     *
     * @type        property
     * @domain      owl:Restriction
     * @range       http://www.w3.org/2001/XMLSchema#nonNegativeInteger
     */
    maxQualifiedCardinality = this.toIri().concat('maxQualifiedCardinality');
    /**
     * **[owl:members](http://www.w3.org/2002/07/owl#members)**
     *
     * The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
     *
     * @type        property
     * @domain      http://www.w3.org/2000/01/rdf-schema#Resource
     * @range       http://www.w3.org/1999/02/22-rdf-syntax-ns#List
     */
    members = this.toIri().concat('members');
    /**
     * **[owl:minCardinality](http://www.w3.org/2002/07/owl#minCardinality)**
     *
     * The property that determines the cardinality of a minimum cardinality restriction.
     *
     * @type        property
     * @domain      owl:Restriction
     * @range       http://www.w3.org/2001/XMLSchema#nonNegativeInteger
     */
    minCardinality = this.toIri().concat('minCardinality');
    /**
     * **[owl:minQualifiedCardinality](http://www.w3.org/2002/07/owl#minQualifiedCardinality)**
     *
     * The property that determines the cardinality of a minimum qualified cardinality restriction.
     *
     * @type        property
     * @domain      owl:Restriction
     * @range       http://www.w3.org/2001/XMLSchema#nonNegativeInteger
     */
    minQualifiedCardinality = this.toIri().concat('minQualifiedCardinality');
    /**
     * **[owl:onClass](http://www.w3.org/2002/07/owl#onClass)**
     *
     * The property that determines the class that a qualified object cardinality restriction refers to.
     *
     * @type        property
     * @domain      owl:Restriction
     * @range       owl:Class
     */
    onClass = this.toIri().concat('onClass');
    /**
     * **[owl:onDataRange](http://www.w3.org/2002/07/owl#onDataRange)**
     *
     * The property that determines the data range that a qualified data cardinality restriction refers to.
     *
     * @type        property
     * @domain      owl:Restriction
     * @range       http://www.w3.org/2000/01/rdf-schema#Datatype
     */
    onDataRange = this.toIri().concat('onDataRange');
    /**
     * **[owl:onDatatype](http://www.w3.org/2002/07/owl#onDatatype)**
     *
     * The property that determines the datatype that a datatype restriction refers to.
     *
     * @type        property
     * @domain      http://www.w3.org/2000/01/rdf-schema#Datatype
     * @range       http://www.w3.org/2000/01/rdf-schema#Datatype
     */
    onDatatype = this.toIri().concat('onDatatype');
    /**
     * **[owl:onProperties](http://www.w3.org/2002/07/owl#onProperties)**
     *
     * The property that determines the n-tuple of properties that a property restriction on an n-ary data range refers to.
     *
     * @type        property
     * @domain      owl:Restriction
     * @range       http://www.w3.org/1999/02/22-rdf-syntax-ns#List
     */
    onProperties = this.toIri().concat('onProperties');
    /**
     * **[owl:onProperty](http://www.w3.org/2002/07/owl#onProperty)**
     *
     * The property that determines the property that a property restriction refers to.
     *
     * @type        property
     * @domain      owl:Restriction
     * @range       http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
     */
    onProperty = this.toIri().concat('onProperty');
    /**
     * **[owl:oneOf](http://www.w3.org/2002/07/owl#oneOf)**
     *
     * The property that determines the collection of individuals or data values that build an enumeration.
     *
     * @type        property
     * @domain      http://www.w3.org/2000/01/rdf-schema#Class
     * @range       http://www.w3.org/1999/02/22-rdf-syntax-ns#List
     */
    oneOf = this.toIri().concat('oneOf');
    /**
     * **[owl:priorVersion](http://www.w3.org/2002/07/owl#priorVersion)**
     *
     * The annotation property that indicates the predecessor ontology of a given ontology.
     *
     * @type        property
     * @domain      owl:Ontology
     * @range       owl:Ontology
     */
    priorVersion = this.toIri().concat('priorVersion');
    /**
     * **[owl:propertyChainAxiom](http://www.w3.org/2002/07/owl#propertyChainAxiom)**
     *
     * The property that determines the n-tuple of properties that build a sub property chain of a given property.
     *
     * @type        property
     * @domain      owl:ObjectProperty
     * @range       http://www.w3.org/1999/02/22-rdf-syntax-ns#List
     */
    propertyChainAxiom = this.toIri().concat('propertyChainAxiom');
    /**
     * **[owl:propertyDisjointWith](http://www.w3.org/2002/07/owl#propertyDisjointWith)**
     *
     * The property that determines that two given properties are disjoint.
     *
     * @type        property
     * @domain      http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
     * @range       http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
     */
    propertyDisjointWith = this.toIri().concat('propertyDisjointWith');
    /**
     * **[owl:qualifiedCardinality](http://www.w3.org/2002/07/owl#qualifiedCardinality)**
     *
     * The property that determines the cardinality of an exact qualified cardinality restriction.
     *
     * @type        property
     * @domain      owl:Restriction
     * @range       http://www.w3.org/2001/XMLSchema#nonNegativeInteger
     */
    qualifiedCardinality = this.toIri().concat('qualifiedCardinality');
    /**
     * **[owl:sameAs](http://www.w3.org/2002/07/owl#sameAs)**
     *
     * The property that determines that two given individuals are equal.
     *
     * @type        property
     * @domain      owl:Thing
     * @range       owl:Thing
     */
    sameAs = this.toIri().concat('sameAs');
    /**
     * **[owl:someValuesFrom](http://www.w3.org/2002/07/owl#someValuesFrom)**
     *
     * The property that determines the class that an existential property restriction refers to.
     *
     * @type        property
     * @domain      owl:Restriction
     * @range       http://www.w3.org/2000/01/rdf-schema#Class
     */
    someValuesFrom = this.toIri().concat('someValuesFrom');
    /**
     * **[owl:sourceIndividual](http://www.w3.org/2002/07/owl#sourceIndividual)**
     *
     * The property that determines the subject of a negative property assertion.
     *
     * @type        property
     * @domain      owl:NegativePropertyAssertion
     * @range       owl:Thing
     */
    sourceIndividual = this.toIri().concat('sourceIndividual');
    /**
     * **[owl:targetIndividual](http://www.w3.org/2002/07/owl#targetIndividual)**
     *
     * The property that determines the object of a negative object property assertion.
     *
     * @type        property
     * @domain      owl:NegativePropertyAssertion
     * @range       owl:Thing
     */
    targetIndividual = this.toIri().concat('targetIndividual');
    /**
     * **[owl:targetValue](http://www.w3.org/2002/07/owl#targetValue)**
     *
     * The property that determines the value of a negative data property assertion.
     *
     * @type        property
     * @domain      owl:NegativePropertyAssertion
     * @range       http://www.w3.org/2000/01/rdf-schema#Literal
     */
    targetValue = this.toIri().concat('targetValue');
    /**
     * **[owl:topDataProperty](http://www.w3.org/2002/07/owl#topDataProperty)**
     *
     * The data property that relates every individual to every data value.
     *
     * @type        property
     * @domain      owl:Thing
     * @range       http://www.w3.org/2000/01/rdf-schema#Literal
     */
    topDataProperty = this.toIri().concat('topDataProperty');
    /**
     * **[owl:topObjectProperty](http://www.w3.org/2002/07/owl#topObjectProperty)**
     *
     * The object property that relates every two individuals.
     *
     * @type        property
     * @domain      owl:Thing
     * @range       owl:Thing
     */
    topObjectProperty = this.toIri().concat('topObjectProperty');
    /**
     * **[owl:unionOf](http://www.w3.org/2002/07/owl#unionOf)**
     *
     * The property that determines the collection of classes or data ranges that build a union.
     *
     * @type        property
     * @domain      http://www.w3.org/2000/01/rdf-schema#Class
     * @range       http://www.w3.org/1999/02/22-rdf-syntax-ns#List
     */
    unionOf = this.toIri().concat('unionOf');
    /**
     * **[owl:versionIRI](http://www.w3.org/2002/07/owl#versionIRI)**
     *
     * The property that identifies the version IRI of an ontology.
     *
     * @type        property
     * @domain      owl:Ontology
     * @range       owl:Ontology
     */
    versionIRI = this.toIri().concat('versionIRI');
    /**
     * **[owl:versionInfo](http://www.w3.org/2002/07/owl#versionInfo)**
     *
     * The annotation property that provides version information for an ontology or another OWL construct.
     *
     * @type        property
     * @domain      http://www.w3.org/2000/01/rdf-schema#Resource
     * @range       http://www.w3.org/2000/01/rdf-schema#Resource
     */
    versionInfo = this.toIri().concat('versionInfo');
    /**
     * **[owl:withRestrictions](http://www.w3.org/2002/07/owl#withRestrictions)**
     *
     * The property that determines the collection of facet-value pairs that define a datatype restriction.
     *
     * @type        property
     * @domain      http://www.w3.org/2000/01/rdf-schema#Datatype
     * @range       http://www.w3.org/1999/02/22-rdf-syntax-ns#List
     */
    withRestrictions = this.toIri().concat('withRestrictions');
}
/**
 * prefix **owl:** <<http://www.w3.org/2002/07/owl#>>
 *
 * Web Ontology Language (OWL)
 *
 * This ontology partially describes the built-in classes and properties that together form the basis of the RDF/XML syntax of OWL 2.  The content of this ontology is based on Tables 6.1 and 6.2 in Section 6.4 of the OWL 2 RDF-Based Semantics specification, available at <http://www.w3.org/TR/owl2-rdf-based-semantics/>.
 *
 * Please note that those tables do not include the different annotations (labels, comments and `rdfs:isDefinedBy` links) used in this file.  Also note that the descriptions provided in this ontology do not provide a complete and correct formal description of either the syntax or the semantics of the introduced terms (please see the OWL 2 recommendations for the complete and normative specifications).
 *
 * Furthermore, the information provided by this ontology may be misleading if not used with care. This ontology SHOULD NOT be imported into OWL ontologies. Importing this file into an OWL 2 DL ontology will cause it to become an OWL 2 Full ontology and may have other, unexpected, consequences.
 *
 * Version: 2.0.0
 */
const owl = new Vocabulary('http://www.w3.org/2002/07/owl#');
export default owl;
//# sourceMappingURL=owl.js.map