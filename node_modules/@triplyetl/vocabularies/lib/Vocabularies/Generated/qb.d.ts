/**
 * Data Cube Vocabulary
 * qb.ts (2023-08-08T17:30:09.327Z)
 */
import VocabularyBase from '../../Classes/Vocabulary.js';
declare class Vocabulary extends VocabularyBase<'http://purl.org/linked-data/cube#'> {
    /**
     * **[qb:Attachable (abstract)](http://purl.org/linked-data/cube#Attachable)**
     *
     * Abstract superclass for everything that can have attributes and dimensions
     *
     * @type        class
     */
    readonly Attachable: import("../index.js").Iri<"http://purl.org/linked-data/cube#Attachable">;
    /**
     * **[qb:Attribute property](http://purl.org/linked-data/cube#AttributeProperty)**
     *
     * The class of components which represent attributes of observations in the cube, e.g. unit of measurement
     *
     * @type        class
     * @parent      qb:ComponentProperty
     */
    readonly AttributeProperty: import("../index.js").Iri<"http://purl.org/linked-data/cube#AttributeProperty">;
    /**
     * **[qb:Coded property](http://purl.org/linked-data/cube#CodedProperty)**
     *
     * Superclass of all coded ComponentProperties
     *
     * @type        class
     * @parent      qb:ComponentProperty
     */
    readonly CodedProperty: import("../index.js").Iri<"http://purl.org/linked-data/cube#CodedProperty">;
    /**
     * **[qb:Component property (abstract)](http://purl.org/linked-data/cube#ComponentProperty)**
     *
     * Abstract super-property of all properties representing dimensions, attributes or measures
     *
     * @type        class
     * @parent      http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
     */
    readonly ComponentProperty: import("../index.js").Iri<"http://purl.org/linked-data/cube#ComponentProperty">;
    /**
     * **[qb:Component set](http://purl.org/linked-data/cube#ComponentSet)**
     *
     * Abstract class of things which reference one or more ComponentProperties
     *
     * @type        class
     */
    readonly ComponentSet: import("../index.js").Iri<"http://purl.org/linked-data/cube#ComponentSet">;
    /**
     * **[qb:Component specification](http://purl.org/linked-data/cube#ComponentSpecification)**
     *
     * Used to define properties of a component (attribute, dimension etc) which are specific to its usage in a DSD.
     *
     * @type        class
     * @parent      qb:ComponentSet
     */
    readonly ComponentSpecification: import("../index.js").Iri<"http://purl.org/linked-data/cube#ComponentSpecification">;
    /**
     * **[qb:Data set](http://purl.org/linked-data/cube#DataSet)**
     *
     * Represents a collection of observations, possibly organized into various slices, conforming to some common dimensional structure.
     *
     * @type        class
     * @parent      qb:Attachable
     */
    readonly DataSet: import("../index.js").Iri<"http://purl.org/linked-data/cube#DataSet">;
    /**
     * **[qb:Data structure definition](http://purl.org/linked-data/cube#DataStructureDefinition)**
     *
     * Defines the structure of a DataSet or slice
     *
     * @type        class
     * @parent      qb:ComponentSet
     */
    readonly DataStructureDefinition: import("../index.js").Iri<"http://purl.org/linked-data/cube#DataStructureDefinition">;
    /**
     * **[qb:Dimension property](http://purl.org/linked-data/cube#DimensionProperty)**
     *
     * The class of components which represent the dimensions of the cube
     *
     * @type        class
     * @parent      qb:CodedProperty
     */
    readonly DimensionProperty: import("../index.js").Iri<"http://purl.org/linked-data/cube#DimensionProperty">;
    /**
     * **[qb:Hierarchical Code List](http://purl.org/linked-data/cube#HierarchicalCodeList)**
     *
     * Represents a generalized hierarchy of concepts which can be used for coding. The hierarchy is defined by one or more roots together with a property which relates concepts in the hierarchy to thier child concept .  The same concepts may be members of multiple hierarchies provided that different qb:parentChildProperty values are used for each hierarchy.
     *
     * @type        class
     */
    readonly HierarchicalCodeList: import("../index.js").Iri<"http://purl.org/linked-data/cube#HierarchicalCodeList">;
    /**
     * **[qb:Measure property](http://purl.org/linked-data/cube#MeasureProperty)**
     *
     * The class of components which represent the measured value of the phenomenon being observed
     *
     * @type        class
     * @parent      qb:ComponentProperty
     */
    readonly MeasureProperty: import("../index.js").Iri<"http://purl.org/linked-data/cube#MeasureProperty">;
    /**
     * **[qb:Observation](http://purl.org/linked-data/cube#Observation)**
     *
     * A single observation in the cube, may have one or more associated measured values
     *
     * @type        class
     * @parent      qb:Attachable
     */
    readonly Observation: import("../index.js").Iri<"http://purl.org/linked-data/cube#Observation">;
    /**
     * **[qb:Observation Group](http://purl.org/linked-data/cube#ObservationGroup)**
     *
     * A, possibly arbitrary, group of observations.
     *
     * @type        class
     */
    readonly ObservationGroup: import("../index.js").Iri<"http://purl.org/linked-data/cube#ObservationGroup">;
    /**
     * **[qb:Slice](http://purl.org/linked-data/cube#Slice)**
     *
     * Denotes a subset of a DataSet defined by fixing a subset of the dimensional values, component properties on the Slice
     *
     * @type        class
     * @parent      qb:Attachable
     */
    readonly Slice: import("../index.js").Iri<"http://purl.org/linked-data/cube#Slice">;
    /**
     * **[qb:Slice key](http://purl.org/linked-data/cube#SliceKey)**
     *
     * Denotes a subset of the component properties of a DataSet which are fixed in the corresponding slices
     *
     * @type        class
     * @parent      qb:ComponentSet
     */
    readonly SliceKey: import("../index.js").Iri<"http://purl.org/linked-data/cube#SliceKey">;
    /**
     * **[qb:attribute](http://purl.org/linked-data/cube#attribute)**
     *
     * An alternative to qb:componentProperty which makes explicit that the component is a attribute
     *
     * @type        property
     * @parent      qb:componentProperty
     * @range       qb:AttributeProperty
     */
    readonly attribute: import("../index.js").Iri<"http://purl.org/linked-data/cube#attribute">;
    /**
     * **[qb:code list](http://purl.org/linked-data/cube#codeList)**
     *
     * gives the code list associated with a CodedProperty
     *
     * @type        property
     * @domain      qb:CodedProperty
     * @range       http://www.w3.org/2004/02/skos/core#ConceptScheme or http://www.w3.org/2004/02/skos/core#Collection or qb:HierarchicalCodeList
     */
    readonly codeList: import("../index.js").Iri<"http://purl.org/linked-data/cube#codeList">;
    /**
     * **[qb:component specification](http://purl.org/linked-data/cube#component)**
     *
     * indicates a component specification which is included in the structure of the dataset
     *
     * @type        property
     * @domain      qb:DataStructureDefinition
     * @range       qb:ComponentSpecification
     */
    readonly component: import("../index.js").Iri<"http://purl.org/linked-data/cube#component">;
    /**
     * **[qb:component attachment](http://purl.org/linked-data/cube#componentAttachment)**
     *
     * Indicates the level at which the component property should be attached, this might an qb:DataSet, qb:Slice or qb:Observation, or a qb:MeasureProperty.
     *
     * @type        property
     * @domain      qb:ComponentSpecification
     * @range       http://www.w3.org/2000/01/rdf-schema#Class
     */
    readonly componentAttachment: import("../index.js").Iri<"http://purl.org/linked-data/cube#componentAttachment">;
    /**
     * **[qb:component](http://purl.org/linked-data/cube#componentProperty)**
     *
     * indicates a ComponentProperty (i.e. attribute/dimension) expected on a DataSet, or a dimension fixed in a SliceKey
     *
     * @type        property
     * @domain      qb:ComponentSet
     * @range       qb:ComponentProperty
     */
    readonly componentProperty: import("../index.js").Iri<"http://purl.org/linked-data/cube#componentProperty">;
    /**
     * **[qb:component required](http://purl.org/linked-data/cube#componentRequired)**
     *
     * Indicates whether a component property is required (true) or optional (false) in the context of a DSD. Only applicable    to components correspond to an attribute. Defaults to false (optional).
     *
     * @type        property
     * @domain      qb:ComponentSpecification
     * @range       http://www.w3.org/2001/XMLSchema#boolean
     */
    readonly componentRequired: import("../index.js").Iri<"http://purl.org/linked-data/cube#componentRequired">;
    /**
     * **[qb:concept](http://purl.org/linked-data/cube#concept)**
     *
     * gives the concept which is being measured or indicated by a ComponentProperty
     *
     * @type        property
     * @domain      qb:ComponentProperty
     * @range       http://www.w3.org/2004/02/skos/core#Concept
     */
    readonly concept: import("../index.js").Iri<"http://purl.org/linked-data/cube#concept">;
    /**
     * **[qb:data set](http://purl.org/linked-data/cube#dataSet)**
     *
     * indicates the data set of which this observation is a part
     *
     * @type        property
     * @domain      qb:Observation
     * @range       qb:DataSet
     */
    readonly dataSet: import("../index.js").Iri<"http://purl.org/linked-data/cube#dataSet">;
    /**
     * **[qb:dimension](http://purl.org/linked-data/cube#dimension)**
     *
     * An alternative to qb:componentProperty which makes explicit that the component is a dimension
     *
     * @type        property
     * @parent      qb:componentProperty
     * @range       qb:DimensionProperty
     */
    readonly dimension: import("../index.js").Iri<"http://purl.org/linked-data/cube#dimension">;
    /**
     * **[qb:hierarchyRoot](http://purl.org/linked-data/cube#hierarchyRoot)**
     *
     * Specifies a root of the hierarchy. A hierarchy may have multiple roots but must have at least one.
     *
     * @type        property
     * @domain      qb:HierarchicalCodeList
     */
    readonly hierarchyRoot: import("../index.js").Iri<"http://purl.org/linked-data/cube#hierarchyRoot">;
    /**
     * **[qb:measure](http://purl.org/linked-data/cube#measure)**
     *
     * An alternative to qb:componentProperty which makes explicit that the component is a measure
     *
     * @type        property
     * @parent      qb:componentProperty
     * @range       qb:MeasureProperty
     */
    readonly measure: import("../index.js").Iri<"http://purl.org/linked-data/cube#measure">;
    /**
     * **[qb:measure dimension](http://purl.org/linked-data/cube#measureDimension)**
     *
     * An alternative to qb:componentProperty which makes explicit that the component is a measure dimension
     *
     * @type        property
     * @parent      qb:componentProperty
     * @range       qb:DimensionProperty
     */
    readonly measureDimension: import("../index.js").Iri<"http://purl.org/linked-data/cube#measureDimension">;
    /**
     * **[qb:measure type](http://purl.org/linked-data/cube#measureType)**
     *
     * Generic measure dimension, the value of this dimension indicates which measure (from the set of measures in the DSD) is being given by the obsValue (or other primary measure)
     *
     * @type        property
     * @range       qb:MeasureProperty
     */
    readonly measureType: import("../index.js").Iri<"http://purl.org/linked-data/cube#measureType">;
    /**
     * **[qb:observation](http://purl.org/linked-data/cube#observation)**
     *
     * indicates a observation contained within this slice of the data set
     *
     * @type        property
     * @domain      qb:ObservationGroup
     * @range       qb:Observation
     */
    readonly observation: import("../index.js").Iri<"http://purl.org/linked-data/cube#observation">;
    /**
     * **[qb:observation group](http://purl.org/linked-data/cube#observationGroup)**
     *
     * Indicates a group of observations. The domain of this property is left open so that a group may be attached to different resources and need not be restricted to a single DataSet
     *
     * @type        property
     * @range       qb:ObservationGroup
     */
    readonly observationGroup: import("../index.js").Iri<"http://purl.org/linked-data/cube#observationGroup">;
    /**
     * **[qb:order](http://purl.org/linked-data/cube#order)**
     *
     * indicates a priority order for the components of sets with this structure, used to guide presentations - lower order numbers come before higher numbers, un-numbered components come last
     *
     * @type        property
     * @domain      qb:ComponentSpecification
     * @range       http://www.w3.org/2001/XMLSchema#int
     */
    readonly order: import("../index.js").Iri<"http://purl.org/linked-data/cube#order">;
    /**
     * **[qb:parent-child property](http://purl.org/linked-data/cube#parentChildProperty)**
     *
     * Specifies a property which relates a parent concept in the hierarchy to a child concept.
     *
     * @type        property
     * @domain      qb:HierarchicalCodeList
     * @range       http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
     */
    readonly parentChildProperty: import("../index.js").Iri<"http://purl.org/linked-data/cube#parentChildProperty">;
    /**
     * **[qb:slice](http://purl.org/linked-data/cube#slice)**
     *
     * Indicates a subset of a DataSet defined by fixing a subset of the dimensional values
     *
     * @type        property
     * @parent      qb:observationGroup
     * @domain      qb:DataSet
     * @range       qb:Slice
     */
    readonly slice: import("../index.js").Iri<"http://purl.org/linked-data/cube#slice">;
    /**
     * **[qb:slice key](http://purl.org/linked-data/cube#sliceKey)**
     *
     * indicates a slice key which is used for slices in this dataset
     *
     * @type        property
     * @domain      qb:DataStructureDefinition
     * @range       qb:SliceKey
     */
    readonly sliceKey: import("../index.js").Iri<"http://purl.org/linked-data/cube#sliceKey">;
    /**
     * **[qb:slice structure](http://purl.org/linked-data/cube#sliceStructure)**
     *
     * indicates the sub-key corresponding to this slice
     *
     * @type        property
     * @domain      qb:Slice
     * @range       qb:SliceKey
     */
    readonly sliceStructure: import("../index.js").Iri<"http://purl.org/linked-data/cube#sliceStructure">;
    /**
     * **[qb:structure](http://purl.org/linked-data/cube#structure)**
     *
     * indicates the structure to which this data set conforms
     *
     * @type        property
     * @domain      qb:DataSet
     * @range       qb:DataStructureDefinition
     */
    readonly structure: import("../index.js").Iri<"http://purl.org/linked-data/cube#structure">;
}
/**
 * prefix **qb:** <<http://purl.org/linked-data/cube#>>
 *
 * Data Cube Vocabulary
 *
 * There are many situations where it would be useful to be able to publish multi-dimensional data, such as statistics, on the web in such a way that it can be linked to related data sets and concepts.  The Data Cube vocabulary provides a means to do this using the W3C [RDF](http://www.w3.org/TR/REC-rdf-syntax/) (Resource Description Framework) standard.  The model underpinning the Data Cube vocabulary is compatible with the cube model that underlies [SDMX](http://sdmx.org/) (Statistical Data and Metadata eXchange), an ISO standard for exchanging and sharing statistical data and metadata among organizations.  The Data Cube vocabulary is a core foundation which supports extension vocabularies to enable publication of other aspects of statistical data flows or other multi-dimensional data sets.
 */
declare const qb: Vocabulary;
export default qb;
//# sourceMappingURL=qb.d.ts.map