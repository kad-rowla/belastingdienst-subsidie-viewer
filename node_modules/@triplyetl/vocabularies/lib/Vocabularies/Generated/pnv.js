/**
 * Person Name Vocabulary (PNV)
 * pnv.ts (2023-08-08T17:30:09.296Z)
 */
import VocabularyBase from '../../Classes/Vocabulary.js';
class Vocabulary extends VocabularyBase {
    /**
     * **[pnv:Person](https://w3id.org/pnv#Person)**
     *
     * A Person is a human being whose individual existence can somehow be documented
     *
     * @type        class
     */
    Person = this.toIri().concat('Person');
    /**
     * **[pnv:A Person's name](https://w3id.org/pnv#PersonName)**
     *
     * A name is considered to be a resource type in its own right
     *
     * @type        class
     */
    PersonName = this.toIri().concat('PersonName');
    /**
     * **[pnv:base surname](https://w3id.org/pnv#baseSurname)**
     *
     * A Base surname is a family name without any prefixes, if those prefixes need to be ignored in sorting. If the family name is e.g. "de Vries" and it needs to be sorted under "V", the Base surname is "Vries". Base surname is equivalent to BioDes:geslachtsnaam.
     *
     * @type        property
     * @domain      pnv:PersonName
     * @range       http://www.w3.org/2001/XMLSchema#string
     */
    baseSurname = this.toIri().concat('baseSurname');
    /**
     * **[pnv:disambiguating description](https://w3id.org/pnv#disambiguatingDescription)**
     *
     * A Disambiguating description is a name part that is appended to make sure that the right person is designated. Name parts like "Sr." and "Jr.", used to distinguish a child from his parent, are disambiguating descriptions.
     *
     * @type        property
     * @parent      pnv:suffix
     * @domain      pnv:PersonName
     * @range       http://www.w3.org/2001/XMLSchema#string
     */
    disambiguatingDescription = this.toIri().concat('disambiguatingDescription');
    /**
     * **[pnv:first name (Biodes)](https://w3id.org/pnv#firstName)**
     *
     * A First name is a combination of a given name, a patronym (if any) and a given name suffix. This property is only to be used by data providers who have combined these name elements into one field (following the BioDes structure). First name is equivalent to BioDes:voornaam.
     *
     * @type        property
     * @domain      pnv:PersonName
     * @range       http://www.w3.org/2001/XMLSchema#string
     */
    firstName = this.toIri().concat('firstName');
    /**
     * **[pnv:given name](https://w3id.org/pnv#givenName)**
     *
     * A Given name designates the name(s) given to someone at birth or any other name-giving event
     *
     * @type        property
     * @domain      pnv:PersonName
     * @range       http://www.w3.org/2001/XMLSchema#string
     */
    givenName = this.toIri().concat('givenName');
    /**
     * **[pnv:given name suffix](https://w3id.org/pnv#givenNameSuffix)**
     *
     * A Given name suffix is a name part that is appended to a given name. In the name of the fifteenth-century Duke of Burgundy Philip the Good, for example, "the Good" is the Given name suffix.
     *
     * @type        property
     * @parent      pnv:givenName
     * @domain      pnv:PersonName
     * @range       http://www.w3.org/2001/XMLSchema#string
     */
    givenNameSuffix = this.toIri().concat('givenNameSuffix');
    /**
     * **[pnv:has name](https://w3id.org/pnv#hasName)**
     *
     * @type        property
     * @domain      pnv:Person
     * @range       pnv:PersonName
     */
    hasName = this.toIri().concat('hasName');
    /**
     * **[pnv:honorific suffix](https://w3id.org/pnv#honorificSuffix)**
     *
     * An Honorific suffix is a name part that is appended to distinguish someone
     *
     * @type        property
     * @parent      pnv:suffix
     * @domain      pnv:PersonName
     * @range       http://www.w3.org/2001/XMLSchema#string
     */
    honorificSuffix = this.toIri().concat('honorificSuffix');
    /**
     * **[pnv:infix (BioDes)](https://w3id.org/pnv#infix)**
     *
     * An Infix designates name elements that come in between pnv:firstName and pnv:baseSurname. This property is only to be used by data providers who have structured their name elements following the BioDes structure. Infix is equivalent to BioDes:intrapositie.
     *
     * @type        property
     * @domain      pnv:PersonName
     * @range       http://www.w3.org/2001/XMLSchema#string
     */
    infix = this.toIri().concat('infix');
    /**
     * **[pnv:infix title](https://w3id.org/pnv#infixTitle)**
     *
     * An Infix title designates a title in the middle of a name
     *
     * @type        property
     * @parent      pnv:infix
     * @domain      pnv:PersonName
     * @range       http://www.w3.org/2001/XMLSchema#string
     */
    infixTitle = this.toIri().concat('infixTitle');
    /**
     * **[pnv:initials](https://w3id.org/pnv#initials)**
     *
     * A2A:PersonNameInitials
     *
     * @type        property
     * @domain      pnv:PersonName
     * @range       http://www.w3.org/2001/XMLSchema#string
     */
    initials = this.toIri().concat('initials');
    /**
     * **[pnv:full name](https://w3id.org/pnv#literalName)**
     *
     * A2A:PersonNameLiteral
     *
     * @type        property
     * @domain      pnv:PersonName
     * @range       http://www.w3.org/2001/XMLSchema#string
     */
    literalName = this.toIri().concat('literalName');
    /**
     * **[pnv:name specification](https://w3id.org/pnv#nameSpecification)**
     *
     * The Name specification property can be used to specify the type of name, e.g. to discern between name variants, or to state that the person's name is unknown or that the person was unnamed, e.g. in the case of a child that died before it was given a name. It can be a string (e.g. "unknown", "unnamed", "religious name", "stage name", "pen name", "married name" or "birth name") or a reference to a controlled vocabulary.
     *
     * @type        property
     * @domain      pnv:PersonName
     */
    nameSpecification = this.toIri().concat('nameSpecification');
    /**
     * **[pnv:patronym](https://w3id.org/pnv#patronym)**
     *
     * A Patronym is a name element based on the given name of one's father or grandfather. This is also the preferred property for a matronym (i.e. a name element based on the given name of one's mother or grandmother).
     *
     * @type        property
     * @domain      pnv:PersonName
     * @range       http://www.w3.org/2001/XMLSchema#string
     */
    patronym = this.toIri().concat('patronym');
    /**
     * **[pnv:prefix](https://w3id.org/pnv#prefix)**
     *
     * A2A:PersonNameTitleA2A:PersonNameTitleOfNobility
     *
     * @type        property
     * @domain      pnv:PersonName
     * @range       http://www.w3.org/2001/XMLSchema#string
     */
    prefix = this.toIri().concat('prefix');
    /**
     * **[pnv:suffix (BioDes)](https://w3id.org/pnv#suffix)**
     *
     * BioDes:postpositie
     *
     * @type        property
     * @domain      pnv:PersonName
     * @range       http://www.w3.org/2001/XMLSchema#string
     */
    suffix = this.toIri().concat('suffix');
    /**
     * **[pnv:surname](https://w3id.org/pnv#surname)**
     *
     * A surname is the name of the family a person is born into, including one or more prefixes. In some cases the honorific prefix can be incorporated into the surname (e.g. Van Welderen baron Rengers).
     *
     * @type        property
     * @domain      pnv:PersonName
     * @range       http://www.w3.org/2001/XMLSchema#string
     */
    surname = this.toIri().concat('surname');
    /**
     * **[pnv:surname prefix](https://w3id.org/pnv#surnamePrefix)**
     *
     * A Surname prefix is a name part prefixing the surname (e.g. "van" or "van den").
     *
     * @type        property
     * @parent      http://www.w3.org/2002/07/owl#topDataProperty
     * @domain      pnv:PersonName
     * @range       http://www.w3.org/2001/XMLSchema#string
     */
    surnamePrefix = this.toIri().concat('surnamePrefix');
    /**
     * **[pnv:trailing patronym](https://w3id.org/pnv#trailingPatronym)**
     *
     * A Trailing patronym refers to the parent's given name, suffixing the person's family name, mostly used for disambiguation.
     *
     * @type        property
     * @parent      pnv:patronym
     * @domain      pnv:PersonName
     * @range       http://www.w3.org/2001/XMLSchema#string
     */
    trailingPatronym = this.toIri().concat('trailingPatronym');
}
/**
 * prefix **pnv:** <<https://w3id.org/pnv#>>
 *
 * Person Name Vocabulary (PNV)
 *
 * The Person Name Vocabulary (PNV) is an RDF vocabulary and data model for persons' names. It is applicable to many datasets in which persons are described, as it accommodates different levels of data granularity. It furthermore allows for easy alignment of name elements, including idiosyncratic ones, such as family name prefixes and patronymics, with standard vocabularies such as Schema.org, FOAF, DBpedia and Wikidata, thus guaranteeing optimal data interoperability.
 *
 * - Homepage: <https://w3id.org/pnv#>
 * - Namespace: `https://w3id.org/pnv#`
 */
const pnv = new Vocabulary('https://w3id.org/pnv#');
export default pnv;
//# sourceMappingURL=pnv.js.map