/**
 * prov
 * prov.ts (2023-08-08T17:30:09.309Z)
 */
import VocabularyBase from '../../Classes/Vocabulary.js';
declare class Vocabulary extends VocabularyBase<'http://www.w3.org/ns/prov#'> {
    /**
     * **[prov:Accept](http://www.w3.org/ns/prov#Accept)**
     *
     * @type        class
     * @parent      prov:Activity
     */
    readonly Accept: import("../index.js").Iri<"http://www.w3.org/ns/prov#Accept">;
    /**
     * **[prov:Activity](http://www.w3.org/ns/prov#Activity)**
     *
     * @type        class
     */
    readonly Activity: import("../index.js").Iri<"http://www.w3.org/ns/prov#Activity">;
    /**
     * **[prov:ActivityInfluence](http://www.w3.org/ns/prov#ActivityInfluence)**
     *
     * ActivityInfluence provides additional descriptions of an Activity's binary influence upon any other kind of resource. Instances of ActivityInfluence use the prov:activity property to cite the influencing Activity.
     *
     * @type        class
     * @parent      https://triplydb.com/.well-known/genid/19a16174a1592f00cdadb05c17899f49
     */
    readonly ActivityInfluence: import("../index.js").Iri<"http://www.w3.org/ns/prov#ActivityInfluence">;
    /**
     * **[prov:Agent](http://www.w3.org/ns/prov#Agent)**
     *
     * @type        class
     */
    readonly Agent: import("../index.js").Iri<"http://www.w3.org/ns/prov#Agent">;
    /**
     * **[prov:AgentInfluence](http://www.w3.org/ns/prov#AgentInfluence)**
     *
     * AgentInfluence provides additional descriptions of an Agent's binary influence upon any other kind of resource. Instances of AgentInfluence use the prov:agent property to cite the influencing Agent.
     *
     * @type        class
     * @parent      prov:Influence
     */
    readonly AgentInfluence: import("../index.js").Iri<"http://www.w3.org/ns/prov#AgentInfluence">;
    /**
     * **[prov:Association](http://www.w3.org/ns/prov#Association)**
     *
     * An instance of prov:Association provides additional descriptions about the binary prov:wasAssociatedWith relation from an prov:Activity to some prov:Agent that had some responsiblity for it. For example, :baking prov:wasAssociatedWith :baker; prov:qualifiedAssociation [ a prov:Association; prov:agent :baker; :foo :bar ].
     *
     * @type        class
     * @parent      prov:AgentInfluence
     */
    readonly Association: import("../index.js").Iri<"http://www.w3.org/ns/prov#Association">;
    /**
     * **[prov:Attribution](http://www.w3.org/ns/prov#Attribution)**
     *
     * An instance of prov:Attribution provides additional descriptions about the binary prov:wasAttributedTo relation from an prov:Entity to some prov:Agent that had some responsible for it. For example, :cake prov:wasAttributedTo :baker; prov:qualifiedAttribution [ a prov:Attribution; prov:entity :baker; :foo :bar ].
     *
     * @type        class
     * @parent      prov:AgentInfluence
     */
    readonly Attribution: import("../index.js").Iri<"http://www.w3.org/ns/prov#Attribution">;
    /**
     * **[prov:Bundle](http://www.w3.org/ns/prov#Bundle)**
     *
     * Note that there are kinds of bundles (e.g. handwritten letters, audio recordings, etc.) that are not expressed in PROV-O, but can be still be described by PROV-O.
     *
     * @type        class
     * @parent      prov:Entity
     */
    readonly Bundle: import("../index.js").Iri<"http://www.w3.org/ns/prov#Bundle">;
    /**
     * **[prov:Collection](http://www.w3.org/ns/prov#Collection)**
     *
     * @type        class
     * @parent      prov:Entity
     */
    readonly Collection: import("../index.js").Iri<"http://www.w3.org/ns/prov#Collection">;
    /**
     * **[prov:Communication](http://www.w3.org/ns/prov#Communication)**
     *
     * An instance of prov:Communication provides additional descriptions about the binary prov:wasInformedBy relation from an informed prov:Activity to the prov:Activity that informed it. For example, :you_jumping_off_bridge prov:wasInformedBy :everyone_else_jumping_off_bridge; prov:qualifiedCommunication [ a prov:Communication; prov:activity :everyone_else_jumping_off_bridge; :foo :bar ].
     *
     * @type        class
     * @parent      prov:ActivityInfluence
     */
    readonly Communication: import("../index.js").Iri<"http://www.w3.org/ns/prov#Communication">;
    /**
     * **[prov:Contribute
  ](http://www.w3.org/ns/prov#Contribute)**
     *
     * @type        class
     * @parent      prov:Activity
     */
    readonly Contribute: import("../index.js").Iri<"http://www.w3.org/ns/prov#Contribute">;
    /**
     * **[prov:Contributor](http://www.w3.org/ns/prov#Contributor)**
     *
     * @type        class
     * @parent      prov:Role
     */
    readonly Contributor: import("../index.js").Iri<"http://www.w3.org/ns/prov#Contributor">;
    /**
     * **[prov:Copyright](http://www.w3.org/ns/prov#Copyright)**
     *
     * @type        class
     * @parent      prov:Activity
     */
    readonly Copyright: import("../index.js").Iri<"http://www.w3.org/ns/prov#Copyright">;
    /**
     * **[prov:Create](http://www.w3.org/ns/prov#Create)**
     *
     * @type        class
     * @parent      prov:Contribute
     */
    readonly Create: import("../index.js").Iri<"http://www.w3.org/ns/prov#Create">;
    /**
     * **[prov:Creator](http://www.w3.org/ns/prov#Creator)**
     *
     * @type        class
     * @parent      prov:Contributor
     */
    readonly Creator: import("../index.js").Iri<"http://www.w3.org/ns/prov#Creator">;
    /**
     * **[prov:Delegation](http://www.w3.org/ns/prov#Delegation)**
     *
     * An instance of prov:Delegation provides additional descriptions about the binary prov:actedOnBehalfOf relation from a performing prov:Agent to some prov:Agent for whom it was performed. For example, :mixing prov:wasAssociatedWith :toddler . :toddler prov:actedOnBehalfOf :mother; prov:qualifiedDelegation [ a prov:Delegation; prov:entity :mother; :foo :bar ].
     *
     * @type        class
     * @parent      prov:AgentInfluence
     */
    readonly Delegation: import("../index.js").Iri<"http://www.w3.org/ns/prov#Delegation">;
    /**
     * **[prov:Derivation](http://www.w3.org/ns/prov#Derivation)**
     *
     * An instance of prov:Derivation provides additional descriptions about the binary prov:wasDerivedFrom relation from some derived prov:Entity to another prov:Entity from which it was derived. For example, :chewed_bubble_gum prov:wasDerivedFrom :unwrapped_bubble_gum; prov:qualifiedDerivation [ a prov:Derivation; prov:entity :unwrapped_bubble_gum; :foo :bar ].
     *
     * @type        class
     * @parent      prov:EntityInfluence
     */
    readonly Derivation: import("../index.js").Iri<"http://www.w3.org/ns/prov#Derivation">;
    /**
     * **[prov:Dictionary](http://www.w3.org/ns/prov#Dictionary)**
     *
     * A given dictionary forms a given structure for its members. A different structure (obtained either by insertion or removal of members) constitutes a different dictionary.
     *
     * @type        class
     */
    readonly Dictionary: import("../index.js").Iri<"http://www.w3.org/ns/prov#Dictionary">;
    /**
     * **[prov:ProvenanceService](http://www.w3.org/ns/prov#DirectQueryService)**
     *
     * Type for a generic provenance query service. Mainly for use in RDF provenance query service descriptions, to facilitate discovery in linked data environments.
     *
     * @type        class
     * @parent      prov:SoftwareAgent
     */
    readonly DirectQueryService: import("../index.js").Iri<"http://www.w3.org/ns/prov#DirectQueryService">;
    /**
     * **[prov:EmptyCollection](http://www.w3.org/ns/prov#EmptyCollection)**
     *
     * @type        class
     * @parent      prov:Collection
     */
    readonly EmptyCollection: import("../index.js").Iri<"http://www.w3.org/ns/prov#EmptyCollection">;
    /**
     * **[prov:Empty Dictionary](http://www.w3.org/ns/prov#EmptyDictionary)**
     *
     * @type        class
     * @parent      prov:Dictionary
     */
    readonly EmptyDictionary: import("../index.js").Iri<"http://www.w3.org/ns/prov#EmptyDictionary">;
    /**
     * **[prov:End](http://www.w3.org/ns/prov#End)**
     *
     * An instance of prov:End provides additional descriptions about the binary prov:wasEndedBy relation from some ended prov:Activity to an prov:Entity that ended it. For example, :ball_game prov:wasEndedBy :buzzer; prov:qualifiedEnd [ a prov:End; prov:entity :buzzer; :foo :bar; prov:atTime '2012-03-09T08:05:08-05:00'^^xsd:dateTime ].
     *
     * @type        class
     * @parent      prov:EntityInfluence
     */
    readonly End: import("../index.js").Iri<"http://www.w3.org/ns/prov#End">;
    /**
     * **[prov:Entity](http://www.w3.org/ns/prov#Entity)**
     *
     * @type        class
     */
    readonly Entity: import("../index.js").Iri<"http://www.w3.org/ns/prov#Entity">;
    /**
     * **[prov:EntityInfluence](http://www.w3.org/ns/prov#EntityInfluence)**
     *
     * EntityInfluence provides additional descriptions of an Entity's binary influence upon any other kind of resource. Instances of EntityInfluence use the prov:entity property to cite the influencing Entity.
     *
     * @type        class
     * @parent      prov:Influence
     */
    readonly EntityInfluence: import("../index.js").Iri<"http://www.w3.org/ns/prov#EntityInfluence">;
    /**
     * **[prov:Generation](http://www.w3.org/ns/prov#Generation)**
     *
     * An instance of prov:Generation provides additional descriptions about the binary prov:wasGeneratedBy relation from a generated prov:Entity to the prov:Activity that generated it. For example, :cake prov:wasGeneratedBy :baking; prov:qualifiedGeneration [ a prov:Generation; prov:activity :baking; :foo :bar ].
     *
     * @type        class
     * @parent      prov:ActivityInfluence
     */
    readonly Generation: import("../index.js").Iri<"http://www.w3.org/ns/prov#Generation">;
    /**
     * **[prov:Influence](http://www.w3.org/ns/prov#Influence)**
     *
     * An instance of prov:Influence provides additional descriptions about the binary prov:wasInfluencedBy relation from some influenced Activity, Entity, or Agent to the influencing Activity, Entity, or Agent. For example, :stomach_ache prov:wasInfluencedBy :spoon; prov:qualifiedInfluence [ a prov:Influence; prov:entity :spoon; :foo :bar ] . Because prov:Influence is a broad relation, the more specific relations (Communication, Delegation, End, etc.) should be used when applicable.
     *
     * @type        class
     */
    readonly Influence: import("../index.js").Iri<"http://www.w3.org/ns/prov#Influence">;
    /**
     * **[prov:Insertion](http://www.w3.org/ns/prov#Insertion)**
     *
     * @type        class
     * @parent      https://triplydb.com/.well-known/genid/13a724b85d99efdfebe4cf3e0c386526
     */
    readonly Insertion: import("../index.js").Iri<"http://www.w3.org/ns/prov#Insertion">;
    /**
     * **[prov:InstantaneousEvent](http://www.w3.org/ns/prov#InstantaneousEvent)**
     *
     * An instantaneous event, or event for short, happens in the world and marks a change in the world, in its activities and in its entities. The term 'event' is commonly used in process algebra with a similar meaning. Events represent communications or interactions; they are assumed to be atomic and instantaneous.
     *
     * @type        class
     */
    readonly InstantaneousEvent: import("../index.js").Iri<"http://www.w3.org/ns/prov#InstantaneousEvent">;
    /**
     * **[prov:Invalidation](http://www.w3.org/ns/prov#Invalidation)**
     *
     * An instance of prov:Invalidation provides additional descriptions about the binary prov:wasInvalidatedBy relation from an invalidated prov:Entity to the prov:Activity that invalidated it. For example, :uncracked_egg prov:wasInvalidatedBy :baking; prov:qualifiedInvalidation [ a prov:Invalidation; prov:activity :baking; :foo :bar ].
     *
     * @type        class
     * @parent      prov:ActivityInfluence
     */
    readonly Invalidation: import("../index.js").Iri<"http://www.w3.org/ns/prov#Invalidation">;
    /**
     * **[prov:Key-Entity Pair](http://www.w3.org/ns/prov#KeyEntityPair)**
     *
     * @type        class
     * @parent      https://triplydb.com/.well-known/genid/0e0c1c951a5d887eb580aa39cc6fcd7f
     */
    readonly KeyEntityPair: import("../index.js").Iri<"http://www.w3.org/ns/prov#KeyEntityPair">;
    /**
     * **[prov:Location](http://www.w3.org/ns/prov#Location)**
     *
     * @type        class
     */
    readonly Location: import("../index.js").Iri<"http://www.w3.org/ns/prov#Location">;
    /**
     * **[prov:Modify](http://www.w3.org/ns/prov#Modify)**
     *
     * @type        class
     * @parent      prov:Activity
     */
    readonly Modify: import("../index.js").Iri<"http://www.w3.org/ns/prov#Modify">;
    /**
     * **[prov:Organization](http://www.w3.org/ns/prov#Organization)**
     *
     * @type        class
     * @parent      prov:Agent
     */
    readonly Organization: import("../index.js").Iri<"http://www.w3.org/ns/prov#Organization">;
    /**
     * **[prov:Person](http://www.w3.org/ns/prov#Person)**
     *
     * @type        class
     * @parent      prov:Agent
     */
    readonly Person: import("../index.js").Iri<"http://www.w3.org/ns/prov#Person">;
    /**
     * **[prov:Plan](http://www.w3.org/ns/prov#Plan)**
     *
     * There exist no prescriptive requirement on the nature of plans, their representation, the actions or steps they consist of, or their intended goals. Since plans may evolve over time, it may become necessary to track their provenance, so plans themselves are entities. Representing the plan explicitly in the provenance can be useful for various tasks: for example, to validate the execution as represented in the provenance record, to manage expectation failures, or to provide explanations.
     *
     * @type        class
     * @parent      prov:Entity
     */
    readonly Plan: import("../index.js").Iri<"http://www.w3.org/ns/prov#Plan">;
    /**
     * **[prov:PrimarySource](http://www.w3.org/ns/prov#PrimarySource)**
     *
     * An instance of prov:PrimarySource provides additional descriptions about the binary prov:hadPrimarySource relation from some secondary prov:Entity to an earlier, primary prov:Entity. For example, :blog prov:hadPrimarySource :newsArticle; prov:qualifiedPrimarySource [ a prov:PrimarySource; prov:entity :newsArticle; :foo :bar ] .
     *
     * @type        class
     * @parent      prov:Derivation
     */
    readonly PrimarySource: import("../index.js").Iri<"http://www.w3.org/ns/prov#PrimarySource">;
    /**
     * **[prov:Publish](http://www.w3.org/ns/prov#Publish)**
     *
     * @type        class
     * @parent      prov:Activity
     */
    readonly Publish: import("../index.js").Iri<"http://www.w3.org/ns/prov#Publish">;
    /**
     * **[prov:Publisher](http://www.w3.org/ns/prov#Publisher)**
     *
     * @type        class
     * @parent      prov:Role
     */
    readonly Publisher: import("../index.js").Iri<"http://www.w3.org/ns/prov#Publisher">;
    /**
     * **[prov:Quotation](http://www.w3.org/ns/prov#Quotation)**
     *
     * An instance of prov:Quotation provides additional descriptions about the binary prov:wasQuotedFrom relation from some taken prov:Entity from an earlier, larger prov:Entity. For example, :here_is_looking_at_you_kid prov:wasQuotedFrom :casablanca_script; prov:qualifiedQuotation [ a prov:Quotation; prov:entity :casablanca_script; :foo :bar ].
     *
     * @type        class
     * @parent      prov:Derivation
     */
    readonly Quotation: import("../index.js").Iri<"http://www.w3.org/ns/prov#Quotation">;
    /**
     * **[prov:Removal](http://www.w3.org/ns/prov#Removal)**
     *
     * @type        class
     * @parent      https://triplydb.com/.well-known/genid/15856ef310c4b45d8bca8950594765b2
     */
    readonly Removal: import("../index.js").Iri<"http://www.w3.org/ns/prov#Removal">;
    /**
     * **[prov:Replace](http://www.w3.org/ns/prov#Replace)**
     *
     * @type        class
     * @parent      prov:Activity
     */
    readonly Replace: import("../index.js").Iri<"http://www.w3.org/ns/prov#Replace">;
    /**
     * **[prov:Revision](http://www.w3.org/ns/prov#Revision)**
     *
     * An instance of prov:Revision provides additional descriptions about the binary prov:wasRevisionOf relation from some newer prov:Entity to an earlier prov:Entity. For example, :draft_2 prov:wasRevisionOf :draft_1; prov:qualifiedRevision [ a prov:Revision; prov:entity :draft_1; :foo :bar ].
     *
     * @type        class
     * @parent      prov:Derivation
     */
    readonly Revision: import("../index.js").Iri<"http://www.w3.org/ns/prov#Revision">;
    /**
     * **[prov:RightsAssignment](http://www.w3.org/ns/prov#RightsAssignment)**
     *
     * @type        class
     * @parent      prov:Activity
     */
    readonly RightsAssignment: import("../index.js").Iri<"http://www.w3.org/ns/prov#RightsAssignment">;
    /**
     * **[prov:RightsHolder](http://www.w3.org/ns/prov#RightsHolder)**
     *
     * @type        class
     * @parent      prov:Role
     */
    readonly RightsHolder: import("../index.js").Iri<"http://www.w3.org/ns/prov#RightsHolder">;
    /**
     * **[prov:Role](http://www.w3.org/ns/prov#Role)**
     *
     * @type        class
     */
    readonly Role: import("../index.js").Iri<"http://www.w3.org/ns/prov#Role">;
    /**
     * **[prov:ServiceDescription](http://www.w3.org/ns/prov#ServiceDescription)**
     *
     * Type for a generic provenance query service. Mainly for use in RDF provenance query service descriptions, to facilitate discovery in linked data environments.
     *
     * @type        class
     * @parent      prov:SoftwareAgent
     */
    readonly ServiceDescription: import("../index.js").Iri<"http://www.w3.org/ns/prov#ServiceDescription">;
    /**
     * **[prov:SoftwareAgent](http://www.w3.org/ns/prov#SoftwareAgent)**
     *
     * @type        class
     * @parent      http://www.w3.org/2002/07/owl#Thing
     */
    readonly SoftwareAgent: import("../index.js").Iri<"http://www.w3.org/ns/prov#SoftwareAgent">;
    /**
     * **[prov:Start](http://www.w3.org/ns/prov#Start)**
     *
     * An instance of prov:Start provides additional descriptions about the binary prov:wasStartedBy relation from some started prov:Activity to an prov:Entity that started it. For example, :foot_race prov:wasStartedBy :bang; prov:qualifiedStart [ a prov:Start; prov:entity :bang; :foo :bar; prov:atTime '2012-03-09T08:05:08-05:00'^^xsd:dateTime ] .
     *
     * @type        class
     * @parent      prov:EntityInfluence
     */
    readonly Start: import("../index.js").Iri<"http://www.w3.org/ns/prov#Start">;
    /**
     * **[prov:Submit](http://www.w3.org/ns/prov#Submit)**
     *
     * @type        class
     * @parent      prov:Activity
     */
    readonly Submit: import("../index.js").Iri<"http://www.w3.org/ns/prov#Submit">;
    /**
     * **[prov:Usage](http://www.w3.org/ns/prov#Usage)**
     *
     * An instance of prov:Usage provides additional descriptions about the binary prov:used relation from some prov:Activity to an prov:Entity that it used. For example, :keynote prov:used :podium; prov:qualifiedUsage [ a prov:Usage; prov:entity :podium; :foo :bar ].
     *
     * @type        class
     * @parent      prov:EntityInfluence
     */
    readonly Usage: import("../index.js").Iri<"http://www.w3.org/ns/prov#Usage">;
    /**
     * **[prov:actedOnBehalfOf](http://www.w3.org/ns/prov#actedOnBehalfOf)**
     *
     * An object property to express the accountability of an agent towards another agent. The subordinate agent acted on behalf of the responsible agent in an actual activity.
     *
     * @type        property
     * @parent      prov:wasInfluencedBy
     * @domain      prov:Agent
     * @range       prov:Agent
     */
    readonly actedOnBehalfOf: import("../index.js").Iri<"http://www.w3.org/ns/prov#actedOnBehalfOf">;
    /**
     * **[prov:activity](http://www.w3.org/ns/prov#activity)**
     *
     * @type        property
     * @parent      prov:influencer
     * @domain      prov:ActivityInfluence
     * @range       prov:Activity
     */
    readonly activity: import("../index.js").Iri<"http://www.w3.org/ns/prov#activity">;
    /**
     * **[prov:agent](http://www.w3.org/ns/prov#agent)**
     *
     * @type        property
     * @parent      prov:influencer
     * @domain      prov:AgentInfluence
     * @range       prov:Agent
     */
    readonly agent: import("../index.js").Iri<"http://www.w3.org/ns/prov#agent">;
    /**
     * **[prov:alternateOf](http://www.w3.org/ns/prov#alternateOf)**
     *
     * @type        property
     * @domain      prov:Entity
     * @range       prov:Entity
     */
    readonly alternateOf: import("../index.js").Iri<"http://www.w3.org/ns/prov#alternateOf">;
    /**
     * **[prov:aq](http://www.w3.org/ns/prov#aq)**
     *
     * @type        property
     * @parent      http://www.w3.org/2000/01/rdf-schema#seeAlso
     */
    readonly aq: import("../index.js").Iri<"http://www.w3.org/ns/prov#aq">;
    /**
     * **[prov:asInBundle](http://www.w3.org/ns/prov#asInBundle)**
     *
     * prov:asInBundle is used to specify which bundle the general entity of a prov:mentionOf property is described.When :x prov:mentionOf :y and :y is described in Bundle :b, the triple :x prov:asInBundle :b is also asserted to cite the Bundle in which :y was described.
     *
     * @type        property
     * @domain      prov:Entity
     * @range       prov:Bundle
     */
    readonly asInBundle: import("../index.js").Iri<"http://www.w3.org/ns/prov#asInBundle">;
    /**
     * **[prov:atLocation](http://www.w3.org/ns/prov#atLocation)**
     *
     * The Location of any resource.
     *
     * @type        property
     * @domain      prov:Activity or prov:Agent or prov:Entity or prov:InstantaneousEvent
     * @range       prov:Location
     */
    readonly atLocation: import("../index.js").Iri<"http://www.w3.org/ns/prov#atLocation">;
    /**
     * **[prov:atTime](http://www.w3.org/ns/prov#atTime)**
     *
     * The time at which an InstantaneousEvent occurred, in the form of xsd:dateTime.
     *
     * @type        property
     * @domain      prov:InstantaneousEvent
     * @range       http://www.w3.org/2001/XMLSchema#dateTime
     */
    readonly atTime: import("../index.js").Iri<"http://www.w3.org/ns/prov#atTime">;
    /**
     * **[prov:category](http://www.w3.org/ns/prov#category)**
     *
     * Classify prov-o terms into three categories, including 'starting-point', 'qualifed', and 'extended'. This classification is used by the prov-o html document to gently introduce prov-o terms to its users.
     *
     * @type        property
     */
    readonly category: import("../index.js").Iri<"http://www.w3.org/ns/prov#category">;
    /**
     * **[prov:component](http://www.w3.org/ns/prov#component)**
     *
     * Classify prov-o terms into six components according to prov-dm, including 'agents-responsibility', 'alternate', 'annotations', 'collections', 'derivations', and 'entities-activities'. This classification is used so that readers of prov-o specification can find its correspondence with the prov-dm specification.
     *
     * @type        property
     */
    readonly component: import("../index.js").Iri<"http://www.w3.org/ns/prov#component">;
    /**
     * **[prov:constraints](http://www.w3.org/ns/prov#constraints)**
     *
     * A reference to the principal section of the PROV-CONSTRAINTS document that describes this concept.
     *
     * @type        property
     * @parent      http://www.w3.org/2000/01/rdf-schema#seeAlso
     */
    readonly constraints: import("../index.js").Iri<"http://www.w3.org/ns/prov#constraints">;
    /**
     * **[prov:definition](http://www.w3.org/ns/prov#definition)**
     *
     * A definition quoted from PROV-DM or PROV-CONSTRAINTS that describes the concept expressed with this OWL term.
     *
     * @type        property
     */
    readonly definition: import("../index.js").Iri<"http://www.w3.org/ns/prov#definition">;
    /**
     * **[prov:derivedByInsertionFrom](http://www.w3.org/ns/prov#derivedByInsertionFrom)**
     *
     * @type        property
     * @parent      prov:wasDerivedFrom
     * @domain      prov:Dictionary
     * @range       prov:Dictionary
     */
    readonly derivedByInsertionFrom: import("../index.js").Iri<"http://www.w3.org/ns/prov#derivedByInsertionFrom">;
    /**
     * **[prov:derivedByRemovalFrom](http://www.w3.org/ns/prov#derivedByRemovalFrom)**
     *
     * @type        property
     * @parent      prov:wasDerivedFrom
     * @domain      prov:Dictionary
     * @range       prov:Dictionary
     */
    readonly derivedByRemovalFrom: import("../index.js").Iri<"http://www.w3.org/ns/prov#derivedByRemovalFrom">;
    /**
     * **[prov:describesService](http://www.w3.org/ns/prov#describesService)**
     *
     * relates a generic provenance query service resource (type prov:ServiceDescription) to a specific query service description (e.g. a prov:DirectQueryService or a sd:Service).
     *
     * @type        property
     */
    readonly describesService: import("../index.js").Iri<"http://www.w3.org/ns/prov#describesService">;
    /**
     * **[prov:dictionary](http://www.w3.org/ns/prov#dictionary)**
     *
     * @type        property
     * @parent      prov:entity
     * @domain      prov:Insertion or prov:Removal
     * @range       prov:Dictionary
     */
    readonly dictionary: import("../index.js").Iri<"http://www.w3.org/ns/prov#dictionary">;
    /**
     * **[prov:dm](http://www.w3.org/ns/prov#dm)**
     *
     * A reference to the principal section of the PROV-DM document that describes this concept.
     *
     * @type        property
     * @parent      http://www.w3.org/2000/01/rdf-schema#seeAlso
     */
    readonly dm: import("../index.js").Iri<"http://www.w3.org/ns/prov#dm">;
    /**
     * **[prov:editorialNote](http://www.w3.org/ns/prov#editorialNote)**
     *
     * A note by the OWL development team about how this term expresses the PROV-DM concept, or how it should be used in context of semantic web or linked data.
     *
     * @type        property
     */
    readonly editorialNote: import("../index.js").Iri<"http://www.w3.org/ns/prov#editorialNote">;
    /**
     * **[prov:editorsDefinition](http://www.w3.org/ns/prov#editorsDefinition)**
     *
     * When the prov-o term does not have a definition drawn from prov-dm, and the prov-o editor provides one.
     *
     * @type        property
     * @parent      prov:definition
     */
    readonly editorsDefinition: import("../index.js").Iri<"http://www.w3.org/ns/prov#editorsDefinition">;
    /**
     * **[prov:endedAtTime](http://www.w3.org/ns/prov#endedAtTime)**
     *
     * The time at which an activity ended. See also prov:startedAtTime.
     *
     * @type        property
     * @domain      prov:Activity
     * @range       http://www.w3.org/2001/XMLSchema#dateTime
     */
    readonly endedAtTime: import("../index.js").Iri<"http://www.w3.org/ns/prov#endedAtTime">;
    /**
     * **[prov:entity](http://www.w3.org/ns/prov#entity)**
     *
     * @type        property
     * @parent      prov:influencer
     * @domain      prov:EntityInfluence
     * @range       prov:Entity
     */
    readonly entity: import("../index.js").Iri<"http://www.w3.org/ns/prov#entity">;
    /**
     * **[prov:generated](http://www.w3.org/ns/prov#generated)**
     *
     * @type        property
     * @parent      prov:influenced
     * @domain      prov:Activity
     * @range       prov:Entity
     */
    readonly generated: import("../index.js").Iri<"http://www.w3.org/ns/prov#generated">;
    /**
     * **[prov:generatedAtTime](http://www.w3.org/ns/prov#generatedAtTime)**
     *
     * The time at which an entity was completely created and is available for use.
     *
     * @type        property
     * @domain      prov:Entity
     * @range       http://www.w3.org/2001/XMLSchema#dateTime
     */
    readonly generatedAtTime: import("../index.js").Iri<"http://www.w3.org/ns/prov#generatedAtTime">;
    /**
     * **[prov:hadActivity](http://www.w3.org/ns/prov#hadActivity)**
     *
     * The _optional_ Activity of an Influence, which used, generated, invalidated, or was the responsibility of some Entity. This property is _not_ used by ActivityInfluence (use prov:activity instead).
     *
     * @type        property
     * @domain      prov:Influence or prov:Delegation or prov:Derivation or prov:End or prov:Start
     * @range       prov:Activity
     */
    readonly hadActivity: import("../index.js").Iri<"http://www.w3.org/ns/prov#hadActivity">;
    /**
     * **[prov:hadDictionaryMember](http://www.w3.org/ns/prov#hadDictionaryMember)**
     *
     * @type        property
     * @domain      prov:Dictionary
     * @range       prov:KeyEntityPair
     */
    readonly hadDictionaryMember: import("../index.js").Iri<"http://www.w3.org/ns/prov#hadDictionaryMember">;
    /**
     * **[prov:hadGeneration](http://www.w3.org/ns/prov#hadGeneration)**
     *
     * The _optional_ Generation involved in an Entity's Derivation.
     *
     * @type        property
     * @domain      prov:Derivation
     * @range       prov:Generation
     */
    readonly hadGeneration: import("../index.js").Iri<"http://www.w3.org/ns/prov#hadGeneration">;
    /**
     * **[prov:hadMember](http://www.w3.org/ns/prov#hadMember)**
     *
     * @type        property
     * @parent      prov:wasInfluencedBy
     * @domain      prov:Collection
     * @range       prov:Entity
     */
    readonly hadMember: import("../index.js").Iri<"http://www.w3.org/ns/prov#hadMember">;
    /**
     * **[prov:hadPlan](http://www.w3.org/ns/prov#hadPlan)**
     *
     * The _optional_ Plan adopted by an Agent in Association with some Activity. Plan specifications are out of the scope of this specification.
     *
     * @type        property
     * @domain      prov:Association
     * @range       prov:Plan
     */
    readonly hadPlan: import("../index.js").Iri<"http://www.w3.org/ns/prov#hadPlan">;
    /**
     * **[prov:hadPrimarySource](http://www.w3.org/ns/prov#hadPrimarySource)**
     *
     * @type        property
     * @parent      prov:wasDerivedFrom
     * @domain      prov:Entity
     * @range       prov:Entity
     */
    readonly hadPrimarySource: import("../index.js").Iri<"http://www.w3.org/ns/prov#hadPrimarySource">;
    /**
     * **[prov:hadRole](http://www.w3.org/ns/prov#hadRole)**
     *
     * The _optional_ Role that an Entity assumed in the context of an Activity. For example, :baking prov:used :spoon; prov:qualified [ a prov:Usage; prov:entity :spoon; prov:hadRole roles:mixing_implement ].
     *
     * @type        property
     * @domain      prov:Influence or prov:Association or prov:InstantaneousEvent
     * @range       prov:Role
     */
    readonly hadRole: import("../index.js").Iri<"http://www.w3.org/ns/prov#hadRole">;
    /**
     * **[prov:hadUsage](http://www.w3.org/ns/prov#hadUsage)**
     *
     * The _optional_ Usage involved in an Entity's Derivation.
     *
     * @type        property
     * @domain      prov:Derivation
     * @range       prov:Usage
     */
    readonly hadUsage: import("../index.js").Iri<"http://www.w3.org/ns/prov#hadUsage">;
    /**
     * **[prov:has_anchor](http://www.w3.org/ns/prov#has_anchor)**
     *
     * Indicates anchor URI for a potentially dynamic resource instance.
     *
     * @type        property
     */
    readonly has_anchor: import("../index.js").Iri<"http://www.w3.org/ns/prov#has_anchor">;
    /**
     * **[prov:has_provenance](http://www.w3.org/ns/prov#has_provenance)**
     *
     * Indicates a provenance-URI for a resource; the resource identified by this property presents a provenance record about its subject or anchor resource.
     *
     * @type        property
     */
    readonly has_provenance: import("../index.js").Iri<"http://www.w3.org/ns/prov#has_provenance">;
    /**
     * **[prov:hasProvenanceService](http://www.w3.org/ns/prov#has_query_service)**
     *
     * Indicates a provenance query service that can access provenance related to its subject or anchor resource.
     *
     * @type        property
     */
    readonly has_query_service: import("../index.js").Iri<"http://www.w3.org/ns/prov#has_query_service">;
    /**
     * **[prov:influenced](http://www.w3.org/ns/prov#influenced)**
     *
     * @type        property
     */
    readonly influenced: import("../index.js").Iri<"http://www.w3.org/ns/prov#influenced">;
    /**
     * **[prov:influencer](http://www.w3.org/ns/prov#influencer)**
     *
     * Subproperties of prov:influencer are used to cite the object of an unqualified PROV-O triple whose predicate is a subproperty of prov:wasInfluencedBy (e.g. prov:used, prov:wasGeneratedBy). prov:influencer is used much like rdf:object is used.
     *
     * @type        property
     * @domain      prov:Influence
     * @range       http://www.w3.org/2002/07/owl#Thing
     */
    readonly influencer: import("../index.js").Iri<"http://www.w3.org/ns/prov#influencer">;
    /**
     * **[prov:insertedKeyEntityPair](http://www.w3.org/ns/prov#insertedKeyEntityPair)**
     *
     * @type        property
     * @domain      prov:Insertion
     * @range       prov:KeyEntityPair
     */
    readonly insertedKeyEntityPair: import("../index.js").Iri<"http://www.w3.org/ns/prov#insertedKeyEntityPair">;
    /**
     * **[prov:invalidated](http://www.w3.org/ns/prov#invalidated)**
     *
     * @type        property
     * @parent      prov:influenced
     * @domain      prov:Activity
     * @range       prov:Entity
     */
    readonly invalidated: import("../index.js").Iri<"http://www.w3.org/ns/prov#invalidated">;
    /**
     * **[prov:invalidatedAtTime](http://www.w3.org/ns/prov#invalidatedAtTime)**
     *
     * The time at which an entity was invalidated (i.e., no longer usable).
     *
     * @type        property
     * @domain      prov:Entity
     * @range       http://www.w3.org/2001/XMLSchema#dateTime
     */
    readonly invalidatedAtTime: import("../index.js").Iri<"http://www.w3.org/ns/prov#invalidatedAtTime">;
    /**
     * **[prov:inverse](http://www.w3.org/ns/prov#inverse)**
     *
     * PROV-O does not define all property inverses. The directionalities defined in PROV-O should be given preference over those not defined. However, if users wish to name the inverse of a PROV-O property, the local name given by prov:inverse should be used.
     *
     * @type        property
     */
    readonly inverse: import("../index.js").Iri<"http://www.w3.org/ns/prov#inverse">;
    /**
     * **[prov:mentionOf](http://www.w3.org/ns/prov#mentionOf)**
     *
     * prov:mentionOf is used to specialize an entity as described in another bundle. It is to be used in conjuction with prov:asInBundle.prov:asInBundle is used to cite the Bundle in which the generalization was mentioned.
     *
     * @type        property
     * @parent      prov:specializationOf
     * @domain      prov:Entity
     * @range       prov:Entity
     */
    readonly mentionOf: import("../index.js").Iri<"http://www.w3.org/ns/prov#mentionOf">;
    /**
     * **[prov:n](http://www.w3.org/ns/prov#'n')**
     *
     * A reference to the principal section of the PROV-DM document that describes this concept.
     *
     * @type        property
     * @parent      http://www.w3.org/2000/01/rdf-schema#seeAlso
     */
    readonly 'n': import("../index.js").Iri<"http://www.w3.org/ns/prov#n">;
    /**
     * **[prov:order](http://www.w3.org/ns/prov#order)**
     *
     * The position that this OWL term should be listed within documentation. The scope of the documentation (e.g., among all terms, among terms within a prov:category, among properties applying to a particular class, etc.) is unspecified.
     *
     * @type        property
     */
    readonly order: import("../index.js").Iri<"http://www.w3.org/ns/prov#order">;
    /**
     * **[prov:pairKey](http://www.w3.org/ns/prov#pairEntity)**
     *
     * @type        property
     * @domain      prov:KeyEntityPair
     * @range       prov:Entity
     */
    readonly pairEntity: import("../index.js").Iri<"http://www.w3.org/ns/prov#pairEntity">;
    /**
     * **[prov:pairKey](http://www.w3.org/ns/prov#pairKey)**
     *
     * @type        property
     * @domain      prov:KeyEntityPair
     * @range       http://www.w3.org/2000/01/rdf-schema#Literal
     */
    readonly pairKey: import("../index.js").Iri<"http://www.w3.org/ns/prov#pairKey">;
    /**
     * **[prov:provenance pingback](http://www.w3.org/ns/prov#pingback)**
     *
     * Relates a resource to a provenance pingback service that may receive additional provenance links about the resource.
     *
     * @type        property
     */
    readonly pingback: import("../index.js").Iri<"http://www.w3.org/ns/prov#pingback">;
    /**
     * **[prov:provenanceUriTemplate](http://www.w3.org/ns/prov#provenanceUriTemplate)**
     *
     * Relates a provenance service to a URI template string for constructing provenance-URIs.
     *
     * @type        property
     */
    readonly provenanceUriTemplate: import("../index.js").Iri<"http://www.w3.org/ns/prov#provenanceUriTemplate">;
    /**
     * **[prov:qualifiedAssociation](http://www.w3.org/ns/prov#qualifiedAssociation)**
     *
     * If this Activity prov:wasAssociatedWith Agent :ag, then it can qualify the Association using prov:qualifiedAssociation [ a prov:Association;  prov:agent :ag; :foo :bar ].
     *
     * @type        property
     * @parent      prov:qualifiedInfluence
     * @domain      prov:Activity
     * @range       prov:Association
     */
    readonly qualifiedAssociation: import("../index.js").Iri<"http://www.w3.org/ns/prov#qualifiedAssociation">;
    /**
     * **[prov:qualifiedAttribution](http://www.w3.org/ns/prov#qualifiedAttribution)**
     *
     * If this Entity prov:wasAttributedTo Agent :ag, then it can qualify how it was influenced using prov:qualifiedAttribution [ a prov:Attribution;  prov:agent :ag; :foo :bar ].
     *
     * @type        property
     * @parent      prov:qualifiedInfluence
     * @domain      prov:Entity
     * @range       prov:Attribution
     */
    readonly qualifiedAttribution: import("../index.js").Iri<"http://www.w3.org/ns/prov#qualifiedAttribution">;
    /**
     * **[prov:qualifiedCommunication](http://www.w3.org/ns/prov#qualifiedCommunication)**
     *
     * If this Activity prov:wasInformedBy Activity :a, then it can qualify how it was influenced using prov:qualifiedCommunication [ a prov:Communication;  prov:activity :a; :foo :bar ].
     *
     * @type        property
     * @parent      prov:qualifiedInfluence
     * @domain      prov:Activity
     * @range       prov:Communication
     */
    readonly qualifiedCommunication: import("../index.js").Iri<"http://www.w3.org/ns/prov#qualifiedCommunication">;
    /**
     * **[prov:qualifiedDelegation](http://www.w3.org/ns/prov#qualifiedDelegation)**
     *
     * If this Agent prov:actedOnBehalfOf Agent :ag, then it can qualify how with prov:qualifiedResponsibility [ a prov:Responsibility;  prov:agent :ag; :foo :bar ].
     *
     * @type        property
     * @parent      prov:qualifiedInfluence
     * @domain      prov:Agent
     * @range       prov:Delegation
     */
    readonly qualifiedDelegation: import("../index.js").Iri<"http://www.w3.org/ns/prov#qualifiedDelegation">;
    /**
     * **[prov:qualifiedDerivation](http://www.w3.org/ns/prov#qualifiedDerivation)**
     *
     * If this Entity prov:wasDerivedFrom Entity :e, then it can qualify how it was derived using prov:qualifiedDerivation [ a prov:Derivation;  prov:entity :e; :foo :bar ].
     *
     * @type        property
     * @parent      prov:qualifiedInfluence
     * @domain      prov:Entity
     * @range       prov:Derivation
     */
    readonly qualifiedDerivation: import("../index.js").Iri<"http://www.w3.org/ns/prov#qualifiedDerivation">;
    /**
     * **[prov:qualifiedEnd](http://www.w3.org/ns/prov#qualifiedEnd)**
     *
     * If this Activity prov:wasEndedBy Entity :e1, then it can qualify how it was ended using prov:qualifiedEnd [ a prov:End;  prov:entity :e1; :foo :bar ].
     *
     * @type        property
     * @parent      prov:qualifiedInfluence
     * @domain      prov:Activity
     * @range       prov:End
     */
    readonly qualifiedEnd: import("../index.js").Iri<"http://www.w3.org/ns/prov#qualifiedEnd">;
    /**
     * **[prov:qualifiedForm](http://www.w3.org/ns/prov#qualifiedForm)**
     *
     * This annotation property links a subproperty of prov:wasInfluencedBy with the subclass of prov:Influence and the qualifying property that are used to qualify it. Example annotation:    prov:wasGeneratedBy prov:qualifiedForm prov:qualifiedGeneration, prov:Generation .Then this unqualified assertion:    :entity1 prov:wasGeneratedBy :activity1 .can be qualified by adding:   :entity1 prov:qualifiedGeneration :entity1Gen .   :entity1Gen        a prov:Generation, prov:Influence;       prov:activity :activity1;       :customValue 1337 .Note how the value of the unqualified influence (prov:wasGeneratedBy :activity1) is mirrored as the value of the prov:activity (or prov:entity, or prov:agent) property on the influence class.
     *
     * @type        property
     * @parent      http://www.w3.org/2000/01/rdf-schema#seeAlso
     */
    readonly qualifiedForm: import("../index.js").Iri<"http://www.w3.org/ns/prov#qualifiedForm">;
    /**
     * **[prov:qualifiedGeneration](http://www.w3.org/ns/prov#qualifiedGeneration)**
     *
     * If this Activity prov:generated Entity :e, then it can qualify how it performed the Generation using prov:qualifiedGeneration [ a prov:Generation;  prov:entity :e; :foo :bar ].
     *
     * @type        property
     * @parent      prov:qualifiedInfluence
     * @domain      prov:Entity
     * @range       prov:Generation
     */
    readonly qualifiedGeneration: import("../index.js").Iri<"http://www.w3.org/ns/prov#qualifiedGeneration">;
    /**
     * **[prov:qualifiedInfluence](http://www.w3.org/ns/prov#qualifiedInfluence)**
     *
     * Because prov:qualifiedInfluence is a broad relation, the more specific relations (qualifiedCommunication, qualifiedDelegation, qualifiedEnd, etc.) should be used when applicable.
     *
     * @type        property
     * @domain      prov:Activity or prov:Agent or prov:Entity
     * @range       prov:Influence
     */
    readonly qualifiedInfluence: import("../index.js").Iri<"http://www.w3.org/ns/prov#qualifiedInfluence">;
    /**
     * **[prov:qualifiedInsertion](http://www.w3.org/ns/prov#qualifiedInsertion)**
     *
     * @type        property
     * @parent      prov:qualifiedDerivation
     * @domain      prov:Dictionary
     * @range       prov:Insertion
     */
    readonly qualifiedInsertion: import("../index.js").Iri<"http://www.w3.org/ns/prov#qualifiedInsertion">;
    /**
     * **[prov:qualifiedInvalidation](http://www.w3.org/ns/prov#qualifiedInvalidation)**
     *
     * If this Entity prov:wasInvalidatedBy Activity :a, then it can qualify how it was invalidated using prov:qualifiedInvalidation [ a prov:Invalidation;  prov:activity :a; :foo :bar ].
     *
     * @type        property
     * @parent      prov:qualifiedInfluence
     * @domain      prov:Entity
     * @range       prov:Invalidation
     */
    readonly qualifiedInvalidation: import("../index.js").Iri<"http://www.w3.org/ns/prov#qualifiedInvalidation">;
    /**
     * **[prov:qualifiedPrimarySource](http://www.w3.org/ns/prov#qualifiedPrimarySource)**
     *
     * If this Entity prov:hadPrimarySource Entity :e, then it can qualify how using prov:qualifiedPrimarySource [ a prov:PrimarySource; prov:entity :e; :foo :bar ].
     *
     * @type        property
     * @parent      prov:qualifiedInfluence
     * @domain      prov:Entity
     * @range       prov:PrimarySource
     */
    readonly qualifiedPrimarySource: import("../index.js").Iri<"http://www.w3.org/ns/prov#qualifiedPrimarySource">;
    /**
     * **[prov:qualifiedQuotation](http://www.w3.org/ns/prov#qualifiedQuotation)**
     *
     * If this Entity prov:wasQuotedFrom Entity :e, then it can qualify how using prov:qualifiedQuotation [ a prov:Quotation;  prov:entity :e; :foo :bar ].
     *
     * @type        property
     * @parent      prov:qualifiedInfluence
     * @domain      prov:Entity
     * @range       prov:Quotation
     */
    readonly qualifiedQuotation: import("../index.js").Iri<"http://www.w3.org/ns/prov#qualifiedQuotation">;
    /**
     * **[prov:qualifiedRemoval](http://www.w3.org/ns/prov#qualifiedRemoval)**
     *
     * @type        property
     * @parent      prov:qualifiedDerivation
     * @domain      prov:Dictionary
     * @range       prov:Removal
     */
    readonly qualifiedRemoval: import("../index.js").Iri<"http://www.w3.org/ns/prov#qualifiedRemoval">;
    /**
     * **[prov:qualifiedRevision](http://www.w3.org/ns/prov#qualifiedRevision)**
     *
     * If this Entity prov:wasRevisionOf Entity :e, then it can qualify how it was revised using prov:qualifiedRevision [ a prov:Revision;  prov:entity :e; :foo :bar ].
     *
     * @type        property
     * @parent      prov:qualifiedInfluence
     * @domain      prov:Entity
     * @range       prov:Revision
     */
    readonly qualifiedRevision: import("../index.js").Iri<"http://www.w3.org/ns/prov#qualifiedRevision">;
    /**
     * **[prov:qualifiedStart](http://www.w3.org/ns/prov#qualifiedStart)**
     *
     * If this Activity prov:wasStartedBy Entity :e1, then it can qualify how it was started using prov:qualifiedStart [ a prov:Start;  prov:entity :e1; :foo :bar ].
     *
     * @type        property
     * @parent      prov:qualifiedInfluence
     * @domain      prov:Activity
     * @range       prov:Start
     */
    readonly qualifiedStart: import("../index.js").Iri<"http://www.w3.org/ns/prov#qualifiedStart">;
    /**
     * **[prov:qualifiedUsage](http://www.w3.org/ns/prov#qualifiedUsage)**
     *
     * If this Activity prov:used Entity :e, then it can qualify how it used it using prov:qualifiedUsage [ a prov:Usage; prov:entity :e; :foo :bar ].
     *
     * @type        property
     * @parent      prov:qualifiedInfluence
     * @domain      prov:Activity
     * @range       prov:Usage
     */
    readonly qualifiedUsage: import("../index.js").Iri<"http://www.w3.org/ns/prov#qualifiedUsage">;
    /**
     * **[prov:removedKey](http://www.w3.org/ns/prov#removedKey)**
     *
     * @type        property
     * @domain      prov:Removal
     * @range       http://www.w3.org/2000/01/rdf-schema#Literal
     */
    readonly removedKey: import("../index.js").Iri<"http://www.w3.org/ns/prov#removedKey">;
    /**
     * **[prov:sharesDefinitionWith](http://www.w3.org/ns/prov#sharesDefinitionWith)**
     *
     * @type        property
     * @parent      http://www.w3.org/2000/01/rdf-schema#seeAlso
     */
    readonly sharesDefinitionWith: import("../index.js").Iri<"http://www.w3.org/ns/prov#sharesDefinitionWith">;
    /**
     * **[prov:specializationOf](http://www.w3.org/ns/prov#specializationOf)**
     *
     * @type        property
     * @parent      http://www.w3.org/2002/07/owl#topObjectProperty
     * @domain      prov:Entity
     * @range       prov:Entity
     */
    readonly specializationOf: import("../index.js").Iri<"http://www.w3.org/ns/prov#specializationOf">;
    /**
     * **[prov:startedAtTime](http://www.w3.org/ns/prov#startedAtTime)**
     *
     * The time at which an activity started. See also prov:endedAtTime.
     *
     * @type        property
     * @domain      prov:Activity
     * @range       http://www.w3.org/2001/XMLSchema#dateTime
     */
    readonly startedAtTime: import("../index.js").Iri<"http://www.w3.org/ns/prov#startedAtTime">;
    /**
     * **[prov:todo](http://www.w3.org/ns/prov#todo)**
     *
     * @type        property
     */
    readonly todo: import("../index.js").Iri<"http://www.w3.org/ns/prov#todo">;
    /**
     * **[prov:unqualifiedForm](http://www.w3.org/ns/prov#unqualifiedForm)**
     *
     * Classes and properties used to qualify relationships are annotated with prov:unqualifiedForm to indicate the property used to assert an unqualified provenance relation.
     *
     * @type        property
     * @parent      http://www.w3.org/2000/01/rdf-schema#seeAlso
     */
    readonly unqualifiedForm: import("../index.js").Iri<"http://www.w3.org/ns/prov#unqualifiedForm">;
    /**
     * **[prov:used](http://www.w3.org/ns/prov#used)**
     *
     * A prov:Entity that was used by this prov:Activity. For example, :baking prov:used :spoon, :egg, :oven .
     *
     * @type        property
     * @parent      prov:wasInfluencedBy
     * @domain      prov:Activity
     * @range       prov:Entity
     */
    readonly used: import("../index.js").Iri<"http://www.w3.org/ns/prov#used">;
    /**
     * **[prov:value](http://www.w3.org/ns/prov#value)**
     *
     * @type        property
     * @domain      prov:Entity
     */
    readonly value: import("../index.js").Iri<"http://www.w3.org/ns/prov#value">;
    /**
     * **[prov:wasAssociatedWith](http://www.w3.org/ns/prov#wasAssociatedWith)**
     *
     * An prov:Agent that had some (unspecified) responsibility for the occurrence of this prov:Activity.
     *
     * @type        property
     * @parent      prov:wasInfluencedBy
     * @domain      prov:Activity
     * @range       prov:Agent
     */
    readonly wasAssociatedWith: import("../index.js").Iri<"http://www.w3.org/ns/prov#wasAssociatedWith">;
    /**
     * **[prov:wasAttributedTo](http://www.w3.org/ns/prov#wasAttributedTo)**
     *
     * Attribution is the ascribing of an entity to an agent.
     *
     * @type        property
     * @parent      prov:wasInfluencedBy
     * @domain      prov:Entity
     * @range       prov:Agent
     */
    readonly wasAttributedTo: import("../index.js").Iri<"http://www.w3.org/ns/prov#wasAttributedTo">;
    /**
     * **[prov:wasDerivedFrom](http://www.w3.org/ns/prov#wasDerivedFrom)**
     *
     * The more specific subproperties of prov:wasDerivedFrom (i.e., prov:wasQuotedFrom, prov:wasRevisionOf, prov:hadPrimarySource) should be used when applicable.
     *
     * @type        property
     * @parent      prov:wasInfluencedBy
     * @domain      prov:Entity
     * @range       prov:Entity
     */
    readonly wasDerivedFrom: import("../index.js").Iri<"http://www.w3.org/ns/prov#wasDerivedFrom">;
    /**
     * **[prov:wasEndedBy](http://www.w3.org/ns/prov#wasEndedBy)**
     *
     * End is when an activity is deemed to have ended. An end may refer to an entity, known as trigger, that terminated the activity.
     *
     * @type        property
     * @parent      prov:wasInfluencedBy
     * @domain      prov:Activity
     * @range       prov:Entity
     */
    readonly wasEndedBy: import("../index.js").Iri<"http://www.w3.org/ns/prov#wasEndedBy">;
    /**
     * **[prov:wasGeneratedBy](http://www.w3.org/ns/prov#wasGeneratedBy)**
     *
     * @type        property
     * @parent      prov:wasInfluencedBy
     * @domain      prov:Entity
     * @range       prov:Activity
     */
    readonly wasGeneratedBy: import("../index.js").Iri<"http://www.w3.org/ns/prov#wasGeneratedBy">;
    /**
     * **[prov:wasInfluencedBy](http://www.w3.org/ns/prov#wasInfluencedBy)**
     *
     * Because prov:wasInfluencedBy is a broad relation, its more specific subproperties (e.g. prov:wasInformedBy, prov:actedOnBehalfOf, prov:wasEndedBy, etc.) should be used when applicable.
     *
     * @type        property
     * @domain      prov:Activity or prov:Agent or prov:Entity
     * @range       prov:Activity or prov:Agent or prov:Entity
     */
    readonly wasInfluencedBy: import("../index.js").Iri<"http://www.w3.org/ns/prov#wasInfluencedBy">;
    /**
     * **[prov:wasInformedBy](http://www.w3.org/ns/prov#wasInformedBy)**
     *
     * An activity a2 is dependent on or informed by another activity a1, by way of some unspecified entity that is generated by a1 and used by a2.
     *
     * @type        property
     * @parent      prov:wasInfluencedBy
     * @domain      prov:Activity
     * @range       prov:Activity
     */
    readonly wasInformedBy: import("../index.js").Iri<"http://www.w3.org/ns/prov#wasInformedBy">;
    /**
     * **[prov:wasInvalidatedBy](http://www.w3.org/ns/prov#wasInvalidatedBy)**
     *
     * @type        property
     * @parent      prov:wasInfluencedBy
     * @domain      prov:Entity
     * @range       prov:Activity
     */
    readonly wasInvalidatedBy: import("../index.js").Iri<"http://www.w3.org/ns/prov#wasInvalidatedBy">;
    /**
     * **[prov:wasQuotedFrom](http://www.w3.org/ns/prov#wasQuotedFrom)**
     *
     * An entity is derived from an original entity by copying, or 'quoting', some or all of it.
     *
     * @type        property
     * @parent      prov:wasDerivedFrom
     * @domain      prov:Entity
     * @range       prov:Entity
     */
    readonly wasQuotedFrom: import("../index.js").Iri<"http://www.w3.org/ns/prov#wasQuotedFrom">;
    /**
     * **[prov:wasRevisionOf](http://www.w3.org/ns/prov#wasRevisionOf)**
     *
     * A revision is a derivation that revises an entity into a revised version.
     *
     * @type        property
     * @parent      prov:wasDerivedFrom
     * @domain      prov:Entity
     * @range       prov:Entity
     */
    readonly wasRevisionOf: import("../index.js").Iri<"http://www.w3.org/ns/prov#wasRevisionOf">;
    /**
     * **[prov:wasStartedBy](http://www.w3.org/ns/prov#wasStartedBy)**
     *
     * Start is when an activity is deemed to have started. A start may refer to an entity, known as trigger, that initiated the activity.
     *
     * @type        property
     * @parent      prov:wasInfluencedBy
     * @domain      prov:Activity
     * @range       prov:Entity
     */
    readonly wasStartedBy: import("../index.js").Iri<"http://www.w3.org/ns/prov#wasStartedBy">;
}
/**
 * prefix **prov:** <<http://www.w3.org/ns/prov#>>
 *
 * prov
 *
 * The PROV Ontology (PROV-O) expresses the [PROV Data Model](http://www.w3.org/TR/2013/REC-prov-dm-20130430/) using the [OWL2 Web Ontology Language (OWL2)](/w3c/owl).  It provides a set of classes, properties, and restrictions that can be used to represent and interchange provenance information generated in different systems and under different contexts.  It can also be specialized to create new classes and properties to model provenance information for different applications and domains.
 */
declare const prov: Vocabulary;
export default prov;
//# sourceMappingURL=prov.d.ts.map