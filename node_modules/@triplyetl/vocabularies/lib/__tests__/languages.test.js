import LanguageTag from '../Classes/LanguageTag.js';
import Region from '../Classes/Region.js';
import { region, language } from '../Languages/index.js';
import { assert } from 'chai';
describe('Test static languages', () => {
    it('should work for language tags', () => {
        const nl = language.nl;
        assert.equal(nl.toString(), 'nl');
    });
    it('should fail for invalid language/region tags', () => {
        assert.throw(() => new LanguageTag('42'), "Tag '42' is not a valid language tag.");
        assert.throw(() => language.nl.addRegion(new Region('42')), "Tag 'nl-42' is not a valid language tag.");
    });
    it('should work for language tags with regions', () => {
        const nl_BE = language.nl.addRegion(region.BE);
        assert.equal(nl_BE.toString(), 'nl-BE');
    });
    it('assert a language tag', () => {
        const tag = new LanguageTag('nl');
        assert.isTrue(LanguageTag.isLanguageTag(tag));
        assert.isTrue(LanguageTag.isLanguageTag(language.nl.addRegion(region.AA)));
    });
});
//# sourceMappingURL=languages.test.js.map