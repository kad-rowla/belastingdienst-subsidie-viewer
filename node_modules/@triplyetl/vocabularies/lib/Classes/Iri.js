import { getFactory } from '@triplydb/data-factory';
import { NamedNode } from '@triplydb/data-factory/Terms.js';
const factory = getFactory();
export default class Iri extends NamedNode {
    $IriClass = 'IriClass';
    static pathPrefix = '';
    static pathSuffix = '';
    constructor(iri, opts) {
        let $iri;
        if (typeof iri === 'string') {
            $iri = factory.namedNode(iri, { validationStatus: opts?.validationStatus }).value;
        }
        else {
            $iri = iri.value;
        }
        super($iri, opts?.validationStatus ?? 'disabled');
    }
    concat(path) {
        return new Iri(`${this.toString()}${path}`);
    }
    toString() {
        return this.value;
    }
}
export function isIri(obj) {
    return typeof obj === 'object' && Object.hasOwn(obj, '$IriClass');
}
//# sourceMappingURL=Iri.js.map