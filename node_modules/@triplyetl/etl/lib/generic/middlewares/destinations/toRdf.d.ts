import { Middleware } from "../../index.js";
import { NamedNode } from "rdf-js";
import { DestinationGetter } from "../../locations/destinations/index.js";
import { PatternTerm } from "@triplydb/data-factory/Store.js";
interface GraphPattern {
    graph: PatternTerm;
}
export interface ToRdfOptions {
    /**
     * Which graphs to include
     */
    includeGraphs?: Array<string | NamedNode | GraphPattern>;
    /**
     * Which graphs to exclude.
     * When specified in combination with `includeGraphs`, the blacklist will take precedence
     */
    excludeGraphs?: Array<string | NamedNode | GraphPattern>;
}
export default function (destination: DestinationGetter, opts?: ToRdfOptions): Middleware;
export {};
//# sourceMappingURL=toRdf.d.ts.map