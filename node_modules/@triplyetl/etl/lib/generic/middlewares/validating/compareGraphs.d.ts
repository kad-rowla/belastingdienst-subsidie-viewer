import { Quad } from "@triplydb/data-factory/Terms.js";
import { Middleware } from "../../index.js";
import { SourceGetter, StringSourceInfo } from "../../locations/sources/index.js";
import { LoadRdfOptions } from "../sources/loadRdf.js";
export interface CompareGraphsOptions {
    key?: string;
    throw?: boolean;
    terminate?: boolean;
}
declare const _default: (oneOrMoreSources: SourceGetter<"statements", StringSourceInfo> | SourceGetter<"statements", StringSourceInfo>[], opts?: LoadRdfOptions & CompareGraphsOptions) => Middleware;
export default _default;
export interface IsomorphicReport {
    isomorphic: boolean;
    quads: {
        missing: Quad[] | undefined;
        additional: Quad[] | undefined;
    };
    blanknodes: {
        missing: Record<string, Quad[]> | undefined;
        additional: Record<string, Quad[]> | undefined;
    };
    report: string;
}
export declare const isIsomorphicReport: (value: any) => value is IsomorphicReport;
export declare function getBnodeDiff<Q extends Quad = Quad>(receivedQuads: Q[], expectedQuads: Q[]): {
    received: Record<string, Q[]>;
    expected: Record<string, Q[]>;
};
//# sourceMappingURL=compareGraphs.d.ts.map