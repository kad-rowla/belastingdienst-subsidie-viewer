import { Middleware } from "../../index.js";
import postgres from "postgres";
type Options<T extends {
    [key: string]: postgres.PostgresType;
}> = postgres.Options<T> & {
    url: string;
    showParsedOptions: boolean;
    skipTrim?: boolean;
    skipEnrich?: boolean;
};
/**
 * A record for every row returned by a postgres query.
 *
 * Ways to configure the database connection:
 * - `url`: a `postgres://` url connection string
 * - environment variables
 * - lowercase key-value pairs,
 *   e.g. `{port: 5432, username: postgres}`
 *
 * Values described in later items of the above list take precedence.
 *
 * Supported environment variables:
 * - `POSTGRES_HOST`
 * - `POSTGRES_PORT`
 * - `POSTGRES_DATABASE`
 * - `POSTGRES_USERNAME`
 * - `POSTGRES_PASSWORD`
 */
export default function fromPostgres<T extends {
    [key: string]: postgres.PostgresType;
}>(query: string | string[], opts?: Partial<Options<T>>): Middleware;
export {};
//# sourceMappingURL=fromPostgres.d.ts.map