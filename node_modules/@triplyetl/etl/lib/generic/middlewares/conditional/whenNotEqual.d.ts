import { Key, MiddlewareList } from "../../index.js";
/**
 * Run middlewares under the condition that the given key exists and does
 * not have the specified value or one of the specified values.
 *
 * @remarks
 * If the given key does not exist, the middlewares are not run.
 * If the given key exists but contains an empty value, the middlewares are
 * not run.  An empty value is `null`, `undefined`, the empty string (`''`),
 * the empty array (`[]`), or the empty object (`{}`).
 *
 * @param key - The key whose value is going to be compared against one or
 * more values.
 *
 * @param value - The value or array of values that are used to compare the
 * value of `key` against.  If multiple values are specified, the middlewares
 * are run if none of the specified value matches the value stored in
 * `key`.
 *
 * @param middleware - A middleware or array of middlewares.
 *
 * @example
 * The following snippet only processes records that are not specified as
 * 'hidden' in the source system.
 *
 * ```ts
 * fromJson([
 *   { status: 'draft', id: '1', ... },
 *   { status: 'hidden', id: '2', ... },
 *   { status: 'published', id: '3', ... },
 * ]),
 * whenNotEqual('status', 'hidden', [
 *   triple(iri(prefix.id, 'id'), a, sdo.BlogPosting),
 *   ...,
 * ]),
 * ```
 *
 * This results in the following linked data assertions:
 *
 * ```ttl
 * id:1 a sdo:BlogPosting.
 * id:3 a sdo:BlogPosting.
 * ...
 * ```
 *
 * @example
 * The following snippet extends the previous example by skipping hidden
 * records and records that have draft status.
 *
 * ```ts
 * fromJson([
 *   { status: 'draft', id: '1', ... },
 *   { status: 'hidden', id: '2', ... },
 *   { status: 'published', id: '3', ... },
 * ]),
 * whenNotEqual('status', ['draft', 'hidden'], [
 *   triple(iri(prefix.id, 'id'), a, sdo.BlogPosting),
 *   ...,
 * ]),
 * ```
 *
 * This results in the following linked data assertions:
 *
 * ```ttl
 * id:3 a sdo:BlogPosting.
 * ...
 * ```
 *
 * @see Use {@link whenEqual} to run middlewares under the condition that the
 * given key exists and has the specified value or has at least one of the
 * specified values.
 */
export default function <T, R = unknown>(key: Key, value: T | T[], ...middleware: MiddlewareList): MiddlewareList<R>;
//# sourceMappingURL=whenNotEqual.d.ts.map