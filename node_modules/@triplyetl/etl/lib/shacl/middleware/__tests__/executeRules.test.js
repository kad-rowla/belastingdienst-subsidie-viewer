import { assert } from "chai";
import { getFactory } from "@triplydb/data-factory";
import { Etl, loadRdf, Source } from "../../../generic/index.js";
import { rdf } from "@triplyetl/vocabularies";
import executeRules from "../executeRules.js";
// This tests is only for the middleware, the SHACL Rule engine has it's own tests.
describe("writing.executeShaclRules", () => {
    it("should create 2 triples from static strings", async () => {
        const app = new Etl({});
        const Square = getFactory().namedNode("http://example.org/Square");
        const SquareRectangle = getFactory().namedNode("http://example.org/SquareRectangle");
        app.use([
            loadRdf(Source.file("./src/__tests__/resources/shacl/example.data.ttl")),
            executeRules(Source.file("./src/__tests__/resources/shacl/example.shape.ttl")),
            async (ctx, next) => {
                const squares = ctx.store.getQuads(SquareRectangle, rdf.type, Square, null);
                assert.equal(squares.length, 1);
                return next();
            },
        ]);
        return app.run();
    });
});
//# sourceMappingURL=executeRules.test.js.map