import App from "@triply/triplydb/App.js";
import chalk from "chalk";
import inquirer from "inquirer";
import { Etl } from "../../../generic/index.js";
const cmd = {
    command: "delete-datasets",
    describe: "Bulk deleting of Datasets",
    builder: {},
    handler: async (_) => {
        if (!Etl.token) {
            console.warn(chalk.bgRed("No TriplyDB Token found, create one with the `create-token` command"));
            process.exit(1);
        }
        console.info("Standby, fetching datasets might take a while ...");
        const app = App.get(Etl.token);
        const accounts = [];
        const acs = await app.getAccounts().toArray();
        for (const i in acs) {
            const info = await acs[i].getInfo();
            accounts.push({
                name: `${info.name ?? info.accountName} ${info.type === "org" ? "(org)" : ""}`,
                value: info.accountName,
            });
        }
        const questionsAccount = [
            {
                name: "accountName",
                message: "Choose the account containing the datasets you want to delete",
                type: "list",
                choices: accounts,
            },
        ];
        let defaultAnswerAccounts;
        if (accounts.length === 1) {
            defaultAnswerAccounts = { dataset: accounts[0].value };
        }
        const accountName = (await inquirer.prompt(questionsAccount, defaultAnswerAccounts)).accountName;
        const account = await app.getAccount(accountName);
        const foundDatasets = [];
        for await (const dataset of account.getDatasets()) {
            const info = await dataset.getInfo();
            foundDatasets.push({ value: info.name, name: info.displayName });
        }
        if (foundDatasets.length === 0) {
            console.warn(chalk.bgMagenta("No datasets found"));
            process.exit(0);
        }
        const questions = [
            {
                name: "datasets",
                message: "Choose the dataset(s) you want to delete",
                type: "checkbox",
                choices: foundDatasets,
            },
        ];
        inquirer
            .prompt(questions)
            .then((answers) => {
            const datasets = answers.datasets;
            datasets.forEach((name) => {
                account
                    .getDataset(name)
                    .then(async (dataset) => dataset.delete())
                    .then((_) => console.info(chalk.green(`dataset '${name}' deleted`)))
                    .catch((e) => console.error(e.message.bgRed));
            });
        })
            .catch((e) => console.error(e.message.bgRed));
    },
};
export default cmd;
//# sourceMappingURL=deleteDatasets.js.map