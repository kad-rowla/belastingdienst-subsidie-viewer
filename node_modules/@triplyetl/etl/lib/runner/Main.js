import React from "react";
import { useMessageCounts, useEtl } from "./hooks.js";
import ProgressBar from "./components/ProgressBar.js";
import ErrorReport from "./components/ErrorReport.js";
import { Box } from "ink";
import Status from "./components/Status.js";
import PrePostHookInfo from "./components/PrePostHookInfo.js";
import Report from "./components/Report.js";
import { EtlError } from "../utils/Error.js";
const Main = ({ getEtl, initError }) => {
    const { app, error, finalReport, status, untouchedMiddlewares } = useEtl(getEtl);
    const isTraceDebug = error instanceof EtlError && !!error.trace && error.trace.isTraceDebug;
    const messageCounts = useMessageCounts(app, !isTraceDebug && !!error);
    if (initError) {
        throw initError;
    }
    return (React.createElement(Box, { margin: 1, flexDirection: "column" },
        error && React.createElement(ErrorReport, { untouchedMiddlewares: untouchedMiddlewares, error: error }),
        React.createElement(PrePostHookInfo, { type: "pre", executing: status === "beforeHook" }),
        app && React.createElement(ProgressBar, { finished: !!finalReport, etl: app }),
        React.createElement(PrePostHookInfo, { type: "post", executing: status === "afterHook" }),
        app && status !== "done" && !error && React.createElement(Status, { messageCounts: messageCounts, etl: app }),
        app && status === "done" && finalReport && (React.createElement(Report, { messageCounts: messageCounts, untouchedMiddlewares: untouchedMiddlewares || [], report: finalReport }))));
};
export default Main;
//# sourceMappingURL=Main.js.map