import { addMwCallSiteToError } from "../../../../utils/index.js";
import quad, { isSPG } from "./rdf/quad.js";
function blanknode(graphOrSubject, subjectOrPredicate, predicateOrObject, ...pairs) {
    return addMwCallSiteToError(async (ctx, next) => {
        const O = ctx.app.skolemIri;
        let S, P, G;
        if (isSPG(predicateOrObject)) {
            G = graphOrSubject;
            S = subjectOrPredicate;
            P = predicateOrObject;
        }
        else {
            S = graphOrSubject;
            P = subjectOrPredicate;
            pairs = [predicateOrObject, ...pairs];
        }
        await quad(S, P, O, G)(ctx, () => Promise.resolve());
        for (let i = 0; i < pairs.length; i++)
            await quad(O, pairs[i][0], pairs[i][1], G)(ctx, () => Promise.resolve());
        return next();
    }, { sourceFuncName: "_blanknode" });
}
export default blanknode;
//# sourceMappingURL=blanknode.js.map