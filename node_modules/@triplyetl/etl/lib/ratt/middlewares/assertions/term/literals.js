import { isStatic } from "./str.js";
import { coerceLiteral } from "../statement/rdf/utils/coerceLiteral.js";
import { str } from "../../../index.js";
import { isNamedNode } from "../../../../utils/asserts.js";
import { isKey } from "../../../../generic/Context.js";
import { LanguageTag } from "@triplyetl/vocabularies";
// TODO @DocumentationTeam: add TS doc comment here
export function literals(lexicalFormKeys, languageTagOrDataType) {
    return (ctx) => {
        let $lexicalFormKeys;
        if (isKey(lexicalFormKeys)) {
            $lexicalFormKeys = ctx
                .getArray(lexicalFormKeys, "any")
                .map((value) => (typeof value === "string" ? str(value) : value));
        }
        else {
            $lexicalFormKeys = lexicalFormKeys;
        }
        return $lexicalFormKeys.map((lexicalFormKey) => {
            const keyLabel = isStatic(lexicalFormKey) ? `str('${lexicalFormKey}')` : lexicalFormKey.toString();
            if (!isStatic(lexicalFormKey) && isKey(lexicalFormKey)) {
                if (!ctx.hasKey(lexicalFormKey))
                    throw new Error(`The key '${lexicalFormKey}' is missing, unable to get a Literal.`);
                lexicalFormKey = ctx.getAny(lexicalFormKey);
            }
            let keyLabelLanguageTagOrDataType;
            if (isStatic(languageTagOrDataType))
                keyLabelLanguageTagOrDataType = `str('${keyLabelLanguageTagOrDataType}')`;
            else if (LanguageTag.isLanguageTag(languageTagOrDataType))
                keyLabelLanguageTagOrDataType = `languageTag('${languageTagOrDataType.toString()}')`;
            else if (isNamedNode(languageTagOrDataType))
                keyLabelLanguageTagOrDataType = `NamedNode<'${languageTagOrDataType.value}'>)`;
            else if (languageTagOrDataType === undefined)
                keyLabelLanguageTagOrDataType = "undefined";
            else if (typeof languageTagOrDataType === "string")
                keyLabelLanguageTagOrDataType = `key '${languageTagOrDataType}'`;
            else
                keyLabelLanguageTagOrDataType = "unkown";
            if (typeof languageTagOrDataType === "string" && !isStatic(languageTagOrDataType)) {
                languageTagOrDataType = ctx.getAny(languageTagOrDataType);
            }
            return coerceLiteral(lexicalFormKey, languageTagOrDataType, keyLabel, keyLabelLanguageTagOrDataType);
        });
    };
}
export default literals;
//# sourceMappingURL=literals.js.map