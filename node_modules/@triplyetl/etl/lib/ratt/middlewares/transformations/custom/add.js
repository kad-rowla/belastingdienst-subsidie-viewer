import { set as lodashSet } from "lodash-es";
import { addMwCallSiteToError } from "../../../../utils/index.js";
// to mantain backward-compatibility, the default export uses the addMwCallSiteToError wrapper
// when used in a helper that uses this `add()` it is best to use the named import otherwise users
// do not see the correct errors, but always the `add()` error.
export function add(opts) {
    return async function _add(ctx, next) {
        if (ctx.isNotEmpty(opts.key))
            throw new Error(`Record already contains key '${opts.key}'. Use the 'replace' middleware instead`);
        lodashSet(ctx.record, opts.key, await opts.value(ctx));
        return next();
    };
}
export default (opts) => addMwCallSiteToError(add(opts), { sourceFuncName: "_add" });
//# sourceMappingURL=add.js.map