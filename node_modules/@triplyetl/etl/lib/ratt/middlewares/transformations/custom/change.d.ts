import { Middleware } from "../../../../generic/index.js";
import { TypeForName, TypeName } from "../../../../generic/Context.js";
interface Opts<T extends TypeName = "unknown"> {
    /**
     * Key (or keys) to change
     */
    key: string | string[];
    /**
     * Modify the value
     */
    change: (val: TypeForName<T>) => unknown;
    /**
     * Ensure the value is of this type
     */
    type: T;
}
export declare function change<R = unknown, T extends TypeName = "unknown">(opts: Opts<T>): Middleware<R>;
declare const _default: <R = unknown, T extends TypeName = "unknown">(opts: Opts<T>) => Middleware<R>;
export default _default;
//# sourceMappingURL=change.d.ts.map