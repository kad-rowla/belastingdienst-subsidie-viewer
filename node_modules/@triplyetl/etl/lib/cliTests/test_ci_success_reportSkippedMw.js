import { fill } from "lodash-es";
import { Etl, fromJson, when } from "../generic/index.js";
import { triple, iri } from "../ratt/index.js";
import * as sparql from "../sparql/index.js";
export default async function () {
    const app = new Etl({
        defaultGraph: "https://default.com/",
    });
    app.use(fromJson(fill(new Array(10), { a: "a:a", b: "b:b", c: "c:c" })));
    app.use(triple(iri("a"), iri("b"), iri("b")));
    // app.use(triple(iri("a"), iri("b"), iri("doesNotExist")));
    // app.use(triple(iri("a"), iri("b"), iri("doesNotExist")));
    app.use(async (_ctx, next) => {
        return next();
    });
    app.use(sparql.construct("CONSTRUCT WHERE {<a:a> <b:b> <b:b> }")); //this returns results
    app.use(sparql.construct("CONSTRUCT WHERE {<a:a> <b:b> <c:c> }")); //this doesnt return results
    // app.use(sparqlConstruct('CONSTRUCT WHERE {<a:a> <b:b> ?c}'))
    app.useWhen(() => true, async () => { }, triple(iri("a"), iri("b"), iri("b")));
    app.use(when(() => false, triple(iri("a"), iri("b"), iri("b"))));
    return app;
}
//# sourceMappingURL=test_ci_success_reportSkippedMw.js.map