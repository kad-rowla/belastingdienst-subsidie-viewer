import { a } from "@triplyetl/vocabularies";
import { Destination, Etl, Source, toRdf } from "../generic/index.js";
import { quad } from "../ratt/index.js";
export default async function () {
    const app = new Etl({
        defaultGraph: "https://default.com/",
        sources: {
            test: Source.file("./src/__tests__/resources/validationFiles/data.ttl"),
        },
        destinations: {
            /**
             * Assuming we have a TRIPLYDB_TOKEN env variable for LaurensRietveld
             */
            somedataset: Destination.TriplyDb.rdf("somedataset", {
                overwrite: true,
                defaultGraph: "https://somethingelse/",
            }),
            // someOtherdataset: Destination.TriplyDb.rdf("somedataset", { overwrite: true }),
        },
    });
    await app.copySource(Source.TriplyDb.rdf("triply", "pokemon"), app.destinations.somedataset);
    await app.copySource(app.sources.test, app.destinations.somedataset);
    app.use(quad(a, a, a, a));
    app.use(toRdf(app.destinations.somedataset));
    return app;
}
//# sourceMappingURL=test_copy_to_rdf.js.map