import { Context, Middleware } from "../../generic/index.js";
import { SourceGetter, StringSourceInfo } from "../../generic/locations/sources/index.js";
import { NamedNodeCompatibleType } from "../../utils/index.js";
export interface ConstructOptions {
    /**
     * Store the construct query results in this graph.
     * @default The Etl default graph
     */
    toGraph?: NamedNodeCompatibleType;
}
export default function sparqlConstruct(query: string | SourceGetter<"string", StringSourceInfo> | ((ctx: Context) => string | string[]) | Array<string | SourceGetter<"string", StringSourceInfo> | ((ctx: Context) => string | string[])>, opts?: ConstructOptions): Middleware;
//# sourceMappingURL=construct.d.ts.map