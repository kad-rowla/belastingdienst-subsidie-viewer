/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import fs from "fs-extra";
import { Readable } from "stream";
/**
 * Need this for better error handling.
 * see https://stackoverflow.com/a/59217504/1052020
 */
export declare function createReadStreamSafe(filename: string): Promise<fs.ReadStream>;
export declare function getFileSizes(files: string[]): Promise<number>;
export declare const WRITABLE_LD_EXTENSIONS: readonly ["nq", "ttl", "nt", "trig"];
export type LdExtensions = (typeof WRITABLE_LD_EXTENSIONS)[number];
export type LdFormats = ReturnType<typeof ldExtensionToN3Format>;
export declare function ldExtensionToN3Format(ext: LdExtensions): "trig" | "n-quads" | "n-triples" | "turtle";
export type CompressionType = "gz" | undefined;
export interface Options<F> {
    extension: F;
    compression: CompressionType;
}
export declare function parsePath<F extends string>(filepath: string, allowedExtensions?: ReadonlyArray<F>): Options<F>;
export declare function resolveAndFilenamify(directory: string, name: string): string;
export declare function streamToString(readable: Readable, compression: CompressionType): Promise<string>;
//# sourceMappingURL=files.d.ts.map