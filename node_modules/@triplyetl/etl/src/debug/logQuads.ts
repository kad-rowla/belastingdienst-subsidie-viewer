import { Middleware } from "../generic/index.js";
import { addMwCallSiteToError } from "../utils/index.js";
import { getErr } from "../utils/Error.js";
import { quadsToString } from "../utils/index.js";
import { WriterOptions } from "../utils/quadsToString.js";
import { MimeFormat } from "n3";
import { Pattern } from "@triplydb/data-factory/Store.js";

interface LogQuadsInterface extends WriterOptions {
  pattern?: Pattern;
}
// TODO @DocumentationTeam: add TS doc comment here
export default function logQuads(opts?: MimeFormat | LogQuadsInterface): Middleware {
  return addMwCallSiteToError(
    async function _logRecord(ctx, next) {
      const writerOptions: WriterOptions =
        typeof opts === "string"
          ? { format: opts }
          : {
              prefixes: opts?.prefixes,
              iris: opts?.iris,
              format: opts?.format,
              end: opts?.end,
            };
      const extraOptions = typeof opts === "string" ? {} : { pattern: opts?.pattern, end: opts?.end };
      console.info(quadsToString(ctx.store.getQuads(extraOptions.pattern ?? {}), writerOptions));
      if (extraOptions.end) throw getErr().setStoppedAtHead();
      return next();
    },
    { sourceFuncName: "_logQuads" },
  );
}
