/**
 * This files contains a list of literal values, used for testing parsers.
 */
import { xsd } from "@triplyetl/vocabularies";
import { NamedNode } from "@triplydb/data-factory/Terms.js";

interface LiteralDict {
  datatype: NamedNode<string>;
  valid: Array<{ [key: string]: string }>;
  invalid?: Array<{ [key: string]: string }>;
}

/* eslint-disable quote-props */
const literals: LiteralDict[] = [
  {
    datatype: xsd.gDay,
    valid: [{ "---02": "the 2nd of the month" }],
    invalid: [
      { "---2": "the day must be 2 digits" },
      { "": "an empty value is not valid, unless xsi:nil is used" },
      { "02": "the leading hyphens are required" },
      { "---32": "the day must be a valid day of the month; no month has 32 days" },
    ],
  },
  {
    datatype: xsd.gMonth,
    valid: [{ "--04": "April" }, { "--04-05:00": "April, US Eastern Standard Time" }],
    invalid: [
      { "": "an empty value is not valid, unless xsi:nil is used" },
      { "2004-04": "the year must not be specified; use gYearMonth instead" },
      { "04": "the leading hyphens are required" },
      { "--4": "the month must be 2 digits" },
      { "--13": "the month must be a valid month" },
    ],
  },
  {
    datatype: xsd.gMonthDay,
    valid: [{ "--04-12": "April 12" }, { "--04-12Z": "April 12, Coordinated Universal Time (UTC)" }],
    invalid: [
      { "": "an empty value is not valid, unless xsi:nil is used" },
      { "04-12": "the leading hyphens are required" },
      { "--04-31": "it must be a valid day of the year (April has 30 days)" },
      { "--4-6": "the month and day must be 2 digits each" },
    ],
  },
  {
    datatype: xsd.gYear,
    valid: [
      { "1970": "the year 1970" },
      { "2004-05:00": "2004, US Eastern Standard Time" },
      { "12004": "the year 12004" },
      { "0922": "the year 922" },
      { "-0045": "45 BC" },
    ],
    invalid: [
      { "": "an empty value is not valid, unless xsi:nil is used" },
      { "99": "the century must not be truncated" },
      { "922": "no left truncation is allowed; leading zeros should be added if necessary" },
    ],
  },
  {
    datatype: xsd.gYearMonth,
    valid: [
      { "2004-04": "April 2004" },
      { "2004-04-05:00": "April 2004, US Eastern Standard Time" },
      { "165810-03": "Found in RKD, must be valid" },
    ],
    invalid: [
      { "": "an empty value is not valid, unless xsi:nil is used" },
      { "99-04": "the century must not be truncated" },
      { "2004": "the month is required" },
      { "2004-4": "the month must be two digits" },
      { "2004-13": "the month must be a valid month" },
    ],
  },
  {
    datatype: xsd.byte,
    valid: [{ "+3": "" }, { "122": "" }, { "0": "" }, { "3": "" }, { "-123": "" }],
    invalid: [
      { "": "an empty value is not valid, unless xsi:nil is used" },
      { "130": "number is too large" },
      { "3.0": "value must not contain a decimal point" },
    ],
  },
  {
    datatype: xsd.date,
    valid: [
      { "2004-04-12": "April 12, 2004" },
      { "-0045-01-01": "January 1, 45 BC" },
      { "12004-04-12": "April 12, 12004" },
      {
        "2004-04-12-05:00":
          "April 12, 2004, US Eastern Standard Time, which is 5 hours behind Coordinated Universal Time (UTC)",
      },
      { "2004-04-12Z": "April 12, 2004, Coordinated Universal Time (UTC)" },
    ],
    invalid: [
      { "": "an empty value is not valid, unless xsi:nil is used" },
      { "99-04-12": "left truncation of the century is not allowed" },
      { "2004-4-2": "month and day must be two digits each" },
      { "2004/04/02": "slashes are not valid separators" },
      { "04-12-2004": "the value must be in CCYY-MM-DD order" },
      { "2004-04-31": "the date must be a valid date (April has 30 days)" },
    ],
  },
  {
    datatype: xsd.dateTime,
    valid: [
      { "2004-04-12T13:20:00": "1:20 pm on April 12, 2004" },
      { "2004-04-12T13:20:15.5": "1:20 pm and 15.5 seconds on April 12, 2004" },
      { "2004-04-12T13:20:00-05:00": "1:20 pm on April 12, 2004, US Eastern Standard Time" },
      { "2004-04-12T13:20:00Z": "1:20 pm on April 12, 2004, Coordinated Universal Time (UTC)" },
    ],
    invalid: [
      { "": "an empty value is not valid, unless xsi:nil is used" },
      { "2004-04-12T13:00": "seconds must be specified" },
      { "2004-04-1213:20:00": "the letter T is required" },
      { "99-04-12T13:00": "the century must not be left truncated" },
      { "2007-04-12": "the time is required" },
    ],
  },
  {
    datatype: xsd.decimal,
    valid: [
      { "3.0": "" },
      { "-3.0": "a negative sign is permitted" },
      { "+3.0": "a positive sign is permitted" },
      { "+3.5": "a positive sign is permitted" },
      { "3": "a decimal point is not required" },
      { ".3": "the value can start with a decimal point" },
      { "3.": "the value can end with a decimal point" },
      { "0": "" },
      { "-.3": "" },
      { "0003.0": "leading zeros are permitted" },
      { "3.0000": "trailing zeros are permitted" },
    ],
    invalid: [
      { "": "an empty value is not valid, unless xsi:nil is used" },
      { "3,5": "commas are not permitted; the decimal separator must be a period" },
    ],
  },
  {
    datatype: xsd.anyURI,
    valid: [
      { "": "an empty value" },
      { "http://datypic.com": "absolute URI (also a URL)" },
      { "mailto:info@datypic.com": "absolute URI" },
      { "../%C3%A9dition.html": "relative URI containing escaped non-ASCII character" },
      { "../Ã©dition.html": "relative URI containing unescaped non-ASCII character" },
      { "http://datypic.com/prod.html#shirt": "URI with fragment identifier" },
      { "../prod.html#shirt": "relative URI with fragment identifier" },
      { "urn:example:org": "URN}" },
    ],
    invalid: [
      // These should fail according to http://www.datypic.com/sc/xsd/t-xsd_anyURI.html
      // { 'http://ex.com/foo[0].$text': 'Illegal character in path' },
      // { 'http://datypic.com#frag1#frag2': 'too many # characters' },
      // { 'http://datypic.com#f% rag': '% character followed by something other than two hexadecimal digits' },
    ],
  },
  {
    datatype: xsd.double,
    valid: [
      { "-3E2": "" },
      { "4268.22752E11": "" },
      { "+24.3e-3": "" },
      { "12": "" },
      { "+3.5": "any value valid for decimal is also valid for xsd:double" },
      { "-INF": "negative infinity" },
      { "-0": "0" },
      { NaN: "Not a Number" },
    ],
    invalid: [
      { "-3E2.4": "the exponent must be an integer" },
      { "12E": 'an exponent must be specified if "E" is present' },
      { NAN: "values are case-sensitive, must be capitalized correctly" },
      { "": "an empty value is not valid, unless xsi:nil is used" },
    ],
  },
  {
    datatype: xsd.duration,
    valid: [
      { P2Y6M5DT12H35M30S: "2 years, 6 months, 5 days, 12 hours, 35 minutes, 30 seconds" },
      // { P1DT2H: "1 day, 2 hours" },
      { P20M: "20 months (the number of months can be more than 12)" },
      // { PT20M: "20 minutes" },
      { P0Y20M0D: "20 months (0 is permitted as a number, but is not required)" },
      { P0Y: "0 years" },
      { "-P60D": "minus 60 days" },
      { "PT1M30.5S": "1 minute, 30.5 seconds" },
    ],
    invalid: [
      { "P-20M": "the minus sign must appear first" },
      { P20MT: 'no time items are present, so "T" must not be present' },
      { P1YM5D: 'no value is specified for months, so "M" must not be present' },
      { "P15.5Y": "only the seconds can be expressed as a decimal" },
      { P1D2H: '"T" must be present to separate days and hours' },
      { "1Y2M": '"P" must always be present' },
      { P2M1Y: "years must appear before months" },
      { P: "at least one number and designator are required" },
      // { 'PT15.S': 'at least one digit must follow the decimal point if it appears' },
      { "": "an empty value is not valid, unless xsi:nil is used" },
    ],
  },
  {
    datatype: xsd.float,
    valid: [
      { "-3E2": "" },
      { "4268.22752E11": "" },
      { "+24.3e-3": "" },
      { "12": "" },
      { "+3.5": "any value valid for decimal is also valid for float" },
      { "-INF": "negative infinity" },
      { "-0": "0" },
      { NaN: "Not a Number" },
    ],
    invalid: [
      { "-3E2.4": "the exponent must be an integer" },
      { "12E": 'an exponent must be specified if "E" is present' },
      { NAN: "values are case-sensitive, must be capitalized correctly" },
      { "": "an empty value is not valid, unless xsi:nil is used" },
    ],
  },
  {
    datatype: xsd.hexBinary,
    valid: [{ "0FB8": "" }, { "0fb8": "equivalent to 0FB8" }, { "": "an empty value is valid" }],
    invalid: [{ FB8: "an odd number of characters is not valid; characters must appear in pairs" }],
  },
  {
    datatype: xsd.int,
    valid: [{ "+3": "" }, { "122": "" }, { "0": "" }, { "-12312": "" }],
    invalid: [
      { "2147483650": "number is too large" },
      { "3.0": "value must not contain a decimal point" },
      { "": "an empty value is not valid, unless xsi:nil is used" },
    ],
  },
  {
    datatype: xsd.integer,
    valid: [{ "122": "" }, { "00122": "leading zeros are permitted" }, { "0": "" }, { "-3": "" }, { "+3": "" }],
    invalid: [
      { "3.": "an integer must not contain a decimal point" },
      { "3.0": "an integer must not contain a decimal point" },
      { "": "an empty value is not valid, unless xsi:nil is used" },
    ],
  },
  // {
  //   datatype: xsd.language,
  //   valid: [
  //     { 'en': 'English' },
  //     { 'en-GB': 'UK English' },
  //     { 'en-US': 'US English' },
  //     { 'fr': 'French' },
  //     { 'de': 'German' },
  //     { 'es': 'Spanish' },
  //     { 'it': 'Italian' },
  //     { 'nl': 'Dutch' },
  //     { 'zh': 'Chinese' },
  //     { 'ja': 'Japanese' },
  //     { 'ko': 'Korean' },
  //     { 'i-navajo': 'IANA-registered language' },
  //     { 'x-Newspeak': 'private, unregistered language' },
  //     { 'any-value-with-short-parts': 'although a schema processor will consider this value valid, it does not follow RFC 3066 guidelines' }
  //   ],
  //   invalid: [
  //     { 'longerThan8': 'parts may not exceed 8 characters in length' },
  //     { '': 'an empty value is not valid, unless xsi:nil is used' }
  //   ]
  // },
  {
    datatype: xsd.long,
    valid: [{ "+3": "" }, { "122": "" }, { "0": "" }, { "-1231235555": "" }],
    invalid: [
      { "9223372036854775810": "number is too large" },
      { "3.0": "value must not contain a decimal point" },
      { "": "an empty value is not valid, unless xsi:nil is used" },
    ],
  },
  // {
  //   datatype: xsd.Name,
  //   valid: [
  //     { 'myElement': '' },
  //     { '_my.Element': '' },
  //     { 'my-element': '' },
  //     { 'pre:myelement3': 'this is recommended only if pre is a namespace prefix; otherwise, colons should not be used' }
  //   ],
  //   invalid: [
  //     { '-myelement': 'a Name must not start with a hyphen' },
  //     { '3rdElement': 'a Name must not start with a number' },
  //     { '': 'an empty value is not valid, unless xsi:nil is used' }
  //   ]
  // },
  // {
  //   datatype: xsd.NCName,
  //   valid: [
  //     { 'myElement': '' },
  //     { '_my.Element': '' },
  //     { 'my-element': '' },
  //     { 'pre:myelement3': 'this is recommended only if pre is a namespace prefix; otherwise, colons should not be used' }
  //   ],
  //   invalid: [
  //     { '-myelement': 'a Name must not start with a hyphen' },
  //     { '3rdElement': 'a Name must not start with a number' },
  //     { '': 'an empty value is not valid, unless xsi:nil is used' }
  //   ]
  // },
  {
    datatype: xsd.negativeInteger,
    valid: [{ "-3": "" }, { "-00122": "leading zeros are permitted" }],
    invalid: [
      { "0": "0 is not considered negative" },
      { "122": "value cannot be positive" },
      { "+3": "value cannot be positive" },
      { "3.0": "value must not contain a decimal point" },
      { "": "an empty value is not valid, unless xsi:nil is used" },
    ],
  },
  // {
  //   datatype: xsd.NMTOKEN,
  //   valid: [
  //     { 'ABCD': '' },
  //     { '123_456': '' },
  //     { '  starts_with_a_space': 'when parsed, leading spaces will be removed' }
  //   ],
  //   invalid: [
  //     { 'contains a space': 'value must not contain a space' },
  //     { '': 'an empty value is not valid, unless xsi:nil is used' }
  //   ]
  // },
  // {
  //   datatype: xsd.NMTOKENS,
  //   valid: [
  //     { 'ABCD 123': '' },
  //     { 'ABCD': '' }
  //   ],
  //   invalid: [
  //     { '': 'an empty value is not valid, unless xsi:nil is used' }
  //   ]
  // },
  {
    datatype: xsd.nonNegativeInteger,
    valid: [{ "+3": "" }, { "122": "" }, { "0": "" }, { "00122": "leading zeros are permitted" }],
    invalid: [
      { "-3": "value cannot be negative" },
      { "3.0": "value must not contain a decimal point" },
      { "": "an empty value is not valid, unless xsi:nil is used" },
    ],
  },
  {
    datatype: xsd.nonPositiveInteger,
    valid: [{ "-3": "" }, { "0": "" }, { "-00122": "leading zeros are permitted" }],
    invalid: [
      { "122": "value cannot be positive" },
      { "+3": "value cannot be positive" },
      { "3.0": "value must not contain a decimal point" },
      { "": "an empty value is not valid, unless xsi:nil is used" },
    ],
  },
  // {
  //   datatype: xsd.QName,
  //   valid: [
  //     { 'pre:myElement': 'valid assuming the prefix "pre" is mapped to a namespace in scope' },
  //     { 'myElement': 'prefix and colon are optional' }
  //   ],
  //   invalid: [
  //     { ':myElement': 'a QName must not start with a colon' },
  //     { 'pre:3rdElement': 'the local part must not start with a number; it must be a valid NCName' },
  //     { '': 'an empty value is not valid, unless xsi:nil is used' }
  //   ]
  // },
  {
    datatype: xsd.short,
    valid: [{ "+3": "" }, { "122": "" }, { "0": "" }, { "-1231": "" }],
    invalid: [
      { "32770": "number is too large" },
      { "3.0": "value must not contain a decimal point" },
      { "": "an empty value is not valid, unless xsi:nil is used" },
    ],
  },
  {
    datatype: xsd.string,
    valid: [
      { "This is a string!": "" },
      { "Ãdition franÃ§aise.": "" },
      { "12.5": "" },
      { "an empty string is valid": "" },
      { "PB&amp;J": 'when parsed, it will become "PB&J"' },
      { "   Separated by 3 spaces.": "" },
      { "This\nis on two lines": "" },
      { "Invalid values": "Comment" },
    ],
    invalid: [
      // { 'AT&T': 'ampersand must be escaped' },
      // { '3 < 4': 'the "less than" symbol must be escaped' }
    ],
  },
  // {
  //   datatype: xsd.token,
  //   valid: [
  //     { 'This is a string!': '' },
  //     { 'Ãdition franÃ§aise.': '' },
  //     { '12.5': '' },
  //     { 'an empty string is valid': '' },
  //     { 'PB&amp;J': 'when parsed, it will become "PB&J"' },
  //     { '   Separated by 3 spaces.': '' },
  //     { 'This\nis on two lines': '' },
  //     { 'Invalid values': 'Comment' }
  //   ],
  //   invalid: [
  //     { 'AT&T': 'ampersand must be escaped' },
  //     { '3 < 4': 'the "less than" symbol must be escaped' }
  //   ]
  // },
  {
    datatype: xsd.time,
    valid: [
      { "13:20:00": "1:20 PM" },
      { "13:20:30.5555": "1:20 PM and 30.5555 seconds" },
      { "13:20:00-05:00": "1:20 PM, US Eastern Standard Time" },
      { "13:20:00Z": "1:20 PM, Coordinated Universal Time (UTC)" },
      { "00:00:00": "midnight" },
      { "24:00:00": "midnight" },
    ],
    invalid: [
      { "5:20:00": "hours, minutes, and seconds must be two digits each" },
      { "13:20": "seconds must be specified, even if it is 00" },
      { "13:20.5:00": "values for hours and minutes must be integers" },
      { "13:65:00": "the value must be a valid time of day" },
      { "": "an empty value is not valid, unless xsi:nil is used" },
    ],
  },
  {
    datatype: xsd.unsignedByte,
    valid: [{ "+3": "" }, { "122": "" }, { "0": "" }],
    invalid: [
      { "-123": "negative values are not allowed" },
      { "256": "number is too large" },
      { "3.0": "value must not contain a decimal point" },
      { "": "an empty value is not valid, unless xsi:nil is used" },
    ],
  },
  {
    datatype: xsd.unsignedInt,
    valid: [{ "+3": "" }, { "122": "" }, { "0": "" }],
    invalid: [
      { "-123": "negative values are not allowed" },
      { "4294967299": "number is too large" },
      { "3.0": "value must not contain a decimal point" },
      { "": "an empty value is not valid, unless xsi:nil is used" },
    ],
  },
  {
    datatype: xsd.unsignedLong,
    valid: [{ "+3": "" }, { "122": "" }, { "0": "" }],
    invalid: [
      { "-123": "negative values are not allowed" },
      { "18446744073709551620": "number is too large" },
      { "3.0": "value must not contain a decimal point" },
      { "": "an empty value is not valid, unless xsi:nil is used" },
    ],
  },
  {
    datatype: xsd.unsignedShort,
    valid: [{ "+3": "" }, { "122": "" }, { "0": "" }],
    invalid: [
      { "-123": "negative values are not allowed" },
      { "65540": "number is too large" },
      { "3.0": "value must not contain a decimal point" },
      { "": "an empty value is not valid, unless xsi:nil is used" },
    ],
  },
  {
    datatype: xsd.base64Binary,
    valid: [
      // { "": "an empty value" },
      { "0FB8": "" },
      { "0fb8": "" },
      { "0 FB8 0F+9": "whitespace is allowed anywhere in the value" },
      { "0F+40A==": "equals signs are used for padding" },
    ],
    invalid: [
      { FB8: "an odd number of characters is not valid; characters appear in groups of four" },
      { "==0F": "equals signs may only appear at the end" },
    ],
  },
  {
    datatype: xsd.boolean,
    valid: [
      { true: "equals signs are used for padding" },
      { false: "equals signs are used for padding" },
      { "0": "false" },
      { "1": "true" },
    ],
    invalid: [
      { "": "an empty value is not valid, unless xsi:nil is used" },
      { TRUE: "values are case sensitive" },
      { T: 'the word "true" must be spelled out' },
      { FALSE: "values are case sensitive" },
      { F: 'the word "false" must be spelled out' },
    ],
  },
  // {
  //   datatype: geo.wktLiteral,
  //   valid: [
  //     { 'POINT(52.6025 4.688055)': 'The coordinates of Heiloo, NL' },
  //     { '<http://ex.com/> POINT(52.6025 4.688055)': 'The coordinates of Heiloo, NL' }
  //   ]
  // }
];
export default literals;
