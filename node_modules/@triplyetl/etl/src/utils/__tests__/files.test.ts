import * as zlib from "zlib";
import { expect } from "chai";
import fs from "fs-extra";

import { streamToString } from "../files.js";

describe("streamToString", function () {
  it("should convert uncompressed streams", async function () {
    const filename = "./src/__tests__/resources/csvFiles/cities.csv";
    const streamedContent = fs.createReadStream(filename);
    const stringContent = (await fs.readFile(filename)).toString();
    const equal = (await streamToString(streamedContent, undefined)) === stringContent;
    expect(equal).to.be.true;
  });
  it("should convert compressed streams", async function () {
    const filename = "./src/__tests__/resources/random.txt.gz";
    const streamedContent = fs.createReadStream(filename);
    const stringContent = (
      await new Promise<Buffer>(async (resolve, reject) =>
        zlib.gunzip(await fs.readFile(filename), (error, buffer) => {
          if (error !== null) reject(error);
          else resolve(buffer);
        })
      )
    ).toString();
    const equal = (await streamToString(streamedContent, "gz")) === stringContent;
    expect(equal).to.be.true;
  });
});
