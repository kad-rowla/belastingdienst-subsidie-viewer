//external dependencies
import { Etl, fromCsv, Source } from "../../../index.js";
import TriplyDb from "@triply/triplydb/App.js";
import chai from "chai";
import chaiAsPromised from "chai-as-promised";
chai.use(chaiAsPromised);
const expect = chai.expect;
let token = process.env.TRIPLYDB_TOKEN;
describe("Read from asset", function () {
  this.timeout(5000);
  afterEach(function () {
    Etl.CliContext = undefined;
  });
  it("Without triplydb credentials", async function () {
    const app = new Etl({ defaultGraph: "https://default.com/" });
    app.use(fromCsv(Source.TriplyDb.asset("ratt", "asset-ds", { name: "cities.csv" })));
    return expect(app.run()).eventually.rejectedWith("Missing a TriplyDb Token.");
  });
  it("With triplydb url", async function () {
    const app = new Etl({ defaultGraph: "https://default.com/" });
    app.use(
      fromCsv(
        Source.TriplyDb.asset("ratt", "asset-ds", {
          name: "cities.csv",
          triplyDb: { url: "https://api.nightly.triplydb.com" },
        }),
      ),
    );
    await app.run();
  });
  it("With a compressed file", async function () {
    const app = new Etl({ defaultGraph: "https://default.com/" });
    app.use(
      fromCsv(
        Source.TriplyDb.asset("ratt", "asset-ds", {
          name: "cities.csv.gz",
          triplyDb: { url: "https://api.nightly.triplydb.com" },
        }),
      ),
    );
    await app.run();
  });
  it("With triplydb in etl populated", async function () {
    Etl.CliContext = { triplydb: TriplyDb.get({ url: "https://api.nightly.triplydb.com" }) };
    const app = new Etl({
      defaultGraph: "https://default.com/",
    });
    app.use(
      fromCsv(
        Source.TriplyDb.asset("ratt", "asset-ds", {
          name: "cities.csv",
          triplyDb: { url: "https://api.nightly.triplydb.com" },
        }),
      ),
    );
    await app.run();
  });
});
