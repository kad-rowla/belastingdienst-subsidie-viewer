import { Key, Middleware } from "../../index.js";
import getCurrentLine from "get-current-line";
import { UseWhenCb, whenMw } from "../../Etl.js";

// TODO @DocumentationTeam: add TS doc comment here
export default function <R = unknown>(when?: Key | UseWhenCb<R>): Array<Middleware<R>> {
  const whenFn: UseWhenCb<R> =
    typeof when === "function"
      ? (ctx) => when(ctx)
      : (ctx) => (when === undefined ? true : ctx.hasKey(when) && !ctx.isEmpty(when));
  whenFn.sourceFuncName = "_skipRest";
  whenFn.callsite = getCurrentLine({ frames: 2 });
  return whenMw(whenFn, (_ctx, _next) => Promise.resolve());
}
