// https://github.com/validatorjs/validator.js/blob/master/test/validators.test.js
import chai from "chai";
import chaiAsPromised from "chai-as-promised";
import * as validators from "../index.js";

chai.use(chaiAsPromised);
const assert = chai.assert;
const isTrue = assert.isTrue;
const isFalse = assert.isFalse;
const isObject = assert.isObject;
const isBoolean = assert.isBoolean;

const testInvalid = (result: any) => {
  isObject(result);
  if (typeof result === "object") {
    isBoolean(result.isValid);
    isFalse(result.isValid);
  }
};

describe("Validators", () => {
  it("contains", () => {
    isTrue(validators.contains({ seed: "foo" })("bar foo"));
    isTrue(validators.contains({ seed: "foo" })("foo"));
    isTrue(validators.contains({ seed: "foo" })("xfoox"));
    testInvalid(validators.contains({ seed: "foo" })("bar"));
  });
  it("equals", () => {
    isTrue(validators.equals({ compare: "foo" })("foo"));
    testInvalid(validators.equals({ compare: "foo" })("bar"));
  });
  it("isAfter", () => {
    const date = new Date();
    date.setDate(date.getDate() + 1);
    isTrue(validators.isAfter({ date: "1970/02/09" })("1999/10/10"));
    isTrue(validators.isAfter()(date.toDateString()));
    testInvalid(validators.isAfter({ date: date.toDateString() })("1970/02/09"));
  });
  it("isAlpha", () => {
    isTrue(validators.isAlpha()("foo"));
    isTrue(validators.isAlpha()("fooBar"));
    isTrue(validators.isAlpha({ ignore: " " })("foo bar"));
    isTrue(validators.isAlpha({ ignore: /\d+/ })("foo123bar"));
    isTrue(validators.isAlpha({ locale: "bg-BG" })("ДдЖжзИиЙй"));
    testInvalid(validators.isAlpha()("12"));
  });
  it("isAlphanumeric", () => {
    isTrue(validators.isAlphanumeric()("12foo"));
    isTrue(validators.isAlphanumeric()("fooBar"));
    isTrue(validators.isAlphanumeric({ ignore: " " })("foo bar"));
    isTrue(validators.isAlphanumeric()("foo123bar"));
    isTrue(validators.isAlphanumeric({ locale: "bg-BG" })("123ДдЖжзИиЙй"));
    testInvalid(validators.isAlphanumeric()(" "));
  });
  it("isAscii", () => {
    isTrue(validators.isAscii()("12"));
    isTrue(validators.isAscii()("fooBar"));
    isTrue(validators.isAscii()("foo bar"));
    isTrue(validators.isAscii()("foo123bar"));
    let char = "";
    for (let i = 0; i < 127; i++) char += String.fromCharCode(i);
    isTrue(validators.isAscii()(char));
    testInvalid(validators.isAscii()("é"));
  });
  it("isBase32", () => {
    isTrue(validators.isBase32()("KRZGS4DMPFCVITA="));
    testInvalid(validators.isBase32()(" "));
  });
  it("isBase58", () => {
    isTrue(validators.isBase58()("25LxgBJxXXp3D"));
    testInvalid(validators.isBase58()(" "));
  });
  it("isBase64", () => {
    isTrue(validators.isBase64()("VHJpcGx5RVRM"));
    testInvalid(validators.isBase64()(" "));
  });
  it("isBefore", () => {
    const date = new Date();
    date.setDate(date.getDate() - 10);
    const date2 = new Date();
    date2.setDate(date2.getDate() + 10);
    isTrue(validators.isBefore({ date: "1999/10/10" })("1970/02/09"));
    isTrue(validators.isBefore()(date.toDateString()));
    testInvalid(validators.isBefore({ date: date.toDateString() })(date2.toDateString()));
  });
  it("isIBAN", () => {
    // https://bank.codes/iban/examples/
    isTrue(validators.isIBAN()("BE68539007547034"));
    isTrue(validators.isIBAN({ whitelist: ["CY"] })("CY17002001280000001200527600"));
    isTrue(validators.isIBAN({ whitelist: ["SV"] })("SV62CENR00000000000000700025"));
    testInvalid(validators.isIBAN({ blacklist: ["BE"] })("BE68539007547034"));
  });
  it("isBIC", () => {
    isTrue(validators.isBIC()("PMFAUS66HKG"));
    testInvalid(validators.isBIC()("Triply"));
  });
  it("isBoolean", () => {
    isTrue(validators.isBoolean()("1"));
    isTrue(validators.isBoolean()("true"));
    isTrue(validators.isBoolean()("false"));
    isTrue(validators.isBoolean({ loose: true })("yes"));
    testInvalid(validators.isBoolean()("yes"));
  });
  it("isByteLength", () => {
    isTrue(validators.isByteLength({ min: 0 })(""));
    isTrue(validators.isByteLength({ min: 1 })("12"));
    isTrue(validators.isByteLength({ min: 5, max: 5 })("12345"));
    testInvalid(validators.isByteLength({ min: 10 })("1234"));
  });
  it("isCreditCard", () => {
    isTrue(validators.isCreditCard()("3700 0000 0000 002"));
    isTrue(validators.isCreditCard()("8171 9999 0000 0000 021"));
    testInvalid(validators.isCreditCard()("1234"));
  });
  it("isCurrency", () => {
    isTrue(validators.isCurrency()("$12.34"));
    isTrue(validators.isCurrency()("$12,000.34"));
    isTrue(validators.isCurrency({ symbol: "€", decimal_separator: "," })("€1,99"));
    testInvalid(validators.isCurrency()("foo"));
  });
  it("isDataURI", () => {
    isTrue(validators.isDataURI()("data:text/plain;base64,SGVsbG8sIFdvcmxkIQ=="));
    isTrue(validators.isDataURI()("data:,Hello%2C%20World%21"));
    isTrue(validators.isDataURI()("data:text/html,%3Ch1%3EHello%2C%20World%21%3C%2Fh1%3E"));
    testInvalid(validators.isDataURI()("foo"));
  });
  it("isDate", () => {
    isTrue(validators.isDate()("1970/09/02"));
    isTrue(validators.isDate()("1970-09-02"));
    testInvalid(validators.isDate()("foo"));
  });
  it("isDecimal", () => {
    isTrue(validators.isDecimal()("0.1"));
    isTrue(validators.isDecimal()(".3"));
    isTrue(validators.isDecimal()("1.1"));
    isTrue(validators.isDecimal({ decimal_digits: "2,3" })("1.11"));
    isTrue(validators.isDecimal()("1.00003"));
    isTrue(validators.isDecimal({ locale: "nl-NL" })("1,42"));
    testInvalid(validators.isDecimal({ decimal_digits: "3" })("1.1"));
    testInvalid(validators.isDecimal()("1,1"));
  });
  it("isFloat", () => {
    isTrue(validators.isFloat()("0.1"));
    isTrue(validators.isFloat()(".3"));
    isTrue(validators.isFloat()("1"));
    isTrue(validators.isFloat({ min: 1, max: 10, gt: 1.05, lt: 1.12 })("1.11"));
    isTrue(validators.isFloat()("1.00003"));
    isTrue(validators.isFloat({ locale: "nl-NL" })("1,42"));
    testInvalid(validators.isFloat({ min: 3 })("1.1"));
    testInvalid(validators.isFloat()("1,1"));
  });
  it("isFQDN", () => {
    isTrue(validators.isFQDN()("domain.com"));
    isTrue(validators.isFQDN()("ex.domain.com"));
    testInvalid(validators.isFQDN()("ex"));
  });
  it("isFullWidth", () => {
    isTrue(validators.isFullWidth()("＠"));
    testInvalid(validators.isFullWidth()("@"));
  });
  it("isHalfWidth", () => {
    isTrue(validators.isHalfWidth()("￨"));
  });
  it("isHash", () => {
    isTrue(validators.isHash()("00E70A1D131572E6F7499762369AE281"));
    isTrue(validators.isHash()("00e70a1d131572e6f7499762369ae281"));
    isTrue(validators.isMD5()("00e70a1d131572e6f7499762369ae281"));
    isTrue(validators.isHash({ algorithm: "md5" })("00E70A1D131572E6F7499762369AE281"));
    isTrue(validators.isHash({ algorithm: "sha1" })("7A1D0EF599015E34427D6E5785A9631BB0150234"));
    isTrue(
      validators.isHash({ algorithm: "sha256" })("417CA5F943664ED3B5241B9D7DCC42DCEDD61E17BCF41C20143995E9522DB7EE"),
    );
    testInvalid(validators.isHash()("@"));
  });
  it("isHexadecimal", () => {
    isTrue(validators.isHexadecimal()("01234567890ABCDEF"));
    testInvalid(validators.isHexadecimal()("G"));
  });
  it("isHexColor", () => {
    isTrue(validators.isHexColor()("ffffff"));
    isTrue(validators.isHexColor()("#ffffff"));
    isTrue(validators.isHexColor()("#000"));
    isTrue(validators.isHexColor()("#000A"));
    testInvalid(validators.isHexColor()("G"));
  });
  it("isHSL", () => {
    isTrue(validators.isHSL()("hsl(120deg 75% 25%)"));
    isTrue(validators.isHSL()("hsl(120deg 75% 25% / 0.6)"));
    isTrue(validators.isHSL()("hsl(0, 100%, 50%, 50%)"));
    testInvalid(validators.isHSL()("G"));
  });
  it("isRgbColor", () => {
    isTrue(validators.isRgbColor()("rgb(255,255,255)"));
    isTrue(validators.isRgbColor()("rgba(5%,5%,5%,.3)"));
    testInvalid(validators.isRgbColor()("G"));
  });
  it("isIMEI", () => {
    isTrue(validators.isIMEI()("352099001761481"));
    isTrue(validators.isIMEI({ allow_hyphens: true })("35-209900-176148-1"));
    testInvalid(validators.isIMEI({ allow_hyphens: true })("9-015420-323751-7"));
  });
  it("isIn", () => {
    isTrue(validators.isIn({ values: ["bar", "foo"] })("foo"));
    isTrue(validators.isIn({ values: ["foo"] })("foo"));
    testInvalid(validators.isIn({ values: ["foo"] })("bar"));
  });
  it("isInt", () => {
    isTrue(validators.isInt()("1"));
    isTrue(validators.isInt()("-1"));
    isTrue(validators.isInt()("+1"));
    isTrue(validators.isInteger()("1"));
    isTrue(validators.isInt()("0"));
    isTrue(validators.isInt({ min: 1, max: 10, gt: 2, lt: 5 })("3"));
    isTrue(validators.isInt({ allow_leading_zeroes: true })("0003"));
    testInvalid(validators.isInt({ min: 3 })("1"));
    testInvalid(validators.isInt()("1.1"));
  });
  it("isIP", () => {
    isTrue(validators.isIP()("2001:db8:0000:1:1:1:1:1"));
    isTrue(validators.isIP()("17.0.0.1"));
    isTrue(validators.isIP()("::0000"));
    testInvalid(validators.isIP({ version: 6 })("127.0.0.1"));
    testInvalid(validators.isIP({ version: 4 })("2001:db8:0000:1:1:1:1:1"));
  });
  it("isIPRange", () => {
    isTrue(validators.isIPRange()("::/0"));
    isTrue(validators.isIPRange()("127.0.0.1/24"));
    testInvalid(validators.isIPRange()("127.200.230.1/35"));
  });
  it("isEAN", () => {
    isTrue(validators.isEAN()("9421023610112"));
    isTrue(validators.isEAN()("73513537"));
    testInvalid(validators.isEAN()("5901234123451"));
  });
  it("isISIN", () => {
    isTrue(validators.isISIN()("AU0000XVGZA3"));
    testInvalid(validators.isISIN()("DE000BAY0018"));
  });
  it("isISO31661Alpha2", () => {
    isTrue(validators.isISO31661Alpha2()("NL"));
    testInvalid(validators.isISO31661Alpha2()("FRA"));
  });
  it("isISO31661Alpha3", () => {
    isTrue(validators.isISO31661Alpha3()("NLD"));
    testInvalid(validators.isISO31661Alpha3()("FR"));
  });
  it("isISO6346", () => {
    isTrue(validators.isISO6346()("TGHU7599330"));
    testInvalid(validators.isISO6346()("OOLU1922713"));
  });
  it("isISO6391", () => {
    isTrue(validators.isISO6391()("nl"));
    testInvalid(validators.isISO6391()("NL"));
  });
  it("isISO8601", () => {
    isTrue(validators.isISO8601()("2000-02-29"));
    isTrue(validators.isISO8601()("2009-123"));
    isTrue(validators.isISO8601()("2010-02-30"));
    isTrue(validators.isISO8601()("2009-05-19T14:39Z"));
    testInvalid(validators.isISO8601({ strict: true })("2010-02-30"));
    testInvalid(validators.isISO8601({ strictSeparator: true })("2007-04-05T24:50"));
  });
  it("isISSN", () => {
    isTrue(validators.isISSN()("0378-5955"));
    testInvalid(validators.isISSN()("0378-5954"));
  });
  it("isISO4217", () => {
    isTrue(validators.isISO4217()("EUR"));
    testInvalid(validators.isISO4217()("€"));
  });
  it("isISRC", () => {
    isTrue(validators.isISRC()("USAT29900609"));
    testInvalid(validators.isISRC()("USAT2990060"));
  });
  it("isRFC3339", () => {
    isTrue(validators.isRFC3339()("2010-02-18t16:12:23.23334444z"));
    testInvalid(validators.isRFC3339()("2010-02-18t00:23:32.33+24:00"));
  });
  it("isJSON", () => {
    isTrue(validators.isJSON()("{}"));
    testInvalid(validators.isJSON()("a"));
  });
  it("isJWT", () => {
    isTrue(
      validators.isJWT()(
        "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJsb2dnZWRJbkFzIjoiYWRtaW4iLCJpYXQiOjE0MjI3Nzk2Mzh9.gzSraSYS8EXBxLN_oWnFSRgCzcmJmMjLiuyu5CSpyHI",
      ),
    );
    testInvalid(validators.isJWT()(""));
  });
  it("isLatLong", () => {
    isTrue(validators.isLatLong()("(-17.738223, 85.605469)"));
    isTrue(validators.isLatLong()("-15.379543, -137.285156"));
    testInvalid(validators.isLatLong()("90.1000000, 180.000000"));
  });
  it("isLength", () => {
    isTrue(validators.isLength()("foo"));
    isTrue(validators.isLength({ min: 1, max: 3 })("bar"));
    testInvalid(validators.isLength({ min: 1, max: 3 })("FooBar"));
  });
  it("isLocale", () => {
    isTrue(validators.isLocale()("en-US"));
    isTrue(validators.isLocale()("en_GB"));
    testInvalid(validators.isLocale()("a-DE"));
  });
  it("isLowercase", () => {
    isTrue(validators.isLowercase()("foo"));
    testInvalid(validators.isLowercase()("Foo"));
  });
  it("isUppercase", () => {
    isTrue(validators.isUppercase()("FOO"));
    testInvalid(validators.isUppercase()("Foo"));
  });
  it("isMimeType", () => {
    isTrue(validators.isMimeType()("text/turtle"));
    testInvalid(validators.isMimeType()("audio/mp4; charset=utf-8"));
  });
  it("isMobilePhone", () => {
    isTrue(validators.isMobilePhone()("+41761112233"));
    testInvalid(validators.isMobilePhone({ locale: "nl-NL" })("+41761112233"));
    testInvalid(validators.isMobilePhone()("0"));
  });
  it("isMongoId", () => {
    isTrue(validators.isMongoId()("507f1f77bcf86cd799439011"));
    testInvalid(validators.isMongoId()("0"));
  });
  it("isMultibyte", () => {
    isTrue(validators.isMultibyte()("é"));
    testInvalid(validators.isMultibyte()("0"));
  });
  it("isNumeric", () => {
    isTrue(validators.isNumeric()("1.0"));
    isTrue(validators.isNumeric()("+1.0"));
    isTrue(validators.isNumeric({ locale: "nl-NL" })("1,0"));
    testInvalid(validators.isNumeric()("0,1"));
    testInvalid(validators.isNumeric({ no_symbols: true })("+0.1"));
  });
  it("isOctal", () => {
    isTrue(validators.isOctal()("076543210"));
    testInvalid(validators.isOctal()("abcdefg"));
  });
  it("isPassportNumber", () => {
    isTrue(validators.isPassportNumber({ countryCode: "AM" })("AF0549358"));
    testInvalid(validators.isPassportNumber({ countryCode: "AM" })("A1054935"));
  });
  it("isPort", () => {
    isTrue(validators.isPort()("22"));
    testInvalid(validators.isPort()("-1"));
  });
  it("isPostalCode", () => {
    isTrue(validators.isPostalCode({ locale: "US" })("90210"));
    isTrue(validators.isPostalCode({ locale: "NL" })("1100AB"));
    isTrue(validators.isPostalCode()("90210"));
    testInvalid(validators.isPostalCode()(""));
  });
  it("isSemVer", () => {
    isTrue(validators.isSemVer()("0.0.4"));
    testInvalid(validators.isSemVer()("alpha"));
  });
  it("isStrongPassword", () => {
    isTrue(validators.isStrongPassword()('%2%k{7BsL"M%Kd6e'));
    testInvalid(validators.isStrongPassword()("s"));
  });
  it("isSurrogatePair", () => {
    isTrue(validators.isSurrogatePair()("𠮷野𠮷"));
    testInvalid(validators.isSurrogatePair()("吉野竈"));
  });
  it("isTime", () => {
    isTrue(validators.isTime()("23:59"));
    testInvalid(validators.isTime()("07:00 PM"));
  });
  it("isURL", () => {
    isTrue(validators.isURL()("ex.com"));
    isTrue(validators.isURL()("ftp://ex.com"));
    testInvalid(validators.isURL()("http://@foobar.com"));
  });
  it("isTaxID", () => {
    isTrue(validators.isTaxID({ locale: "bg-BG" })("7501010010"));
    testInvalid(validators.isTaxID()(""));
  });
  it("isUUID", () => {
    isTrue(validators.isUUID()("A987FBC9-4BED-3078-CF07-9141BA07C9F3"));
    testInvalid(validators.isUUID({ version: 1 })("A987FBC9-4BED-2078-CF07-9141BA07C9F3"));
  });
  it("isVAT", () => {
    isTrue(validators.isVAT({ countryCode: "AT" })("ATU12345678"));
    testInvalid(validators.isVAT({ countryCode: "NL" })("ATU12345678"));
  });
  it("isWhitelisted", () => {
    isTrue(validators.isWhitelisted({ chars: "abcdefghijklmnopqrstuvwxyz" })("foo"));
    testInvalid(validators.isWhitelisted({ chars: "abcdefghijklmnopqrstuvwxyz" })("é"));
  });
  it("matches", () => {
    isTrue(validators.matches({ pattern: /^fo{2}$/i })("Foo"));
    testInvalid(validators.matches({ pattern: /^fo{2}$/i })("Bar"));
  });
  it("isSlug", () => {
    isTrue(validators.isSlug()("foo-bar"));
    testInvalid(validators.isSlug()("foo bar"));
  });
  it("isEmail", () => {
    isTrue(validators.isEmail()("test123+ext@gmail.com"));
    testInvalid(validators.isEmail()("@invalid.com"));
  });
});
