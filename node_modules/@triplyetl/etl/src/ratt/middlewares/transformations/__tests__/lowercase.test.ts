import chai from "chai";
import chaiAsPromised from "chai-as-promised";
import { addValue, lowercase } from "../index.js";
import { str } from "../../../index.js";
import { getEtlForTesting } from "../../../__tests__/getEtlForTesting.js";

chai.use(chaiAsPromised);
const assert = chai.assert;

describe("Transform.lowercase ", () => {
  it("should work on static strings", () => {
    const strings = ["String", "string", "StrinG", "STRING", "€", "&hellip;"].map((val) => str(val));
    const etl = getEtlForTesting();
    strings.forEach((val, ix) => etl.use(lowercase({ key: `key${ix}`, content: val })));
    etl.use([
      async (ctx, next) => {
        strings.forEach((val, ix) => {
          assert.equal(ctx.getString(`key${ix}`), val.toLowerCase());
        });
        return next();
      },
    ]);
    return etl.run();
  });

  it("should work on keys", () => {
    const strings = ["String", "string", "StrinG", "STRING", "€", "&hellip;"].map((val) => str(val));
    const etl = getEtlForTesting();
    strings.forEach((val, ix) => {
      etl.use(addValue({ key: `key${ix}`, content: val }));
      etl.use(lowercase({ key: `key${ix}_lowercase`, content: `key${ix}` }));
    });
    etl.use([
      async (ctx, next) => {
        strings.forEach((content, ix) => {
          assert.equal(ctx.getString(`key${ix}`), content.toString());
          assert.equal(ctx.getString(`key${ix}_lowercase`), content.toLowerCase());
        });
        return next();
      },
    ]);
    return etl.run();
  });
});
