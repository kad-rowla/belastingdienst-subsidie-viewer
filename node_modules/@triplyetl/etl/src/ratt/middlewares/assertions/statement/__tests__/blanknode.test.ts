import chai from "chai";
import chaiAsPromised from "chai-as-promised";
import { Etl, forEach, fromJson, compareGraphs, Source } from "../../../../../generic/index.js";
import { a, sdo } from "@triplyetl/vocabularies";
import { iri } from "../../term/index.js";
import blanknode from "../blanknode.js";
import pairs from "../pairs.js";
chai.use(chaiAsPromised);
const expect = chai.expect;

describe("Testing blanknode (as SkolemIri's)", () => {
  it("Should work with skolem iri's", async () => {
    const app = new Etl({ baseIri: "http://ex.com" });
    app.use(
      fromJson({
        firstname: "Donald",
        lastname: "Duck",
        nephews: [{ name: "Huey" }, { name: "Dewey" }, { name: "Louie" }],
      }),
      pairs(
        iri(app.standardPrefixes.id, "$recordId"),
        [a, sdo.Person],
        [sdo.givenName, "firstname"],
        [sdo.familyName, "lastname"]
      ),
      forEach("nephews", [
        blanknode(
          iri(app.standardPrefixes.id, "$root.$recordId"),
          sdo.relatedTo,
          [a, sdo.Person],
          [sdo.givenName, "name"]
        ),
      ]),
      compareGraphs(Source.file("src/sparql/middlewares/__tests__/resources/donald-duck.trig"))
    );
    return expect(app.run()).to.eventually.be.fulfilled;
  });
});
