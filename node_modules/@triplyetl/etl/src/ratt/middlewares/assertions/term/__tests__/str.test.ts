import { assert, expect } from "chai";
import { isString } from "lodash-es";
import str, { isStatic } from "../str.js";

describe("Str (Static string)", () => {
  it("should create a StaticString object which behaves like a normal String", () => {
    const staticString = str("hello world");
    expect(typeof staticString === "object").to.be.true;
    expect(typeof staticString.static === "object").to.be.true;
    expect(typeof staticString.key === "string").to.be.true;
    expect(isStatic(staticString)).to.be.true;
    expect(isStatic("")).to.be.false;
    expect(staticString.static.toString() === new String("hello world").toString()).to.be.true;
  });

  it("should be a string according to lodash", () => {
    assert.isTrue(isString(str("test")));
  });

  it("should capitialize strings", () => {
    expect(str("hello").capitalize()).equal("Hello");
    expect(str("HELLO").capitalize()).equal("Hello");
    expect(str("ëë").capitalize()).equal("Ëë");
    expect(str("hello world").capitalize()).equal("Hello world");
    for (let i = 65; i < 1000; i++) {
      const char = String.fromCharCode(i);
      expect(str(char).capitalize()).equal(char.toUpperCase());
    }
  });
  it("should capitialize all words in a strings", () => {
    expect(str("hello").capitalizeWords()).equal("Hello");
    expect(str("hello world").capitalizeWords()).equal("Hello World");
    expect(str("HELLO WORLD").capitalizeWords()).equal("Hello World");
    expect(str("ë ï é").capitalizeWords()).equal("Ë Ï É");
  });
});
