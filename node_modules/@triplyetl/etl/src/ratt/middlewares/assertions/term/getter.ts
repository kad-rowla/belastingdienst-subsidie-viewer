import { DefaultGraph, Literal, NamedNode } from "@triplydb/data-factory/Terms.js";
import Context, { Key } from "../../../../generic/Context.js";
export type TermGetter<E extends NamedNode | Literal | DefaultGraph | Key> =
  | ((ctx: Context) => Array<Exclude<E, Key>>)
  | E;

export function getValFromTermGetter<E extends NamedNode | Literal | DefaultGraph>(
  ctx: Context,
  valueOrFunction: TermGetter<E>
): E[] {
  if (typeof valueOrFunction === "function") {
    return valueOrFunction(ctx);
  } else {
    return [valueOrFunction];
  }
}
