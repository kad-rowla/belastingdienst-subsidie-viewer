import React from "react";
import { EtlError } from "../utils/Error.js";
import ErrorReport from "./components/ErrorReport.js";
export interface State {
  error?: Error | EtlError;
}
class ErrorBoundary extends React.PureComponent<{ children: React.ReactNode }, State> {
  state: State = {};
  componentDidCatch(e: Error | EtlError) {
    this.setState({ error: e });
  }
  static getDerivedStateFromError(error: Error | EtlError) {
    return { error: error };
  }
  render() {
    if (this.state.error) {
      return <ErrorReport error={this.state.error} />;
    }
    return this.props.children;
  }
}
export default ErrorBoundary;
