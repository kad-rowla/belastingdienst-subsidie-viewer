prefix sh: <http://www.w3.org/ns/shacl#>

prefix ex: <https://data.triply.cc/example/>
prefix id: <https://data.triply.cc/example/id/>
prefix shp: <https://data.triply.cc/example/shp/>
prefix rule: <https://data.triply.cc/example/rule/>

shp: {

  shp:A
    a sh:NodeShape;
    sh:order 1;
    sh:rule rule:connect;
    sh:target [
      a sh:SPARQLTarget ;
      sh:select '''
  prefix ex: <https://data.triply.cc/example/>
  select $this where {
    $this a ex:A 
  }
  ''' ].

  shp:B
    a sh:NodeShape;
    sh:order 2;
    sh:rule rule:B, rule:connect;
    sh:target [
      a sh:SPARQLTarget ;
      sh:select '''
  prefix ex: <https://data.triply.cc/example/>
  select $this where {
    $this a ex:B
  }
  ''' ] .

  rule:B
    a sh:SPARQLRule;
      sh:order 1;
    sh:construct '''
    prefix ex: <https://data.triply.cc/example/>
    construct {
      $this ex:connectedTo ?connected 
    } where {
      ?connected a ex:A
    }
  '''.

  rule:connect
  a sh:SPARQLRule;
    sh:order 2 ;
    sh:construct '''
  prefix ex: <https://data.triply.cc/example/>
  construct {
    $this ex:isConnected ?bound
  } where {
    $this a ?type .
    optional {
      $this ex:connectedTo ?connected
    }
    bind(if(bound(?connected),true, false) as ?bound)
  }
  '''.
}
