import { getFactory } from "@triplydb/data-factory";
import { DATA_TYPE_NAME_MAPPING, isNumericDatatype, } from "@triplydb/recognized-datatypes/utils/constants.js";
import { mapValues } from "lodash-es";
export const MAX_RESULTS_IN_MEMORY = 10000;
const quadTerms = {
    subject: ["NamedNode", "BlankNode"],
    predicate: ["NamedNode"],
    object: ["NamedNode", "BlankNode", "Literal"],
    graph: ["NamedNode", "DefaultGraph"],
};
export const dataFactory = getFactory({
    quadTerms,
});
export const dataFactoryWithoutValidation = getFactory({
    quadTerms,
    skipValidation: true,
});
export const dataFactoryWithRewriteOfInvalidLiterals = getFactory({
    quadTerms,
    onInvalidLiteral: (opts) => ({ replaceWith: dataFactoryWithoutValidation.literal(opts.value + "") }),
});
export const DEFAULT_BASE_IRI = "https://www.triplydb.com/";
export const DATA_TYPES = mapValues(DATA_TYPE_NAME_MAPPING, (value) => dataFactory.namedNode(value));
export function isNaN(term) {
    return term.termType === "Literal" && isNumericDatatype(term.datatype) && term.value === "NaN";
}
export const sh = dataFactory.prefixer("http://www.w3.org/ns/shacl#");
export const geof = dataFactory.prefixer("http://www.opengis.net/def/function/geosparql/");
export const triplyFunctions = dataFactory.prefixer("https://triplydb.com/Triply/function/");
export const GEO_FUNCTIONS = {
    PROJECT: triplyFunctions("project"),
    TRANSFORM: geof("transform"),
    AREA: geof("area"),
    METRIC_AREA: geof("metricArea"),
};
//# sourceMappingURL=constants.js.map