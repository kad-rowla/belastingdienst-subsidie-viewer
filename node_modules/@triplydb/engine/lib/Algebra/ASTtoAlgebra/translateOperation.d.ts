import { default as SparqlJs } from "sparqljs";
import { InlineData, Operation } from "../Operation.js";
import { Variable } from "../../constants.js";
import * as Terms from "@triplydb/data-factory/Terms.js";
import { ExtraTranslationInfo } from "./index.js";
export declare const UUID_REGEX: RegExp;
export declare function translateSparqljsPatterns(patterns: SparqlJs.Pattern[], info: ExtraTranslationInfo): Operation;
export declare function translateSparqljsPattern(pattern: SparqlJs.Pattern, inputOperation: Operation, info: ExtraTranslationInfo): Operation;
export declare function translatePropertyPath(start: Terms.NamedNode | Terms.Literal | Variable, term: SparqlJs.PropertyPath | SparqlJs.IriTerm, end: Terms.NamedNode | Terms.Literal | Variable): Operation;
export declare function translateTriplePattern(triple: SparqlJs.Triple): Operation;
export declare function translateInlineData(values: InlineData["values"], inputOperation: Operation): Operation;
//# sourceMappingURL=translateOperation.d.ts.map