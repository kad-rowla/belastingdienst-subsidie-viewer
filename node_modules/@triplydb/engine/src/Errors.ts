export class SpeedyError extends Error {}

/** This is an error indicating that speedy received a wrong SPARQL query */
export class SparqlError extends SpeedyError {}

/** Someone used an unknown function inside a query. Needed for SHACL SPARQL functions */
export class UnknownFunctionError extends SparqlError {}

/** This is an error indicating that the query is valid, but speedy doesn't support a feature yet */
export class UnsupportedError extends SpeedyError {}
/** This is a fatal error, something that is a bug and our fault. */
export class FatalError extends SpeedyError {}
export class FederationError extends SparqlError {
  constructor(message: string) {
    super("Something went wrong during query federation: " + message);
  }
}
/** This is a failure in UPDATE error. */
export class UpdateFailureError extends SparqlError {
  constructor(message: string) {
    super("Something went wrong during UPDATE: " + message);
  }
}
/**
 * Until we can use AbortSignal.throwIfAborted (https://nodejs.org/api/globals.html#abortsignalthrowifaborted) in
 * NodeJS 17.3 and above, we're creating our own error object, to be able to differentiate the different errors.
 */
export class AbortSignalError extends Error {
  constructor(message: string) {
    super(message);
  }
}
