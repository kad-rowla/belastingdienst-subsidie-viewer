import { EmbeddedActionsParser, Lexer } from "chevrotain";
export declare class DurationParser extends EmbeddedActionsParser {
    constructor();
    private unsignedNoDecimalPtNumeral;
    private seconds;
    private minutesOnwards;
    private hoursOnwards;
    private duTimeFrag;
    private day;
    private monthOnwards;
    private yearOnwards;
    durationLexicalRep: import("chevrotain").ParserMethod<[only?: "yearMonthDurationLexicalRep" | "dayTimeDurationLexicalRep" | undefined], Duration>;
    yearMonthDurationLexicalRep: import("chevrotain").ParserMethod<[], Duration>;
    dayTimeDurationLexicalRep: import("chevrotain").ParserMethod<[], Duration>;
}
export declare const lexer: Lexer;
export declare const parser: DurationParser;
export declare function durationToCanonical(duration: Duration): string;
export declare function yearMonthDurationToCanonical(duration: Duration): string;
export interface Duration {
    isNegative: boolean;
    months: number;
    seconds: number;
    fraction: string;
}
//# sourceMappingURL=duration.d.ts.map