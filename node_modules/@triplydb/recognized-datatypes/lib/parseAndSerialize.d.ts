import { ParserAndSerializer } from "./index.js";
declare const parsersAndSerializers: {
    "http://www.w3.org/2001/XMLSchema#byte": {
        parse: (lexicalValue: string) => string;
        serialize: (value: string) => string;
    };
    "http://www.w3.org/2001/XMLSchema#base64Binary": {
        parse: (lexicalValue: string) => string;
        serialize: (value: string) => string;
    };
    "http://www.w3.org/2001/XMLSchema#boolean": {
        parse: (lexicalValue: string) => boolean;
        serialize: (value: boolean) => string;
    };
    "http://www.w3.org/2001/XMLSchema#dayTimeDuration": {
        parse: (lexicalValue: string) => import("./xsd/duration.js").Duration;
        serialize: (value: import("./xsd/duration.js").Duration) => string;
    };
    "http://www.w3.org/2001/XMLSchema#date": {
        parse: (lexicalValue: string) => import("./utils/dateTimeHelpers.js").DateTime;
        serialize: (value: import("./utils/dateTimeHelpers.js").DateTime) => string;
    };
    "http://www.w3.org/2001/XMLSchema#dateTime": {
        parse: (lexicalValue: string) => import("./utils/dateTimeHelpers.js").DateTime;
        serialize: (value: import("./utils/dateTimeHelpers.js").DateTime) => string;
    };
    "http://www.w3.org/2001/XMLSchema#dateTimeStamp": {
        parse: (lexicalValue: string) => import("./utils/dateTimeHelpers.js").DateTime;
        serialize: (value: import("./utils/dateTimeHelpers.js").DateTime) => string;
    };
    "http://www.w3.org/2001/XMLSchema#decimal": {
        parse: (lexicalValue: string) => string;
        serialize: (value: string) => string;
    };
    "http://www.w3.org/2001/XMLSchema#double": {
        parse: (lexicalValue: string) => string;
        serialize: (value: string) => string;
    };
    "http://www.w3.org/2001/XMLSchema#duration": {
        parse: (lexicalValue: string) => import("./xsd/duration.js").Duration;
        serialize: (value: import("./xsd/duration.js").Duration) => string;
    };
    "http://www.w3.org/2001/XMLSchema#float": {
        parse: (lexicalValue: string) => string;
        serialize: (value: string) => string;
    };
    "http://www.w3.org/2001/XMLSchema#gDay": {
        parse: (lexicalValue: string) => import("./utils/dateTimeHelpers.js").Day;
        serialize: (value: import("./utils/dateTimeHelpers.js").Day) => string;
    };
    "http://www.w3.org/2001/XMLSchema#gMonth": {
        parse: (lexicalValue: string) => import("./utils/dateTimeHelpers.js").Month;
        serialize: (value: import("./utils/dateTimeHelpers.js").Month) => string;
    };
    "http://www.w3.org/2001/XMLSchema#gMonthDay": {
        parse: (lexicalValue: string) => import("./utils/dateTimeHelpers.js").MonthDay;
        serialize: (value: import("./utils/dateTimeHelpers.js").MonthDay) => string;
    };
    "http://www.w3.org/2001/XMLSchema#gYearMonth": {
        parse: (lexicalValue: string) => import("./utils/dateTimeHelpers.js").YearMonth;
        serialize: (value: import("./utils/dateTimeHelpers.js").YearMonth) => string;
    };
    "http://www.w3.org/2001/XMLSchema#gYear": {
        parse: (lexicalValue: string) => import("./utils/dateTimeHelpers.js").Year;
        serialize: (value: import("./utils/dateTimeHelpers.js").Year) => string;
    };
    "http://www.w3.org/2001/XMLSchema#hexBinary": {
        parse: (lexicalValue: string) => string;
        serialize: (value: string) => string;
    };
    "http://www.w3.org/2001/XMLSchema#int": {
        parse: (lexicalValue: string) => string;
        serialize: (value: string) => string;
    };
    "http://www.w3.org/2001/XMLSchema#integer": {
        parse: (lexicalValue: string) => string;
        serialize: (value: string) => string;
    };
    "http://www.w3.org/1999/02/22-rdf-syntax-ns#langString": ParserAndSerializer<string>;
    "http://www.w3.org/2001/XMLSchema#long": {
        parse: (lexicalValue: string) => string;
        serialize: (value: string) => string;
    };
    "http://www.w3.org/2001/XMLSchema#negativeInteger": {
        parse: (lexicalValue: string) => string;
        serialize: (value: string) => string;
    };
    "http://www.w3.org/2001/XMLSchema#nonNegativeInteger": {
        parse: (lexicalValue: string) => string;
        serialize: (value: string) => string;
    };
    "http://www.w3.org/2001/XMLSchema#nonPositiveInteger": {
        parse: (lexicalValue: string) => string;
        serialize: (value: string) => string;
    };
    "http://www.w3.org/2001/XMLSchema#positiveInteger": {
        parse: (lexicalValue: string) => string;
        serialize: (value: string) => string;
    };
    "http://www.w3.org/2001/XMLSchema#short": {
        parse: (lexicalValue: string) => string;
        serialize: (value: string) => string;
    };
    "http://www.w3.org/2001/XMLSchema#string": ParserAndSerializer<string>;
    "http://www.w3.org/2001/XMLSchema#time": {
        parse: (lexicalValue: string) => import("./utils/dateTimeHelpers.js").Time;
        serialize: (value: import("./utils/dateTimeHelpers.js").Time) => string;
    };
    "http://www.w3.org/2001/XMLSchema#unsignedByte": {
        parse: (lexicalValue: string) => string;
        serialize: (value: string) => string;
    };
    "http://www.w3.org/2001/XMLSchema#unsignedInt": {
        parse: (lexicalValue: string) => string;
        serialize: (value: string) => string;
    };
    "http://www.w3.org/2001/XMLSchema#unsignedLong": {
        parse: (lexicalValue: string) => string;
        serialize: (value: string) => string;
    };
    "http://www.w3.org/2001/XMLSchema#unsignedShort": {
        parse: (lexicalValue: string) => string;
        serialize: (value: string) => string;
    };
    "http://www.w3.org/2001/XMLSchema#yearMonthDuration": {
        parse: (lexicalValue: string) => import("./xsd/duration.js").Duration;
        serialize: (value: import("./xsd/duration.js").Duration) => string;
    };
};
export default parsersAndSerializers;
//# sourceMappingURL=parseAndSerialize.d.ts.map