export declare class BaseParseError extends Error {
    lexicalValue?: string;
    constructor(opts: {
        lexicalValue?: string;
        message: string;
        cause?: any;
    });
}
export declare class StandardParseError extends BaseParseError {
    private _datatype?;
    offset?: number;
    private setMessage;
    constructor(opts: {
        lexicalValue: string;
        offset?: number;
        cause?: any;
    });
    set datatype(datatype: string | undefined);
    get datatype(): string | undefined;
}
export declare class AmbiguousParseError extends BaseParseError {
    possibleValues: any[];
    private _datatype?;
    constructor(opts: {
        lexicalValue: string;
        possibleValues: any[];
    });
    set datatype(datatype: string | undefined);
    get datatype(): string | undefined;
}
export declare class ValueRangeError extends BaseParseError {
    private _datatype?;
    private value;
    constructor(opts: {
        value: unknown;
    });
    set datatype(datatype: string | undefined);
    get datatype(): string | undefined;
}
//# sourceMappingURL=Errors.d.ts.map