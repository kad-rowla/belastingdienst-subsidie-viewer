export interface Month extends MonthUtc, Timezone {
}
interface MonthUtc {
    month: number;
}
export interface MonthDay extends MonthDayUtc, Timezone {
}
interface MonthDayUtc extends DayUtc, MonthUtc {
}
export interface Time extends TimeUtc, Timezone {
}
export interface TimeUtc extends HourMinuteUtc {
    second: number;
    fraction: string;
}
interface Timezone {
    timezone?: number;
}
export interface Year extends Timezone, YearUtc {
}
interface YearUtc {
    year: number;
}
export interface YearMonth extends Timezone, YearMonthUtc {
}
interface YearMonthUtc extends MonthUtc, YearUtc {
}
export interface XsdDate extends DateUtc, Timezone {
}
interface DateUtc extends YearMonthUtc {
    day: number;
}
export interface DateTime extends DateTimeUtc, Timezone {
}
interface DateTimeUtc extends DateUtc, TimeUtc {
}
export interface Day extends DayUtc, Timezone {
}
interface DayUtc {
    day: number;
}
interface HourMinuteUtc {
    hour: number;
    minute: number;
}
export interface MaybeDateTime {
    year?: number;
    month?: number;
    day?: number;
    hour?: number;
    minute?: number;
    second?: number;
    fraction?: string;
    timezone?: number;
}
export declare function newDateTime(args: {
    year?: number | null;
    month?: number | null;
    day?: number | null;
    hour?: number | null;
    minute?: number | null;
    second?: number | null;
    fraction?: string | null;
    timezone?: number | null;
}): MaybeDateTime;
export declare function unsignedTwoDigitFragmentToCanonical(i: number): string;
export {};
//# sourceMappingURL=dateTimeHelpers.d.ts.map