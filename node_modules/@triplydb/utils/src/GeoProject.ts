import proj4 from "proj4";
import eachDeep from "deepdash/eachDeep";
import { Coordinates, Geometry } from "@triplydb/recognized-datatypes/wkt.js";
import { isSupportedCrs, crsProjectionDefs, CrsUrl } from "./Crs.js";

proj4.defs(Object.entries(crsProjectionDefs).map(([url, def]) => [url, def.proj4]));

/**
 * Project a geometry to a new CRS
 * The geometry JSON is superset of GeoJSON. Any parsed WKT string (using recognized-datatypes) is supported
 */
export function geoProject<G extends Geometry>(geometry: G, toCrs: CrsUrl): G {
  if (!isSupportedCrs(geometry.crs)) {
    throw new Error(`Projecting of CRS ${geometry.crs} is not supported`);
  }
  if (geometry.crs === toCrs) return geometry;
  try {
    const converter = proj4(geometry.crs, toCrs);
    // For the 'input', apply this mapValuesDeep to the positions [0],[1] only
    const transformedVal = eachDeep(structuredClone(geometry), (value: unknown) => {
      if (Array.isArray(value) && typeof value[0] === "number") {
        const coordinates = value as Coordinates;
        const [x, y] = coordinates;
        const [newX, newY] = (converter.forward as any)([x, y], true);
        coordinates[0] = newX;
        coordinates[1] = newY;
        return false;
      }
    });

    // Change the CRS
    transformedVal.crs = toCrs;

    return transformedVal;
  } catch (e) {
    /**
     * The proj4j lib seems to throw strings sometimes...
     * This catch clause should never trigger, but encountered this during development
     * so added this check for good measure
     */
    if (typeof e === "string") throw new Error("Failed to project coordinates: " + e);
    throw e;
  }
}
