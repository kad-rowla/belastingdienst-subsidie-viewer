import proj4 from "proj4";
import eachDeep from "deepdash/eachDeep";
import { isSupportedCrs, crsProjectionDefs } from "./Crs.js";
proj4.defs(Object.entries(crsProjectionDefs).map(([url, def]) => [url, def.proj4]));
export function geoProject(geometry, toCrs) {
    if (!isSupportedCrs(geometry.crs)) {
        throw new Error(`Projecting of CRS ${geometry.crs} is not supported`);
    }
    if (geometry.crs === toCrs)
        return geometry;
    try {
        const converter = proj4(geometry.crs, toCrs);
        const transformedVal = eachDeep(structuredClone(geometry), (value) => {
            if (Array.isArray(value) && typeof value[0] === "number") {
                const coordinates = value;
                const [x, y] = coordinates;
                const [newX, newY] = converter.forward([x, y], true);
                coordinates[0] = newX;
                coordinates[1] = newY;
                return false;
            }
        });
        transformedVal.crs = toCrs;
        return transformedVal;
    }
    catch (e) {
        if (typeof e === "string")
            throw new Error("Failed to project coordinates: " + e);
        throw e;
    }
}
//# sourceMappingURL=GeoProject.js.map