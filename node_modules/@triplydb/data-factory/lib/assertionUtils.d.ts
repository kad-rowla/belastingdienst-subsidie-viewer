import { BaseQuad, QuadPosition, Term, TermType, TermTypeToTerm } from "./Terms.js";
export declare function isValidTerm<T extends TermType>(term: Term, allowedTermTypes: T[]): term is TermTypeToTerm[T];
export declare function assertIsValidTerm<T extends TermType>(term: Term, allowedTermTypes: T[], position: QuadPosition): asserts term is TermTypeToTerm[T];
export declare function assertIsValidQuad<S extends BaseQuad["subject"]["termType"], P extends BaseQuad["predicate"]["termType"], O extends BaseQuad["object"]["termType"], G extends BaseQuad["graph"]["termType"]>(allowedTerms: {
    subject: Array<S>;
    predicate: Array<P>;
    object: Array<O>;
    graph: Array<G>;
} | undefined, subject: TermTypeToTerm[S], predicate: TermTypeToTerm[P], object: TermTypeToTerm[O], graph?: TermTypeToTerm[G]): void;
export declare function isValidQuad<S extends BaseQuad["subject"]["termType"], P extends BaseQuad["predicate"]["termType"], O extends BaseQuad["object"]["termType"], G extends BaseQuad["graph"]["termType"]>(allowedTerms: {
    subject: Array<S>;
    predicate: Array<P>;
    object: Array<O>;
    graph: Array<G>;
} | undefined, subject: TermTypeToTerm[S], predicate: TermTypeToTerm[P], object: TermTypeToTerm[O], graph?: TermTypeToTerm[G]): boolean | undefined;
//# sourceMappingURL=assertionUtils.d.ts.map