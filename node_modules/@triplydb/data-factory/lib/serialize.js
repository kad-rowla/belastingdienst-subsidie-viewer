import N3Writer from "./forked/N3Writer.js";
import N3StreamWriter from "./forked/N3StreamWriter.js";
function getHandleGraphNameOpt(format) {
    return format === "n-triples" || format === "turtle" ? "drop" : "keep";
}
export function serializeToString(quads, format) {
    return new Promise((resolve, reject) => {
        const writer = new N3Writer({ format, handleGraphNames: getHandleGraphNameOpt(format) });
        writer.addQuads(quads);
        writer.end(function (error, result) {
            if (error)
                return reject(error);
            resolve(result);
        });
    });
}
export function getStreamWriter(opts) {
    return new N3StreamWriter({
        handleGraphNames: getHandleGraphNameOpt(opts?.format),
        ...opts,
    });
}
function isFileDescriptorOrStream(fd) {
    return (fd !== undefined &&
        fd !== null &&
        (typeof fd === "number" || typeof fd.pipe === "function"));
}
export function getWriter(fdOrOpts, opts) {
    if (isFileDescriptorOrStream(fdOrOpts)) {
        return new N3Writer(fdOrOpts, {
            handleGraphNames: getHandleGraphNameOpt(opts?.format),
            ...opts,
        });
    }
    return new N3Writer({
        handleGraphNames: getHandleGraphNameOpt(fdOrOpts?.format),
        ...fdOrOpts,
    });
}
//# sourceMappingURL=serialize.js.map