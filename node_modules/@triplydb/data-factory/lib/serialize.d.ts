/// <reference types="node" resolution-mode="require"/>
import { Quad } from "./Terms.js";
import * as stream from "stream";
import { NamedNode } from "./Terms.js";
import { Writer as N3WriterInterface, StreamWriter as N3StreamWriterInterface } from "n3";
export type Format = "turtle" | "trig" | "n-triples" | "n-quads";
export type Prefixes = {
    [name: string]: NamedNode;
};
export declare function serializeToString(quads: Quad[], format?: Format): Promise<string>;
export interface StreamWriterOptions {
    prefixes?: Prefixes;
    format?: Format;
}
export declare function getStreamWriter(opts?: StreamWriterOptions): N3StreamWriterInterface<import("rdf-js").Quad>;
export interface WriterOptions {
    end?: boolean | undefined;
    prefixes?: Prefixes;
    format?: Format;
}
export declare function getWriter(fileDescriptorOrStream: stream.Stream | number, opts?: WriterOptions): N3WriterInterface;
export declare function getWriter(opts?: WriterOptions): N3WriterInterface;
//# sourceMappingURL=serialize.d.ts.map