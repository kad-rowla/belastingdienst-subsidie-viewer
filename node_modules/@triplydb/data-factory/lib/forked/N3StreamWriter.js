import { Transform } from "readable-stream";
import N3Writer from "./N3Writer.js";
export default class N3StreamWriter extends Transform {
    constructor(options) {
        super({ encoding: "utf8", writableObjectMode: true });
        const writer = (this._writer = new N3Writer({
            write: (quad, encoding, callback) => {
                this.push(quad);
                callback && callback();
            },
            end: (callback) => {
                this.push(null);
                callback && callback();
            },
        }, options));
        this._transform = (quad, encoding, done) => {
            writer.addQuad(quad, done);
        };
        this._flush = (done) => {
            writer.end(done);
        };
    }
    import(stream) {
        stream.on("data", (quad) => {
            this.write(quad);
        });
        stream.on("end", () => {
            this.end();
        });
        stream.on("error", (error) => {
            this.emit("error", error);
        });
        stream.on("prefix", (prefix, iri) => {
            this._writer.addPrefix(prefix, iri);
        });
        return this;
    }
}
//# sourceMappingURL=N3StreamWriter.js.map